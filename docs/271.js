(self.webpackChunkfrontboard=self.webpackChunkfrontboard||[]).push([[271],{9180:(Q,F,U)=>{var B={"./Actions.md":[1429,429],"./Chips.md":[6373,373],"./Datagrid.md":[4212,212],"./DateField.md":[5946,946],"./Example.md":[4388,388],"./Fields.md":[5661,661],"./Inputs.md":[3409,409],"./Scheme.md":[8855,855],"./Selector.md":[9645,645],"./Tabs.md":[1416,416]};function s(Q){if(!U.o(B,Q))return Promise.resolve().then((()=>{var F=new Error("Cannot find module '"+Q+"'");throw F.code="MODULE_NOT_FOUND",F}));var F=B[Q],s=F[0];return U.e(F[1]).then((()=>U(s)))}s.keys=()=>Object.keys(B),s.id=9180,Q.exports=s},3800:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   A: () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var vue__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(9840);\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (vue__WEBPACK_IMPORTED_MODULE_0__[\"default\"].component('SnapViewer', {\n  components: {},\n  props: {\n    value: {\n      type: String,\n      default: null\n    }\n  },\n  data: () => ({\n    html: undefined\n  }),\n  watch: {},\n  created() {\n    const exports = {};\n    eval(this.value); // eslint-disable-line no-eval\n    const snaps = exports;\n    const sanitizer = /(<div\\n(?:\\s*.*[^/][^>]\\n)*\\s*)(\\/>)/gm;\n    const blocks = Object.entries(snaps).map(_ref => {\n      let [snapId, snapHtml] = _ref;\n      const sanitized = snapHtml.replace(sanitizer, '$1></div>');\n      return '<div class=\"c-snap-viewer__block\"><h1 class=\"c-snap-viewer__title\">' + snapId + '</h1><div class=\"c-snap-viewer__snap\">' + sanitized + '</div></div>';\n    });\n    const html = '<body>' + blocks.join('') + '</body>';\n    const parser = new DOMParser();\n    const serializer = new XMLSerializer();\n    const domObject = parser.parseFromString(html || '', 'text/html');\n    const sanitized = serializer.serializeToString(domObject);\n    this.html = sanitized;\n  },\n  beforeDestroy() {},\n  methods: {}\n}));//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzgwMC5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBT0E7QUFDQSxpRUFBQUEsMkNBQUEsQ0FBQUMsU0FBQTtFQUNBQyxVQUFBLEdBQ0E7RUFDQUMsS0FBQTtJQUNBQyxLQUFBO01BQUFDLElBQUEsRUFBQUMsTUFBQTtNQUFBQyxPQUFBO0lBQUE7RUFDQTtFQUNBQyxJQUFBLEVBQUFBLENBQUE7SUFDQUMsSUFBQSxFQUFBQztFQUNBO0VBQ0FDLEtBQUEsR0FDQTtFQUNBQyxRQUFBO0lBQ0EsTUFBQUMsT0FBQTtJQUNBQyxJQUFBLE1BQUFWLEtBQUE7SUFDQSxNQUFBVyxLQUFBLEdBQUFGLE9BQUE7SUFFQSxNQUFBRyxTQUFBO0lBQ0EsTUFBQUMsTUFBQSxHQUFBQyxNQUFBLENBQUFDLE9BQUEsQ0FBQUosS0FBQSxFQUFBSyxHQUFBLENBQUFDLElBQUE7TUFBQSxLQUFBQyxNQUFBLEVBQUFDLFFBQUEsSUFBQUYsSUFBQTtNQUNBLE1BQUFHLFNBQUEsR0FBQUQsUUFBQSxDQUFBRSxPQUFBLENBQUFULFNBQUE7TUFDQSwrRUFBQU0sTUFBQSw4Q0FBQUUsU0FBQTtJQUNBO0lBQ0EsTUFBQWYsSUFBQSxjQUFBUSxNQUFBLENBQUFTLElBQUE7SUFFQSxNQUFBQyxNQUFBLE9BQUFDLFNBQUE7SUFDQSxNQUFBQyxVQUFBLE9BQUFDLGFBQUE7SUFDQSxNQUFBQyxTQUFBLEdBQUFKLE1BQUEsQ0FBQUssZUFBQSxDQUFBdkIsSUFBQTtJQUNBLE1BQUFlLFNBQUEsR0FBQUssVUFBQSxDQUFBSSxpQkFBQSxDQUFBRixTQUFBO0lBRUEsS0FBQXRCLElBQUEsR0FBQWUsU0FBQTtFQUNBO0VBQ0FVLGNBQUEsR0FDQTtFQUNBQyxPQUFBLEdBQ0E7QUFDQSxFQUFFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZnJvbnRib2FyZC9zcmMvdmlld3MvU25hcFZpZXdlci52dWU/MmM4YiJdLCJzb3VyY2VzQ29udGVudCI6WyI8dGVtcGxhdGU+XG4gIDxkaXYgY2xhc3M9XCJjLXNuYXAtdmlld2VyXCI+XG4gICAgPGRpdiBjbGFzcz1cImMtc25hcC12aWV3ZXJfX3BhZ2VcIiB2LWh0bWw9XCJodG1sXCI+PC9kaXY+XG4gIDwvZGl2PlxuPC90ZW1wbGF0ZT5cblxuPHNjcmlwdD5cbmltcG9ydCBWdWUgZnJvbSAndnVlJ1xuZXhwb3J0IGRlZmF1bHQgVnVlLmNvbXBvbmVudCgnU25hcFZpZXdlcicsIHtcbiAgY29tcG9uZW50czoge1xuICB9LFxuICBwcm9wczoge1xuICAgIHZhbHVlOiB7IHR5cGU6IFN0cmluZywgZGVmYXVsdDogbnVsbCB9XG4gIH0sXG4gIGRhdGE6ICgpID0+ICh7XG4gICAgaHRtbDogdW5kZWZpbmVkXG4gIH0pLFxuICB3YXRjaDoge1xuICB9LFxuICBjcmVhdGVkICgpIHtcbiAgICBjb25zdCBleHBvcnRzID0ge31cbiAgICBldmFsKHRoaXMudmFsdWUpIC8vIGVzbGludC1kaXNhYmxlLWxpbmUgbm8tZXZhbFxuICAgIGNvbnN0IHNuYXBzID0gZXhwb3J0c1xuXG4gICAgY29uc3Qgc2FuaXRpemVyID0gLyg8ZGl2XFxuKD86XFxzKi4qW14vXVtePl1cXG4pKlxccyopKFxcLz4pL2dtXG4gICAgY29uc3QgYmxvY2tzID0gT2JqZWN0LmVudHJpZXMoc25hcHMpLm1hcCgoW3NuYXBJZCwgc25hcEh0bWxdKSA9PiB7XG4gICAgICBjb25zdCBzYW5pdGl6ZWQgPSBzbmFwSHRtbC5yZXBsYWNlKHNhbml0aXplciwgJyQxPjwvZGl2PicpXG4gICAgICByZXR1cm4gJzxkaXYgY2xhc3M9XCJjLXNuYXAtdmlld2VyX19ibG9ja1wiPjxoMSBjbGFzcz1cImMtc25hcC12aWV3ZXJfX3RpdGxlXCI+JyArIHNuYXBJZCArICc8L2gxPjxkaXYgY2xhc3M9XCJjLXNuYXAtdmlld2VyX19zbmFwXCI+JyArIHNhbml0aXplZCArICc8L2Rpdj48L2Rpdj4nXG4gICAgfSlcbiAgICBjb25zdCBodG1sID0gJzxib2R5PicgKyBibG9ja3Muam9pbignJykgKyAnPC9ib2R5PidcblxuICAgIGNvbnN0IHBhcnNlciA9IG5ldyBET01QYXJzZXIoKVxuICAgIGNvbnN0IHNlcmlhbGl6ZXIgPSBuZXcgWE1MU2VyaWFsaXplcigpXG4gICAgY29uc3QgZG9tT2JqZWN0ID0gcGFyc2VyLnBhcnNlRnJvbVN0cmluZyhodG1sIHx8ICcnLCAndGV4dC9odG1sJylcbiAgICBjb25zdCBzYW5pdGl6ZWQgPSBzZXJpYWxpemVyLnNlcmlhbGl6ZVRvU3RyaW5nKGRvbU9iamVjdClcblxuICAgIHRoaXMuaHRtbCA9IHNhbml0aXplZFxuICB9LFxuICBiZWZvcmVEZXN0cm95ICgpIHtcbiAgfSxcbiAgbWV0aG9kczoge1xuICB9XG59KVxuPC9zY3JpcHQ+XG4iXSwibmFtZXMiOlsiVnVlIiwiY29tcG9uZW50IiwiY29tcG9uZW50cyIsInByb3BzIiwidmFsdWUiLCJ0eXBlIiwiU3RyaW5nIiwiZGVmYXVsdCIsImRhdGEiLCJodG1sIiwidW5kZWZpbmVkIiwid2F0Y2giLCJjcmVhdGVkIiwiZXhwb3J0cyIsImV2YWwiLCJzbmFwcyIsInNhbml0aXplciIsImJsb2NrcyIsIk9iamVjdCIsImVudHJpZXMiLCJtYXAiLCJfcmVmIiwic25hcElkIiwic25hcEh0bWwiLCJzYW5pdGl6ZWQiLCJyZXBsYWNlIiwiam9pbiIsInBhcnNlciIsIkRPTVBhcnNlciIsInNlcmlhbGl6ZXIiLCJYTUxTZXJpYWxpemVyIiwiZG9tT2JqZWN0IiwicGFyc2VGcm9tU3RyaW5nIiwic2VyaWFsaXplVG9TdHJpbmciLCJiZWZvcmVEZXN0cm95IiwibWV0aG9kcyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///3800\n")},7831:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   A: () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _services_APP__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(9464);\n/* harmony import */ var vue__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(9840);\n/* harmony import */ var _tiptap_vue_2__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(4642);\n\n\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  name: 'Highligther',\n  components: {\n    NodeViewWrapper: _tiptap_vue_2__WEBPACK_IMPORTED_MODULE_1__/* .NodeViewWrapper */ .VR,\n    NodeViewContent: _tiptap_vue_2__WEBPACK_IMPORTED_MODULE_1__/* .NodeViewContent */ .$p\n  },\n  props: _tiptap_vue_2__WEBPACK_IMPORTED_MODULE_1__/* .nodeViewProps */ .en,\n  data() {\n    return {\n      showCodeView: undefined,\n      errors: [],\n      warnings: [],\n      fullScreen: false,\n      languages: this.extension.options.lowlight.listLanguages()\n    };\n  },\n  created() {\n    this.lastContent = this.node.textContent;\n    document.addEventListener('vue:error', this.onError);\n    document.addEventListener('vue:warn', this.onWarn);\n    // document.addEventListener('showCodeView', this.onShowCodeView)\n  },\n  mounted() {\n    this.editor.on('update', this.run);\n    // this.onShowCodeView()\n    this.run(true);\n  },\n  beforeDestroy() {\n    this.editor.off('update', this.run);\n    document.removeEventListener('vue:error', this.onError);\n    document.removeEventListener('vue:warn', this.onWarn);\n    // document.removeEventListener('showCodeView', this.onShowCodeView)\n  },\n  computed: {\n    options() {\n      return [{\n        text: 'auto',\n        value: null\n      }, {\n        text: 'html',\n        value: 'html'\n      }, {\n        text: 'ruby',\n        value: 'ruby'\n      }, {\n        text: 'javascript',\n        value: 'javascript'\n      }, {\n        text: 'json',\n        value: 'json'\n      }, {\n        text: 'vue',\n        value: 'vue'\n      }, {\n        text: 'bash',\n        value: 'bash'\n      }\n      // ...this.languages.map(language => ({text: language, value: language}))\n      ];\n    },\n    selectedLanguage: {\n      get() {\n        return this.node.attrs.language;\n      },\n      set(language) {\n        this.updateAttributes({\n          language\n        });\n        this.run(true);\n      }\n    },\n    isHTML() {\n      return this.selectedLanguage === 'html';\n    },\n    isWebcomponent() {\n      return this.selectedLanguage === 'vue' || this.selectedLanguage === 'webcomponent'; // Review\n    },\n    isRunable() {\n      return this.isHTML || this.isWebcomponent;\n    }\n  },\n  methods: {\n    /*\n    onShowCodeView () {\n      this.showCodeView = localStorage.getItem('showCodeView') === 'true'\n    },\n    */\n    toggleCodeView() {\n      // localStorage.setItem('showCodeView', !this.showCodeView)\n      // document.dispatchEvent(new Event('showCodeView'))\n      this.showCodeView = !this.showCodeView;\n    },\n    onError(event) {\n      const {\n        error,\n        vm,\n        info\n      } = event.detail;\n      if (vm && vm.closestComponent && vm.closestComponent('Runner') === this.lastRunner) {\n        this.destroyRunner();\n        this.errors.push(error.toString());\n      }\n    },\n    onWarn(event) {\n      const {\n        message,\n        vm,\n        trace\n      } = event.detail;\n      if (vm && vm.closestComponent && vm.closestComponent('Runner') === this.lastRunner) {\n        this.destroyRunner();\n        this.warnings.push(message.toString());\n      }\n    },\n    click() {\n      window.Highligther = this;\n    },\n    async run(force) {\n      const content = this.node.textContent;\n      if (force !== true && content === this.lastContent) return;\n      this.destroyRunner();\n      this.errors = [];\n      this.warnings = [];\n      await this.$nextTick();\n      if (this.isHTML) {\n        return this.runWebcomponent();\n      } else if (this.isWebcomponent) {\n        return this.runWebcomponent();\n      }\n    },\n    /*\n    runHTML () {\n      const self = this\n      const content = this.node.textContent\n      const template = this.lastContent = content\n      const base = document.createElement('div')\n      this.$refs.mounter.appendChild(base)\n      const lastRunner = new Vue({\n        name: 'Runner',\n        template: '<div>' + template + '</div>',\n        data: {},\n        created () {\n          self.lastRunner = this\n        },\n        el: base\n      })\n    },\n    */\n    destroyRunner() {\n      if (this.lastRunner) {\n        // this.lastRunner.$destroy() // TODO: REview weird error\n        this.$refs.mounter.textContent = '';\n      }\n    },\n    parseWebcomponent(webcomponent) {\n      try {\n        const webcomponentRegex = /(?:<template>\\s*((?:.|\\n)*)\\s*<\\/template>)\\s*(?:<script>\\s*((?:.|\\n)*)\\s*<\\/script>)?\\s*(?:<style>\\s*((?:.|\\n)*)\\s*<\\/style>)?\\s*/gm;\n        const [, template, js, css] = webcomponentRegex.exec(webcomponent);\n        return {\n          template,\n          js,\n          css\n        };\n      } catch (error) {\n        throw new Error('Invalid Webcomponent format');\n      }\n    },\n    runWebcomponent() {\n      const self = this;\n      const content = this.node.textContent;\n      try {\n        const webcomponent = this.lastContent = content;\n        const {\n          template,\n          js,\n          css\n        } = this.parseWebcomponent(webcomponent);\n        const base = document.createElement('div');\n        const style = document.createElement('style');\n        style.type = 'text/css';\n        style.textContent = css;\n        const component = document.createElement('component');\n        base.appendChild(style);\n        base.appendChild(component);\n        this.$refs.mounter.appendChild(base);\n        const evalConfig = js ? eval(js) : {}; // eslint-disable-line no-eval\n        const config = evalConfig.data ? evalConfig : {\n          data: evalConfig\n        };\n        Object.assign(config.data, {\n          APP: _services_APP__WEBPACK_IMPORTED_MODULE_0__[\"default\"],\n          window\n        });\n        const lastRunner = new vue__WEBPACK_IMPORTED_MODULE_2__[\"default\"](Object.assign({}, config, {\n          name: 'Runner',\n          template: '<div>' + template + '</div>',\n          created() {\n            self.lastRunner = this;\n            if (typeof config.created === 'function') config.created.call(this);\n          },\n          el: component\n        }));\n      } catch (error) {\n        error.message = 'Highligther Error creating runner: ' + error.message;\n        this.errors.push(error.toString());\n        console.error(error);\n      }\n    }\n  }\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///7831\n")},9267:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  "default": () => (/* binding */ Frontboard)\n});\n\n;// CONCATENATED MODULE: ./node_modules/babel-loader/lib/index.js!./node_modules/vue-loader/lib/loaders/templateLoader.js??ruleSet[1].rules[2]!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/views/Frontboard.vue?vue&type=template&id=078e54f4\nvar render = function render() {\n  var _vm = this,\n    _c = _vm._self._c;\n  return !_vm.isHidden ? _c(\'div\', {\n    staticClass: "--ds c-frontboard",\n    class: {\n      \'v-darkmode\': _vm.darkModeActive\n    }\n  }, [_c(\'div\', {\n    staticClass: "c-frontboard__toolbar"\n  }, [_c(\'div\', [_vm._m(0), _vm._v(" "), _c(\'span\', {\n    staticClass: "c-frontboard__title"\n  }, [_vm._v(_vm._s(_vm.title))])]), _vm._v(" "), _c(\'div\', [_c(\'div\', {\n    staticClass: "c-frontboard__darkmode",\n    on: {\n      "click": _vm.darkmodeToggle\n    }\n  }, [_vm.darkModeActive ? _c(\'span\', {\n    staticClass: "fi fi-rs-toggle-on"\n  }) : _c(\'span\', {\n    staticClass: "fi fi-rs-toggle-off"\n  }), _vm._v("\\n        Dark mode\\n      ")]), _vm._v(" "), _c(\'div\', {\n    staticClass: "c-frontboard__darkmode",\n    on: {\n      "click": function ($event) {\n        return _vm.palette.toggle();\n      }\n    }\n  }, [_vm.palette.active ? _c(\'span\', {\n    staticClass: "fi fi-rs-toggle-on"\n  }) : _c(\'span\', {\n    staticClass: "fi fi-rs-toggle-off"\n  }), _vm._v("\\n        Palette\\n      ")]), _vm._v(" "), _c(\'div\', {\n    staticClass: "c-frontboard__exit",\n    on: {\n      "click": _vm.exit\n    }\n  }, [_vm._v("Exit")])])]), _vm._v(" "), _c(\'div\', {\n    staticClass: "c-frontboard__main"\n  }, [_c(\'div\', {\n    staticClass: "c-frontboard__main-contents"\n  }, [_c(\'div\', {\n    staticClass: "c-frontboard__menu"\n  }, _vm._l(_vm.options, function (option) {\n    return _c(\'div\', [_c(\'div\', {\n      staticClass: "c-frontboard__option__handler",\n      class: {\n        \'active\': !option.options && _vm.currentRoute && option === _vm.currentRoute\n      },\n      on: {\n        "click": function ($event) {\n          option.options ? option.opened = !option.opened : _vm.load(option);\n        }\n      }\n    }, [_vm._v(_vm._s(option.name))]), _vm._v(" "), option.opened ? _c(\'div\', {\n      staticClass: "c-frontboard__options"\n    }, _vm._l(option.options, function (suboption) {\n      return _c(\'div\', {\n        staticClass: "c-frontboard__options__item",\n        class: {\n          \'active\': _vm.currentRoute && suboption === _vm.currentRoute\n        },\n        on: {\n          "click": function ($event) {\n            return _vm.load(suboption);\n          }\n        }\n      }, [_vm._v(_vm._s(suboption.name))]);\n    }), 0) : _vm._e()]);\n  }), 0), _vm._v(" "), _c(\'div\', {\n    staticClass: "c-frontboard__body"\n  }, [_vm.currentRoute ? _c(_vm.currentRoute.component, _vm._b({\n    key: _vm.currentRoute.path,\n    tag: "component"\n  }, \'component\', _vm.currentRoute.attrs, false)) : _vm._e()], 1)])]), _vm._v(" "), _c(\'Palette\')], 1) : _vm._e();\n};\nvar staticRenderFns = [function () {\n  var _vm = this,\n    _c = _vm._self._c;\n  return _c(\'span\', {\n    staticClass: "c-frontboard__logo"\n  }, [_c(\'span\', [_vm._v("🦦")]), _vm._v(" Frontboard "), _c(\'i\', {\n    staticClass: "fi fi-rr-check"\n  })]);\n}];\n\n;// CONCATENATED MODULE: ./src/views/Frontboard.vue?vue&type=template&id=078e54f4\n\n// EXTERNAL MODULE: ./node_modules/axios/index.js\nvar axios = __webpack_require__(8266);\nvar axios_default = /*#__PURE__*/__webpack_require__.n(axios);\n;// CONCATENATED MODULE: ./node_modules/babel-loader/lib/index.js!./node_modules/vue-loader/lib/loaders/templateLoader.js??ruleSet[1].rules[2]!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/views/richEditor/FileLoader.vue?vue&type=template&id=010e03e1\nvar FileLoadervue_type_template_id_010e03e1_render = function render() {\n  var _vm = this,\n    _c = _vm._self._c;\n  return _c(\'div\', {\n    staticClass: "c-file-loader"\n  }, [_vm.contents !== undefined ? _c(\'div\', {\n    staticClass: "c-file-loader__content"\n  }, [_vm.ext === \'md\' ? _c(\'RichEditor\', {\n    attrs: {\n      "file": _vm.file,\n      "from-memory": !!_vm.fromMemory\n    },\n    on: {\n      "input": _vm.save,\n      "clearMemory": _vm.onClearMemory\n    },\n    model: {\n      value: _vm.contents,\n      callback: function ($$v) {\n        _vm.contents = $$v;\n      },\n      expression: "contents"\n    }\n  }) : _vm.ext === \'vue\' ? _c(\'ComponentViewer\', {\n    attrs: {\n      "file": _vm.file,\n      "from-memory": !!_vm.fromMemory\n    },\n    on: {\n      "clearMemory": _vm.onClearMemory\n    },\n    model: {\n      value: _vm.contents,\n      callback: function ($$v) {\n        _vm.contents = $$v;\n      },\n      expression: "contents"\n    }\n  }) : _vm.ext === \'snap\' ? _c(\'SnapViewer\', {\n    model: {\n      value: _vm.contents,\n      callback: function ($$v) {\n        _vm.contents = $$v;\n      },\n      expression: "contents"\n    }\n  }) : _c(\'div\', [_vm._v("Unsupported file extension " + _vm._s(_vm.path))])], 1) : _vm._e()]);\n};\nvar FileLoadervue_type_template_id_010e03e1_staticRenderFns = [];\n\n// EXTERNAL MODULE: ./src/services/APP.js\nvar APP = __webpack_require__(9464);\n;// CONCATENATED MODULE: ./node_modules/babel-loader/lib/index.js!./node_modules/vue-loader/lib/loaders/templateLoader.js??ruleSet[1].rules[2]!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/views/richEditor/RichEditor.vue?vue&type=template&id=d7ff1d9c\nvar RichEditorvue_type_template_id_d7ff1d9c_render = function render() {\n  var _vm = this,\n    _c = _vm._self._c,\n    _setup = _vm._self._setupProxy;\n  return _c(\'div\', {\n    staticClass: "c-rich-editor"\n  }, [_c(\'div\', {\n    staticClass: "c-rich-editor__top"\n  }, [_c(\'div\', {\n    staticClass: "c-rich-editor__toolbar"\n  }, [_c(\'span\', {\n    staticClass: "c-rich-editor__btn-group"\n  }, [_c(\'button\', {\n    class: _vm.editor.isActive(\'bold\') ? _vm.activeClass : null,\n    attrs: {\n      "title": "Bold"\n    },\n    on: {\n      "mousedown": function ($event) {\n        $event.preventDefault();\n        $event.stopPropagation();\n        return _vm.editor.commands.toggleBold();\n      }\n    }\n  }, [_c(\'span\', {\n    staticClass: "fi fi-rs-bold"\n  })]), _vm._v(" "), _c(\'button\', {\n    class: _vm.editor.isActive(\'italic\') ? _vm.activeClass : null,\n    attrs: {\n      "title": "Italic"\n    },\n    on: {\n      "mousedown": function ($event) {\n        $event.preventDefault();\n        $event.stopPropagation();\n        return _vm.editor.commands.toggleItalic();\n      }\n    }\n  }, [_c(\'span\', {\n    staticClass: "fi fi-rs-italic"\n  })]), _vm._v(" "), _c(\'button\', {\n    class: _vm.editor.isActive(\'strike\') ? _vm.activeClass : null,\n    attrs: {\n      "title": "Strike"\n    },\n    on: {\n      "mousedown": function ($event) {\n        $event.preventDefault();\n        $event.stopPropagation();\n        return _vm.editor.commands.toggleStrike();\n      }\n    }\n  }, [_c(\'span\', {\n    staticClass: "fi fi-rs-strikethrough"\n  })]), _vm._v(" "), _c(\'button\', {\n    class: _vm.editor.isActive(\'underline\') ? _vm.activeClass : null,\n    attrs: {\n      "title": "Underline"\n    },\n    on: {\n      "mousedown": function ($event) {\n        $event.preventDefault();\n        $event.stopPropagation();\n        return _vm.editor.commands.toggleUnderline();\n      }\n    }\n  }, [_c(\'span\', {\n    staticClass: "fi fi-rs-underline"\n  })]), _vm._v(" "), _c(\'button\', {\n    class: _vm.editor.isActive(\'highlight\') ? _vm.activeClass : null,\n    attrs: {\n      "title": "Highlight"\n    },\n    on: {\n      "mousedown": function ($event) {\n        $event.preventDefault();\n        $event.stopPropagation();\n        return _vm.editor.commands.toggleHighlight();\n      }\n    }\n  }, [_c(\'span\', {\n    staticClass: "fi fi-rs-highlighter-line"\n  })]), _vm._v(" "), _c(\'button\', {\n    class: _vm.editor.isActive(\'code\') ? _vm.activeClass : null,\n    attrs: {\n      "title": "code"\n    },\n    on: {\n      "mousedown": function ($event) {\n        $event.preventDefault();\n        $event.stopPropagation();\n        return _vm.editor.commands.toggleCode();\n      }\n    }\n  }, [_c(\'span\', {\n    staticClass: "fi fi-rs-code-simple"\n  })]), _vm._v(" "), _c(\'button\', {\n    class: _vm.editor.isActive(\'link\') ? _vm.activeClass : null,\n    attrs: {\n      "title": "link"\n    },\n    on: {\n      "mousedown": function ($event) {\n        $event.preventDefault();\n        $event.stopPropagation();\n        return _vm.toggleLinkUrl.apply(null, arguments);\n      }\n    }\n  }, [_c(\'span\', {\n    staticClass: "fi fi-rs-link"\n  })])]), _vm._v(" "), _c(\'span\', {\n    staticClass: "c-rich-editor__btn-group"\n  }, [_c(\'button\', {\n    class: _vm.editor.isActive(\'codeBlock\') ? _vm.activeClass : null,\n    attrs: {\n      "title": "Code block"\n    },\n    on: {\n      "mousedown": function ($event) {\n        $event.preventDefault();\n        $event.stopPropagation();\n        return _vm.editor.commands.toggleCodeBlock();\n      }\n    }\n  }, [_c(\'span\', {\n    staticClass: "fi fi-rs-rectangle-code"\n  })]), _vm._v(" "), _c(\'button\', {\n    class: _vm.editor.isActive(\'paragraph\') ? _vm.activeClass : null,\n    attrs: {\n      "title": "Paragraph"\n    },\n    on: {\n      "mousedown": function ($event) {\n        $event.preventDefault();\n        $event.stopPropagation();\n        return _vm.editor.commands.setParagraph();\n      }\n    }\n  }, [_c(\'span\', {\n    staticClass: "fi fi-rs-paragraph"\n  })]), _vm._v(" "), _c(\'button\', {\n    class: _vm.editor.isActive(\'heading\', {\n      level: 1\n    }) ? _vm.activeClass : null,\n    attrs: {\n      "title": "H1"\n    },\n    on: {\n      "mousedown": function ($event) {\n        $event.preventDefault();\n        $event.stopPropagation();\n        return _vm.editor.commands.toggleHeading({\n          level: 1\n        });\n      }\n    }\n  }, [_c(\'span\', {\n    staticClass: "fi fi-rs-h1"\n  })]), _vm._v(" "), _c(\'button\', {\n    class: _vm.editor.isActive(\'heading\', {\n      level: 2\n    }) ? _vm.activeClass : null,\n    attrs: {\n      "title": "H2"\n    },\n    on: {\n      "mousedown": function ($event) {\n        $event.preventDefault();\n        $event.stopPropagation();\n        return _vm.editor.commands.toggleHeading({\n          level: 2\n        });\n      }\n    }\n  }, [_c(\'span\', {\n    staticClass: "fi fi-rs-h2"\n  })]), _vm._v(" "), _c(\'button\', {\n    class: _vm.editor.isActive(\'heading\', {\n      level: 3\n    }) ? _vm.activeClass : null,\n    attrs: {\n      "title": "H3"\n    },\n    on: {\n      "mousedown": function ($event) {\n        $event.preventDefault();\n        $event.stopPropagation();\n        return _vm.editor.commands.toggleHeading({\n          level: 3\n        });\n      }\n    }\n  }, [_c(\'span\', {\n    staticClass: "fi fi-rs-h3"\n  })]), _vm._v(" "), _c(\'button\', {\n    class: _vm.editor.isActive(\'heading\', {\n      level: 4\n    }) ? _vm.activeClass : null,\n    attrs: {\n      "title": "H4"\n    },\n    on: {\n      "mousedown": function ($event) {\n        $event.preventDefault();\n        $event.stopPropagation();\n        return _vm.editor.commands.toggleHeading({\n          level: 4\n        });\n      }\n    }\n  }, [_c(\'span\', {\n    staticClass: "fi fi-rs-h4"\n  })]), _vm._v(" "), _c(\'button\', {\n    class: _vm.editor.isActive(\'blockquote\') ? _vm.activeClass : null,\n    attrs: {\n      "title": "Blockquote"\n    },\n    on: {\n      "mousedown": function ($event) {\n        $event.preventDefault();\n        $event.stopPropagation();\n        return _vm.editor.commands.toggleBlockquote();\n      }\n    }\n  }, [_c(\'span\', {\n    staticClass: "fi fi-rs-block-quote"\n  })])]), _vm._v(" "), _c(\'span\', {\n    staticClass: "c-rich-editor__btn-group"\n  }, [_c(\'button\', {\n    attrs: {\n      "title": "Horizontal rule"\n    },\n    on: {\n      "click": function ($event) {\n        return _vm.editor.commands.setHorizontalRule();\n      }\n    }\n  }, [_c(\'span\', {\n    staticClass: "fi fi-rs-horizontal-rule"\n  })]), _vm._v(" "), _c(\'button\', {\n    class: _vm.editor.isActive(\'bulletList\') ? _vm.activeClass : null,\n    attrs: {\n      "title": "Bullet list"\n    },\n    on: {\n      "mousedown": function ($event) {\n        $event.preventDefault();\n        $event.stopPropagation();\n        return _vm.editor.commands.toggleBulletList();\n      }\n    }\n  }, [_c(\'span\', {\n    staticClass: "fi fi-rs-list"\n  })]), _vm._v(" "), _c(\'button\', {\n    class: _vm.editor.isActive(\'orderedList\') ? _vm.activeClass : null,\n    attrs: {\n      "title": "Ordered list"\n    },\n    on: {\n      "mousedown": function ($event) {\n        $event.preventDefault();\n        $event.stopPropagation();\n        return _vm.editor.commands.toggleOrderedList();\n      }\n    }\n  }, [_c(\'span\', {\n    staticClass: "fi fi-rs-bars-sort"\n  })]), _vm._v(" "), _c(\'button\', {\n    class: _vm.editor.isActive(\'taskList\') ? _vm.activeClass : null,\n    attrs: {\n      "title": "Task list"\n    },\n    on: {\n      "mousedown": function ($event) {\n        $event.preventDefault();\n        $event.stopPropagation();\n        return _vm.editor.commands.toggleTaskList();\n      }\n    }\n  }, [_c(\'span\', {\n    staticClass: "fi fi-rs-list-check"\n  })])]), _vm._v(" "), _c(\'span\', {\n    staticClass: "c-rich-editor__btn-group"\n  }, [_c(\'button\', {\n    attrs: {\n      "title": "Undo"\n    },\n    on: {\n      "click": function ($event) {\n        return _vm.editor.commands.undo();\n      }\n    }\n  }, [_c(\'span\', {\n    staticClass: "fi fi-rs-undo"\n  })]), _vm._v(" "), _c(\'button\', {\n    attrs: {\n      "title": "Redo"\n    },\n    on: {\n      "click": function ($event) {\n        return _vm.editor.commands.redo();\n      }\n    }\n  }, [_c(\'span\', {\n    staticClass: "fi fi-rs-redo"\n  })]), _vm._v(" "), _c(\'button\', {\n    class: _vm.mdView ? _vm.activeClass : null,\n    attrs: {\n      "title": "Markdown view"\n    },\n    on: {\n      "click": function ($event) {\n        (_vm.mdView = !_vm.mdView) && (_vm.htmlView = false);\n      }\n    }\n  }, [_c(\'span\', {\n    staticClass: "fi fi-rs-file-code"\n  })]), _vm._v(" "), !_vm.autosave ? [_c(\'button\', {\n    class: !_vm.pristine ? _vm.activeClass : null,\n    attrs: {\n      "title": !_vm.pristine ? \'Saved\' : \'Unsaved\'\n    },\n    on: {\n      "click": _vm.save\n    }\n  }, [_c(\'span\', {\n    staticClass: "fi fi-rs-disk"\n  })])] : _vm._e(), _vm._v(" "), _c(\'div\', {\n    staticClass: "c-rich-editor__autosave c-rich-editor__flag",\n    class: _vm.autosave ? _vm.activeClass : null,\n    on: {\n      "click": _vm.toggleAutosave\n    }\n  }, [_vm.autosave ? _c(\'span\', {\n    staticClass: "fi fi-rs-toggle-on"\n  }) : _c(\'span\', {\n    staticClass: "fi fi-rs-toggle-off"\n  }), _vm._v(" "), _c(\'span\', [_vm._v("Autosave")])])], 2), _vm._v(" "), _vm.linkUrlVisible ? _c(\'input\', {\n    directives: [{\n      name: "model",\n      rawName: "v-model",\n      value: _vm.linkUrl,\n      expression: "linkUrl"\n    }],\n    ref: "linkActivator",\n    attrs: {\n      "type": "text",\n      "placeholder": "http://"\n    },\n    domProps: {\n      "value": _vm.linkUrl\n    },\n    on: {\n      "keydown": [function ($event) {\n        if (!$event.type.indexOf(\'key\') && _vm._k($event.keyCode, "enter", 13, $event.key, "Enter")) return null;\n        $event.preventDefault();\n        return _vm.setLinkUrl(false);\n      }, function ($event) {\n        if (!$event.type.indexOf(\'key\') && _vm._k($event.keyCode, "esc", 27, $event.key, ["Esc", "Escape"])) return null;\n        return _vm.setLinkUrl(true);\n      }],\n      "blur": function ($event) {\n        return _vm.setLinkUrl(false);\n      },\n      "input": function ($event) {\n        if ($event.target.composing) return;\n        _vm.linkUrl = $event.target.value;\n      }\n    }\n  }) : _vm._e()]), _vm._v(" "), _vm.fromMemory ? _c(\'div\', {\n    staticClass: "c-rich-editor__memory"\n  }, [_vm._v("Saved on local memory "), _c(\'span\', {\n    on: {\n      "click": function ($event) {\n        return _vm.$emit(\'clearMemory\');\n      }\n    }\n  }, [_vm._v("click here")]), _vm._v(" to restore original content.")]) : _vm._e()]), _vm._v(" "), _c(\'draggable\', {\n    staticClass: "c-rich-editor__sections-tabs c-tabs c-dragable",\n    attrs: {\n      "tag": "menu",\n      "draggable": ".c-draggable__item",\n      "list": _vm.sections\n    },\n    on: {\n      "end": _vm.onSectionsChange\n    }\n  }, [_vm._l(_vm.sections, function (section, sectionIndex) {\n    return _c(\'li\', {\n      staticClass: "c-draggable__item"\n    }, [_c(\'span\', {\n      staticClass: "c-action v-semi"\n    }, [_c(\'span\', {\n      domProps: {\n        "innerHTML": _vm._s(section.title || \'Untitled\')\n      },\n      on: {\n        "click": function ($event) {\n          return _vm.loadSection(sectionIndex);\n        }\n      }\n    }), _vm._v(" "), _c(\'button\', {\n      staticClass: "c-chip",\n      on: {\n        "click": function ($event) {\n          $event.preventDefault();\n          return _vm.removeSection(sectionIndex);\n        }\n      }\n    }, [_c(\'span\', {\n      staticClass: "fi fi-rr-cross-small"\n    })])])]);\n  }), _vm._v(" "), _c(\'li\', {\n    attrs: {\n      "slot": "footer"\n    },\n    slot: "footer"\n  }, [_c(\'button\', {\n    staticClass: "c-action v-semi",\n    on: {\n      "click": _vm.addSection\n    }\n  }, [_vm._v("+")])])], 2), _vm._v(" "), !_vm.htmlView && !_vm.mdView ? _c(\'div\', _vm._b({\n    staticClass: "c-rich-editor__document"\n  }, \'div\', _vm.$attrs, false), [_c(\'editor-content\', {\n    staticClass: "c-rich-editor__page",\n    attrs: {\n      "editor": _vm.editor\n    }\n  })], 1) : _vm.htmlView ? _c(\'textarea\', _vm._b({\n    staticClass: "c-rich-editor__textarea",\n    domProps: {\n      "value": _vm.sections[_vm.currentSectionIndex].html\n    },\n    on: {\n      "input": function ($event) {\n        return _vm.$emit(\'input\', $event);\n      }\n    }\n  }, \'textarea\', _vm.$attrs, false)) : _vm.mdView ? _c(\'textarea\', _vm._b({\n    staticClass: "c-rich-editor__textarea",\n    domProps: {\n      "value": _vm.md\n    },\n    on: {\n      "input": function ($event) {\n        return _vm.$emit(\'input\', $event);\n      }\n    }\n  }, \'textarea\', _vm.$attrs, false)) : _vm._e()], 1);\n};\nvar RichEditorvue_type_template_id_d7ff1d9c_staticRenderFns = [];\n\n// EXTERNAL MODULE: ./node_modules/vue/dist/vue.esm.js\nvar vue_esm = __webpack_require__(9840);\n// EXTERNAL MODULE: ./node_modules/@tiptap/vue-2/dist/index.js + 57 modules\nvar dist = __webpack_require__(4642);\n// EXTERNAL MODULE: ./node_modules/@tiptap/starter-kit/dist/index.js + 21 modules\nvar starter_kit_dist = __webpack_require__(5846);\n// EXTERNAL MODULE: ./node_modules/@tiptap/extension-typography/dist/index.js\nvar extension_typography_dist = __webpack_require__(646);\n// EXTERNAL MODULE: ./node_modules/@tiptap/extension-link/dist/index.js + 1 modules\nvar extension_link_dist = __webpack_require__(2127);\n// EXTERNAL MODULE: ./node_modules/@tiptap/extension-underline/dist/index.js\nvar extension_underline_dist = __webpack_require__(8557);\n// EXTERNAL MODULE: ./node_modules/@tiptap/extension-task-list/dist/index.js\nvar extension_task_list_dist = __webpack_require__(4049);\n// EXTERNAL MODULE: ./node_modules/@tiptap/extension-task-item/dist/index.js\nvar extension_task_item_dist = __webpack_require__(3968);\n// EXTERNAL MODULE: ./node_modules/@tiptap/extension-image/dist/index.js\nvar extension_image_dist = __webpack_require__(9622);\n// EXTERNAL MODULE: ./node_modules/@tiptap/extension-highlight/dist/index.js\nvar extension_highlight_dist = __webpack_require__(4225);\n// EXTERNAL MODULE: ./node_modules/@tiptap/extension-code-block-lowlight/dist/index.js\nvar extension_code_block_lowlight_dist = __webpack_require__(907);\n// EXTERNAL MODULE: ./node_modules/@tiptap/core/dist/index.js + 2 modules\nvar core_dist = __webpack_require__(8923);\n// EXTERNAL MODULE: ./node_modules/prosemirror-state/dist/index.js\nvar prosemirror_state_dist = __webpack_require__(5118);\n;// CONCATENATED MODULE: ./src/views/richEditor/lib/tiptapIndent.js\n\n\n/* harmony default export */ const tiptapIndent = (core_dist/* Extension */.YY.create({\n  name: \'indent\',\n  addCommands() {\n    const applyIndent = direction => () => _ref => {\n      let {\n        chain,\n        tr,\n        state,\n        dispatch,\n        editor\n      } = _ref;\n      const selection = state.selection;\n      const doc = state.doc;\n      const from = selection.from;\n      const to = selection.to;\n      if (from && to && selection.$from.parent.type.name === \'codeBlock\') {\n        const position = {\n          from,\n          to\n        };\n        while (position.from > 0 && !/\\n/.test(doc.textBetween(position.from - 1, position.from))) {\n          position.from -= 1;\n        }\n        while (position.to < doc.nodeSize && !/\\n/.test(doc.textBetween(position.to, position.to + 1))) {\n          position.to += 1;\n        }\n        const selectionText = doc.textBetween(position.from, position.to).split(\'\\n\').map(line => {\n          if (direction > 0) {\n            return \'  \' + line;\n          } else {\n            return line.replace(/^( {2}|\\t)/, \'\');\n          }\n        }).join(\'\\n\');\n\n        /* *\n        console.log(\'>>>\', {\n          state,\n          selection,\n          from,\n          to,\n          selectionText\n        })\n        /* */\n\n        const newTr = state.tr.insertText(selectionText, position.from, position.to);\n        const newFrom = newTr.doc.resolve(position.from);\n        const newTo = newTr.doc.resolve(position.from + selectionText.length);\n        const newSelection = new prosemirror_state_dist/* TextSelection */.U3(newFrom, newTo);\n        dispatch(newTr.setSelection(newSelection));\n        return true;\n      }\n    };\n    return {\n      indent: applyIndent(1),\n      outdent: applyIndent(-1)\n    };\n  },\n  addKeyboardShortcuts() {\n    return {\n      Tab: () => {\n        return this.editor.commands.indent();\n      },\n      \'Shift-Tab\': () => {\n        return this.editor.commands.outdent();\n      }\n    };\n  }\n}));\n;// CONCATENATED MODULE: ./node_modules/babel-loader/lib/index.js!./node_modules/vue-loader/lib/loaders/templateLoader.js??ruleSet[1].rules[2]!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/views/richEditor/Highlighter.vue?vue&type=template&id=542c7a0a\nvar Highlightervue_type_template_id_542c7a0a_render = function render() {\n  var _vm = this,\n    _c = _vm._self._c;\n  return _c(\'node-view-wrapper\', {\n    staticClass: "c-hightlighter",\n    class: {\n      \'c-hightlighter--fullscreen\': _vm.fullScreen\n    },\n    nativeOn: {\n      "click": function ($event) {\n        return _vm.click.apply(null, arguments);\n      }\n    }\n  }, [_c(\'div\', {\n    staticClass: "c-hightlighter__toolbar",\n    attrs: {\n      "contenteditable": "false"\n    }\n  }, [_c(\'div\', {\n    staticClass: "c-field v-radius-bottom-none"\n  }, [_c(\'Selector\', {\n    staticClass: "c-hightlighter__selector",\n    attrs: {\n      "options": _vm.options\n    },\n    model: {\n      value: _vm.selectedLanguage,\n      callback: function ($$v) {\n        _vm.selectedLanguage = $$v;\n      },\n      expression: "selectedLanguage"\n    }\n  }), _vm._v(" "), _vm.isRunable ? _c(\'button\', {\n    staticClass: "c-hightlighter__button c-action",\n    on: {\n      "click": _vm.toggleCodeView\n    }\n  }, [_vm._v(_vm._s(_vm.showCodeView ? \'Hide code\' : \'Show code\'))]) : _vm._e(), _vm._v(" "), _c(\'button\', {\n    staticClass: "c-hightlighter__button c-action",\n    on: {\n      "click": function ($event) {\n        _vm.fullScreen = !_vm.fullScreen;\n      }\n    }\n  }, [_vm._v(_vm._s(_vm.fullScreen ? \'Full screen exit\' : \'Full screen\'))])], 1)]), _vm._v(" "), _c(\'pre\', {\n    directives: [{\n      name: "show",\n      rawName: "v-show",\n      value: !_vm.isRunable || _vm.showCodeView,\n      expression: "!isRunable || showCodeView"\n    }],\n    staticClass: "c-hightlighter__hljs hljs",\n    class: {\n      \'c-hightlighter__hljs--runnable\': _vm.isRunable\n    }\n  }, [_c(\'code\', [_c(\'node-view-content\')], 1)]), _vm._v(" "), _c(\'div\', {\n    directives: [{\n      name: "show",\n      rawName: "v-show",\n      value: _vm.isRunable,\n      expression: "isRunable"\n    }],\n    ref: "runner",\n    staticClass: "c-hightlighter__runner",\n    attrs: {\n      "contenteditable": "false"\n    }\n  }, [_vm.errors.length > 0 ? _c(\'div\', _vm._l(_vm.errors, function (error) {\n    return _c(\'pre\', {\n      staticClass: "c-hightlighter__error"\n    }, [_c(\'code\', [_vm._v(_vm._s(error))])]);\n  }), 0) : _vm._e(), _vm._v(" "), _vm.warnings.length > 0 ? _c(\'div\', _vm._l(_vm.warnings, function (warn) {\n    return _c(\'pre\', {\n      staticClass: "c-hightlighter__warning"\n    }, [_c(\'code\', [_vm._v(_vm._s(warn))])]);\n  }), 0) : _vm._e(), _vm._v(" "), _c(\'div\', {\n    ref: "mounter",\n    staticClass: "c-hightlighter__runner__contents"\n  })])]);\n};\nvar Highlightervue_type_template_id_542c7a0a_staticRenderFns = [];\n\n// EXTERNAL MODULE: ./node_modules/babel-loader/lib/index.js!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/views/richEditor/Highlighter.vue?vue&type=script&lang=js\nvar Highlightervue_type_script_lang_js = __webpack_require__(7831);\n;// CONCATENATED MODULE: ./src/views/richEditor/Highlighter.vue?vue&type=script&lang=js\n /* harmony default export */ const richEditor_Highlightervue_type_script_lang_js = (Highlightervue_type_script_lang_js/* default */.A); \n// EXTERNAL MODULE: ./node_modules/vue-loader/lib/runtime/componentNormalizer.js\nvar componentNormalizer = __webpack_require__(4486);\n;// CONCATENATED MODULE: ./src/views/richEditor/Highlighter.vue\n\n\n\n\n\n/* normalize component */\n;\nvar component = (0,componentNormalizer/* default */.A)(\n  richEditor_Highlightervue_type_script_lang_js,\n  Highlightervue_type_template_id_542c7a0a_render,\n  Highlightervue_type_template_id_542c7a0a_staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* harmony default export */ const Highlighter = (component.exports);\n// EXTERNAL MODULE: ./node_modules/lowlight/index.js + 41 modules\nvar lowlight = __webpack_require__(2027);\n;// CONCATENATED MODULE: ./src/views/richEditor/lib/webcomponent.highlight.js\n/* harmony default export */ function webcomponent_highlight(hljs) {\n  return {\n    subLanguage: \'xml\',\n    contains: [hljs.COMMENT(\'\x3c!--\', \'--\x3e\', {\n      relevance: 10\n    }), {\n      begin: /^(\\s*)(<script>)/gm,\n      end: /^(\\s*)(<\\/script>)/gm,\n      subLanguage: \'javascript\',\n      excludeBegin: true,\n      excludeEnd: true\n    }, {\n      begin: /^(?:\\s*)(?:<script\\s+lang=(["\'])ts\\1>)/gm,\n      end: /^(\\s*)(<\\/script>)/gm,\n      subLanguage: \'typescript\',\n      excludeBegin: true,\n      excludeEnd: true\n    }, {\n      begin: /^(\\s*)(<style(\\s+scoped)?>)/gm,\n      end: /^(\\s*)(<\\/style>)/gm,\n      subLanguage: \'css\',\n      excludeBegin: true,\n      excludeEnd: true\n    }, {\n      begin: /^(?:\\s*)(?:<style(?:\\s+scoped)?\\s+lang=(["\'])(?:s[ca]ss)\\1(?:\\s+scoped)?>)/gm,\n      end: /^(\\s*)(<\\/style>)/gm,\n      subLanguage: \'scss\',\n      excludeBegin: true,\n      excludeEnd: true\n    }, {\n      begin: /^(?:\\s*)(?:<style(?:\\s+scoped)?\\s+lang=(["\'])stylus\\1(?:\\s+scoped)?>)/gm,\n      end: /^(\\s*)(<\\/style>)/gm,\n      subLanguage: \'stylus\',\n      excludeBegin: true,\n      excludeEnd: true\n    }]\n  };\n}\n// EXTERNAL MODULE: ./node_modules/turndown/lib/turndown.browser.es.js\nvar turndown_browser_es = __webpack_require__(4142);\n;// CONCATENATED MODULE: ./src/views/richEditor/lib/htmlToMarkdown.js\n\nconst turndownService = new turndown_browser_es/* default */.A({\n  headingStyle: \'atx\',\n  hr: \'---\',\n  bulletListMarker: \'*\',\n  codeBlockStyle: \'fenced\',\n  fence: \'```\',\n  emDelimiter: \'_\',\n  strongDelimiter: \'**\',\n  linkStyle: \'inlined\'\n});\nturndownService.addRule(\'strikethrough\', {\n  filter: [\'s\'],\n  replacement: content => {\n    return "~~".concat(content, "~~");\n  }\n});\nturndownService.addRule(\'underline\', {\n  filter: [\'u\'],\n  replacement: content => {\n    return "\\xB7\\xB7".concat(content, "\\xB7\\xB7");\n  }\n});\nturndownService.addRule(\'mark\', {\n  filter: [\'mark\'],\n  replacement: content => {\n    return "!!!".concat(content, "!!!");\n  }\n});\nturndownService.addRule(\'paragraph\', {\n  filter: [\'p\'],\n  replacement: (content, node) => {\n    var _node$parentElement;\n    if (((_node$parentElement = node.parentElement) === null || _node$parentElement === void 0 ? void 0 : _node$parentElement.nodeName) === \'LI\') {\n      return content;\n    }\n    return "\\n\\n".concat(content, "\\n\\n");\n  }\n});\nturndownService.addRule(\'listItem\', {\n  filter: node => {\n    return node.nodeName === \'LI\' && !node.hasAttribute(\'data-type\');\n  },\n  replacement: function (content, node, options) {\n    let listItemPrefix = "".concat(options.bulletListMarker, " ");\n    const parentNode = node.parentNode;\n    content = content.replace(/^\\s*\\n+/, \'\').replace(/\\s*\\n+$/, \'\\n\').replace(/\\s*\\n/gm, \'\\n  \');\n    if ((parentNode === null || parentNode === void 0 ? void 0 : parentNode.nodeName) === \'OL\') {\n      const start = parentNode === null || parentNode === void 0 ? void 0 : parentNode.getAttribute(\'start\');\n      const index = Array.prototype.indexOf.call(parentNode.children, node);\n      listItemPrefix = "".concat(start ? Number(start) + index : index + 1, ". ");\n    }\n    return "".concat(listItemPrefix).concat(content).concat(node.nextSibling && !/\\n$/.test(content) ? \'\\n\' : \'\');\n  }\n});\nturndownService.addRule(\'taskListItem\', {\n  filter: node => {\n    return node.nodeName === \'LI\' && node.getAttribute(\'data-type\') === \'taskItem\';\n  },\n  replacement: function (content, node, options) {\n    let listItemPrefix = "".concat(options.bulletListMarker, " ");\n    const parentNode = node.parentNode;\n    content = content.replace(/^\\s*\\n+/, \'\').replace(/\\s*\\n+$/, \'\').replace(/\\s*\\n/gm, \'\\n  \');\n    if ((parentNode === null || parentNode === void 0 ? void 0 : parentNode.nodeName) === \'UL\') {\n      const checked = node.getAttribute(\'data-checked\');\n      listItemPrefix = "".concat(listItemPrefix).concat(checked === \'true\' ? \'[x]\' : \'[ ]\', " ");\n    }\n    return "".concat(listItemPrefix).concat(content).concat(node.nextSibling && !/\\n$/.test(content) ? \'\\n\' : \'\');\n  }\n});\nfunction htmlToMarkdown(html) {\n  return turndownService.turndown(html);\n}\n/* harmony default export */ const lib_htmlToMarkdown = (htmlToMarkdown);\n// EXTERNAL MODULE: ./node_modules/dompurify/dist/purify.js\nvar purify = __webpack_require__(1897);\n// EXTERNAL MODULE: ./node_modules/marked/lib/marked.esm.js\nvar marked_esm = __webpack_require__(5990);\n;// CONCATENATED MODULE: ./src/views/richEditor/lib/markdownToHtml.js\n\n\nmarked_esm/* marked */.xI.use({\n  gfm: true,\n  extensions: [{\n    name: \'underline\',\n    level: \'inline\',\n    start(src) {\n      var _src$match;\n      const start = (_src$match = src.match(/··[^··\\n]/)) === null || _src$match === void 0 ? void 0 : _src$match.index;\n      return start;\n    },\n    tokenizer(src, tokens) {\n      const rule = /^··([^··\\n]+)··/;\n      const match = rule.exec(src);\n      if (match) {\n        const token = {\n          type: \'underline\',\n          raw: match[0],\n          text: this.lexer.inlineTokens(match[1].trim()),\n          tokens: []\n        };\n        return token;\n      }\n    },\n    renderer(token) {\n      return "<u>".concat(this.parser.parseInline(token.text), "</u>");\n    }\n  }, {\n    name: \'strike\',\n    level: \'inline\',\n    start(src) {\n      var _src$match2;\n      const start = (_src$match2 = src.match(/~~[^~~\\n]/)) === null || _src$match2 === void 0 ? void 0 : _src$match2.index;\n      return start;\n    },\n    tokenizer(src, tokens) {\n      const rule = /^~~([^~~\\n]+)~~/;\n      const match = rule.exec(src);\n      if (match) {\n        const token = {\n          type: \'strike\',\n          raw: match[0],\n          text: this.lexer.inlineTokens(match[1].trim()),\n          tokens: []\n        };\n        return token;\n      }\n    },\n    renderer(token) {\n      return "<s>".concat(this.parser.parseInline(token.text), "</s>");\n    }\n  }, {\n    name: \'mark\',\n    level: \'inline\',\n    start(src) {\n      var _src$match3;\n      const start = (_src$match3 = src.match(/!!![^!!!\\n]/)) === null || _src$match3 === void 0 ? void 0 : _src$match3.index;\n      return start;\n    },\n    tokenizer(src, tokens) {\n      const rule = /^!!!([^!!!\\n]+)!!!/;\n      const match = rule.exec(src);\n      if (match) {\n        const token = {\n          type: \'mark\',\n          raw: match[0],\n          text: this.lexer.inlineTokens(match[1].trim()),\n          tokens: []\n        };\n        return token;\n      }\n    },\n    renderer(token) {\n      return "<mark>".concat(this.parser.parseInline(token.text), "</mark>");\n    }\n  }, {\n    name: \'tasklist\',\n    level: \'block\',\n    start(src) {\n      var _src$match4;\n      const start = (_src$match4 = src.match(/\\* \\[( |x)\\] /)) === null || _src$match4 === void 0 ? void 0 : _src$match4.index;\n      return start;\n    },\n    tokenizer(src, tokens) {\n      const rule = /^(?:\\* \\[( |x)\\] ([^\\n]*)(?:\\n|$))+/;\n      const match = rule.exec(src);\n      if (match) {\n        const token = {\n          type: \'tasklist\',\n          raw: match[0],\n          text: match[0].trim(),\n          tokens: []\n        };\n        this.lexer.inline(token.text, token.tokens);\n        return token;\n      }\n    },\n    renderer(token) {\n      return "<ul data-type=\\"taskList\\">".concat(this.parser.parseInline(token.tokens), "\\n</ul>\\n");\n    }\n  }, {\n    name: \'tasklistitem\',\n    level: \'inline\',\n    childTokens: [\'item\'],\n    start(src) {\n      var _src$match5;\n      const start = (_src$match5 = src.match(/^\\* \\[( |x)\\] /)) === null || _src$match5 === void 0 ? void 0 : _src$match5.index;\n      return start;\n    },\n    tokenizer(src, tokens) {\n      const rule = /^(?:\\* \\[( |x)\\] ([^\\n]*)(?:\\n|$))/;\n      const match = rule.exec(src);\n      if (match) {\n        return {\n          type: \'tasklistitem\',\n          raw: match[0],\n          checked: !!match[1].trim(),\n          item: this.lexer.inlineTokens(match[2].trim())\n        };\n      }\n    },\n    renderer(token) {\n      return "\\n<li data-checked=\\"".concat(token.checked.toString(), "\\" data-type=\\"taskItem\\"><p>").concat(this.parser.parseInline(token.item), "</p></li>");\n    }\n  }],\n  walkTokens(token) {\n    if (token.type === \'strong\') {\n      token.tokens = this.Lexer.lexInline(token.text);\n    }\n  }\n});\nfunction markdownToHtml(markdown) {\n  return purify.sanitize(marked_esm/* marked */.xI.parse(markdown), {\n    USE_PROFILES: {\n      html: true\n    }\n  });\n}\n/* harmony default export */ const lib_markdownToHtml = (markdownToHtml);\n// EXTERNAL MODULE: ./node_modules/vuedraggable/dist/vuedraggable.umd.js\nvar vuedraggable_umd = __webpack_require__(4209);\nvar vuedraggable_umd_default = /*#__PURE__*/__webpack_require__.n(vuedraggable_umd);\n// EXTERNAL MODULE: ./node_modules/highlight.js/styles/atom-one-dark-reasonable.css\nvar atom_one_dark_reasonable = __webpack_require__(7856);\n;// CONCATENATED MODULE: ./node_modules/babel-loader/lib/index.js!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/views/richEditor/RichEditor.vue?vue&type=script&lang=js\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// import Section from \'./tiptapSection\'\n// import Keymap from \'./tiptapKeymap\'\n// import Iframe from \'./tiptapIframe\'\n\n\n\n// const coreExtensions = Object.keys(extensions).filter(key => key !== \'Keymap\' ).map(key => extensions[key])\n// coreExtensions.push(Keymap)\n\n/*\nconst Document = Node.create({\n  name: \'doc\',\n  topNode: true,\n  content: \'section+\'\n})\n*/\n\nlowlight/* lowlight */.l.registerLanguage(\'webcomponent\', webcomponent_highlight);\nlowlight/* lowlight */.l.registerLanguage(\'html\', webcomponent_highlight);\nlowlight/* lowlight */.l.registerAlias(\'webcomponent\', \'vue\');\n// lowlight.registerAlias(\'xml\', \'html\')\n\nconst sectionHash = \'\\n\x3c!--- section ---\x3e\\n\';\n/* harmony default export */ const RichEditorvue_type_script_lang_js = (vue_esm["default"].component(\'RichEditor\', {\n  components: {\n    EditorContent: dist/* EditorContent */.$Z,\n    draggable: (vuedraggable_umd_default())\n  },\n  props: {\n    value: {\n      type: String,\n      default: null\n    },\n    fromMemory: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data: () => ({\n    pristine: true,\n    currentSectionIndex: 0,\n    autosave: localStorage.getItem(\'autosave\') === \'true\',\n    editor: null,\n    htmlView: false,\n    mdView: false,\n    linkUrl: null,\n    linkUrlVisible: false,\n    activeClass: \'active\',\n    sections: [],\n    md: undefined\n  }),\n  watch: {\n    value: {\n      handler(value, oldValue) {\n        this.refresh(value);\n        this.pristine = true;\n      }\n    }\n  },\n  created() {\n    window.RichEditor = this;\n    this.editor = new dist/* Editor */.KE({\n      // content: \'\',\n      enableCoreExtensions: true,\n      extensions: [\n      // ...coreExtensions,\n      starter_kit_dist/* default */.A.configure({\n        // document: false,\n        heading: {\n          levels: [1, 2, 3, 4]\n        },\n        link: {\n          openOnClick: false\n        },\n        codeBlock: false\n      }), extension_typography_dist/* default */.Ay, extension_link_dist/* default */.Ay.configure({\n        openOnClick: false\n      }), extension_underline_dist/* default */.A, extension_task_list_dist/* default */.A.configure({\n        HTMLAttributes: {\n          class: \'c-rich-editor__task-list\'\n        }\n      }), extension_task_item_dist/* default */.Ay.configure({\n        HTMLAttributes: {\n          class: \'c-rich-editor__task-item\'\n        }\n      }),\n      // Document,\n      tiptapIndent, extension_highlight_dist/* default */.Ay,\n      // Iframe,\n      // Section,\n      extension_image_dist/* default */.Ay.configure({\n        allowBase64: true,\n        inline: true\n      }), extension_code_block_lowlight_dist/* default */.A.extend({\n        addNodeView() {\n          return (0,dist/* VueNodeViewRenderer */.$7)(Highlighter);\n        }\n      }).configure({\n        defaultLanguage: \'auto\',\n        lowlight: lowlight/* lowlight */.l\n      })],\n      onUpdate: this.onUpdate\n    });\n    this.refresh(this.value);\n  },\n  mounted() {\n    this.$el.addEventListener(\'keydown\', this.onKeydown);\n  },\n  beforeDestroy() {\n    this.$el.removeEventListener(\'keydown\', this.onKeydown);\n    this.editor.destroy();\n  },\n  methods: {\n    loadSection(sectionIndex) {\n      this.currentSectionIndex = sectionIndex;\n      this.editor.commands.setContent(this.sections[this.currentSectionIndex].html);\n    },\n    addSection() {\n      this.sections.push({\n        html: \'<h1>New section</h1>\',\n        title: \'New section\'\n      });\n      this.loadSection(this.sections.length - 1);\n      this.onUpdate();\n    },\n    removeSection(sectionIndex) {\n      this.sections.splice(sectionIndex, 1);\n      this.onSectionsChange();\n    },\n    /*\n    addIframe() {\n      const url = window.prompt(\'URL\')\n      if (url) {\n        this.editor.chain().focus().setIframe({ src: url }).run()\n      }\n    },\n    */\n    toggleAutosave() {\n      this.autosave = !this.autosave;\n      localStorage.setItem(\'autosave\', this.autosave);\n    },\n    onKeydown(event) {\n      if (event.key === \'s\' && event.metaKey) {\n        event.preventDefault();\n        this.save();\n      }\n    },\n    onUpdate() {\n      const currentEditorHTML = this.editor.getHTML();\n      const currentSection = this.sections[this.currentSectionIndex];\n      currentSection.html = currentEditorHTML;\n      this.onSectionsChange(false);\n      // if (currentSection.html !== currentEditorHTML) {}\n    },\n    onSectionsChange() {\n      let refresh = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n      const md = this.sections.map(section => lib_htmlToMarkdown(section.html)).join(sectionHash);\n      this.pristine = false;\n      if (refresh) {\n        this.refresh(md);\n      } else {\n        this.parseSections(md);\n      }\n      if (this.autosave) this.save();\n    },\n    parseSections(fileContents) {\n      this.sections = fileContents.split(sectionHash).map(sectionContent => {\n        var _exec;\n        return {\n          html: lib_markdownToHtml(sectionContent),\n          title: lib_markdownToHtml(((_exec = /^# (.*)/gm.exec(sectionContent)) === null || _exec === void 0 ? void 0 : _exec[1]) || \'\')\n        };\n      });\n      if (this.currentSectionIndex >= this.sections.length) this.currentSectionIndex = 0;\n      this.md = fileContents;\n    },\n    refresh(fileContents) {\n      if (this.md !== fileContents) {\n        this.parseSections(fileContents);\n        if (this.editor.getHTML() !== this.sections[this.currentSectionIndex].html) {\n          /*\n          const parser = new DOMParser()\n          const serializer = new XMLSerializer()\n          const domObject = parser.parseFromString( this.html || \'\', \'text/html\')\n          const sections = domObject.body.childNodes\n          sections.forEach(child => {\n            if (!child.textContent.trim()) return\n            const section = document.createElement(\'section\')\n            section.append(child.cloneNode(true))\n            child.replaceWith(section)\n          })\n          const sectioned = serializer.serializeToString(domObject)\n          this.editor.commands.setContent(sectioned)\n          */\n          this.loadSection(this.currentSectionIndex);\n        }\n      }\n    },\n    save() {\n      this.pristine = true;\n      this.$emit(\'input\', this.md);\n    },\n    toggleLinkUrl() {\n      this.linkUrl = null;\n      this.linkUrlVisible = !this.linkUrlVisible;\n      if (this.linkUrlVisible) {\n        this.$nextTick(() => {\n          if (this.$refs.linkActivator) {\n            this.$refs.linkActivator.focus();\n          }\n        });\n      }\n      if (this.editor.isActive(\'link\')) {\n        this.linkUrl = this.editor.getAttributes(\'link\').href;\n      }\n    },\n    toggleEditable() {\n      this.editor.setEditable(!this.editor.isEditable);\n    },\n    setLinkUrl(cancel) {\n      if (!cancel) {\n        this.editor.commands.focus();\n        this.editor.commands.setLink({\n          href: this.linkUrl\n        });\n      }\n      this.toggleLinkUrl();\n    },\n    clearLinkUrl() {\n      this.editor.commands.setLink({\n        href: null\n      });\n      this.toggleLinkUrl();\n    }\n  }\n}));\n;// CONCATENATED MODULE: ./src/views/richEditor/RichEditor.vue?vue&type=script&lang=js\n /* harmony default export */ const richEditor_RichEditorvue_type_script_lang_js = (RichEditorvue_type_script_lang_js); \n;// CONCATENATED MODULE: ./src/views/richEditor/RichEditor.vue\n\n\n\n\n\n/* normalize component */\n;\nvar RichEditor_component = (0,componentNormalizer/* default */.A)(\n  richEditor_RichEditorvue_type_script_lang_js,\n  RichEditorvue_type_template_id_d7ff1d9c_render,\n  RichEditorvue_type_template_id_d7ff1d9c_staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* harmony default export */ const RichEditor = (RichEditor_component.exports);\n;// CONCATENATED MODULE: ./node_modules/babel-loader/lib/index.js!./node_modules/vue-loader/lib/loaders/templateLoader.js??ruleSet[1].rules[2]!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/views/ComponentViewer.vue?vue&type=template&id=7d4ab54d\nvar ComponentViewervue_type_template_id_7d4ab54d_render = function render() {\n  var _vm = this,\n    _c = _vm._self._c,\n    _setup = _vm._self._setupProxy;\n  return _c(\'div\', {\n    staticClass: "c-component-viewer"\n  }, [_c(\'div\', [_vm._v(_vm._s(_vm.file.path))]), _vm._v(" "), _c(\'pre\', [_vm._v(_vm._s(_vm.info))])]);\n};\nvar ComponentViewervue_type_template_id_7d4ab54d_staticRenderFns = [];\n\n;// CONCATENATED MODULE: ./node_modules/babel-loader/lib/index.js!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/views/ComponentViewer.vue?vue&type=script&lang=js\n\n\n/* harmony default export */ const ComponentViewervue_type_script_lang_js = (vue_esm["default"].component(\'ComponentViewer\', {\n  components: {},\n  props: {\n    file: Object\n  },\n  data: () => ({\n    info: {},\n    contents: undefined,\n    slotRegex: /<slot.*:?name="([^"]*)"/gm,\n    eventsRegex: /\\$emit\\(\'(.*)\'.*\\)/gm\n  }),\n  created() {\n    window.ComponentViewer = this;\n    this.file.import().then(contents => {\n      this.contents = contents;\n      const component = APP["default"].components[this.file.path.split(\'/\').pop().replace(/\\.vue$/, \'\')];\n      const componentName = component.options.name;\n      this.info.name = componentName;\n      this.info.props = component.options.props;\n      this.info.slots = this.slotRegex.execBatch(contents).map(match => match[1]);\n      this.info.events = this.eventsRegex.execBatch(contents).map(match => match[1]);\n      this.$forceUpdate();\n    });\n  },\n  beforeDestroy() {},\n  methods: {}\n}));\n;// CONCATENATED MODULE: ./src/views/ComponentViewer.vue?vue&type=script&lang=js\n /* harmony default export */ const views_ComponentViewervue_type_script_lang_js = (ComponentViewervue_type_script_lang_js); \n;// CONCATENATED MODULE: ./src/views/ComponentViewer.vue\n\n\n\n\n\n/* normalize component */\n;\nvar ComponentViewer_component = (0,componentNormalizer/* default */.A)(\n  views_ComponentViewervue_type_script_lang_js,\n  ComponentViewervue_type_template_id_7d4ab54d_render,\n  ComponentViewervue_type_template_id_7d4ab54d_staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* harmony default export */ const ComponentViewer = (ComponentViewer_component.exports);\n;// CONCATENATED MODULE: ./node_modules/babel-loader/lib/index.js!./node_modules/vue-loader/lib/loaders/templateLoader.js??ruleSet[1].rules[2]!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/views/SnapViewer.vue?vue&type=template&id=7f9de471\nvar SnapViewervue_type_template_id_7f9de471_render = function render() {\n  var _vm = this,\n    _c = _vm._self._c,\n    _setup = _vm._self._setupProxy;\n  return _c(\'div\', {\n    staticClass: "c-snap-viewer"\n  }, [_c(\'div\', {\n    staticClass: "c-snap-viewer__page",\n    domProps: {\n      "innerHTML": _vm._s(_vm.html)\n    }\n  })]);\n};\nvar SnapViewervue_type_template_id_7f9de471_staticRenderFns = [];\n\n// EXTERNAL MODULE: ./node_modules/babel-loader/lib/index.js!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/views/SnapViewer.vue?vue&type=script&lang=js\nvar SnapViewervue_type_script_lang_js = __webpack_require__(3800);\n;// CONCATENATED MODULE: ./src/views/SnapViewer.vue?vue&type=script&lang=js\n /* harmony default export */ const views_SnapViewervue_type_script_lang_js = (SnapViewervue_type_script_lang_js/* default */.A); \n;// CONCATENATED MODULE: ./src/views/SnapViewer.vue\n\n\n\n\n\n/* normalize component */\n;\nvar SnapViewer_component = (0,componentNormalizer/* default */.A)(\n  views_SnapViewervue_type_script_lang_js,\n  SnapViewervue_type_template_id_7f9de471_render,\n  SnapViewervue_type_template_id_7f9de471_staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* harmony default export */ const SnapViewer = (SnapViewer_component.exports);\n// EXTERNAL MODULE: ./src/services/API.js\nvar API = __webpack_require__(6423);\n;// CONCATENATED MODULE: ./node_modules/babel-loader/lib/index.js!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/views/richEditor/FileLoader.vue?vue&type=script&lang=js\n\n\n\n\n\n/* harmony default export */ const FileLoadervue_type_script_lang_js = ({\n  name: \'FileLoader\',\n  components: {\n    RichEditor: RichEditor,\n    ComponentViewer: ComponentViewer,\n    SnapViewer: SnapViewer\n  },\n  props: {\n    file: {\n      type: Object,\n      required: true\n    }\n  },\n  data: () => ({\n    path: undefined,\n    ext: undefined,\n    contents: undefined,\n    fromMemory: undefined,\n    offline: !APP["default"].isWebpackServe\n  }),\n  created() {\n    console.log(\'new file loader\', this, this.file);\n    this.path = this.file.path;\n    this.ext = this.file.path.split(\'.\').pop();\n    this.open();\n  },\n  mounted() {\n    window.FileLoader = this;\n  },\n  methods: {\n    onClearMemory() {\n      localStorage.removeItem(\'FrontBoardSave:\' + this.path);\n      this.open();\n    },\n    open() {\n      this.contents = undefined;\n      this.fromMemory = undefined;\n      if (this.offline) {\n        const localSaved = localStorage.getItem(\'FrontBoardSave:\' + this.path);\n        if (localSaved) {\n          this.fromMemory = true;\n          this.contents = localSaved;\n        } else {\n          this.file.import().then(contents => {\n            this.contents = contents;\n          });\n        }\n      } else {\n        API["default"].get(\'files/\' + this.path).then(response => {\n          if (this.path === \'.whiteboard.md\' && !response.data) {\n            this.file.import().then(contents => {\n              this.contents = contents;\n            });\n          } else {\n            this.contents = response.data;\n          }\n        });\n      }\n    },\n    save() {\n      if (this.offline) {\n        localStorage.setItem(\'FrontBoardSave:\' + this.path, this.contents);\n        this.fromMemory = true;\n        console.info(\'Saved to local storage\');\n      } else {\n        API["default"].put(\'files/\' + this.path, {\n          contents: this.contents\n        }, {\n          headers: {\n            \'Content-Type\': \'multipart/form-data\'\n          }\n        }).then(response => {\n          console.info(\'Saved to file system\');\n        });\n      }\n    }\n  }\n});\n;// CONCATENATED MODULE: ./src/views/richEditor/FileLoader.vue?vue&type=script&lang=js\n /* harmony default export */ const richEditor_FileLoadervue_type_script_lang_js = (FileLoadervue_type_script_lang_js); \n;// CONCATENATED MODULE: ./src/views/richEditor/FileLoader.vue\n\n\n\n\n\n/* normalize component */\n;\nvar FileLoader_component = (0,componentNormalizer/* default */.A)(\n  richEditor_FileLoadervue_type_script_lang_js,\n  FileLoadervue_type_template_id_010e03e1_render,\n  FileLoadervue_type_template_id_010e03e1_staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* harmony default export */ const FileLoader = (FileLoader_component.exports);\n;// CONCATENATED MODULE: ./node_modules/babel-loader/lib/index.js!./node_modules/vue-loader/lib/loaders/templateLoader.js??ruleSet[1].rules[2]!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/views/StaticDB.vue?vue&type=template&id=e3b0a202\nvar StaticDBvue_type_template_id_e3b0a202_render = function render() {\n  var _vm = this,\n    _c = _vm._self._c;\n  return _c(\'div\', {\n    staticClass: "c-palette__section--staticdb"\n  }, [_c(\'div\', {\n    staticClass: "c-scheme__header"\n  }, [_c(\'div\', {\n    staticClass: "c-scheme__title v-darkmode"\n  }, [_c(\'h2\', [_vm._v("Databases")]), _vm._v(" "), _c(\'Selector\', {\n    attrs: {\n      "use-object": "",\n      "multilevel": "",\n      "options": _vm.collections,\n      "optionText": "name",\n      "optionValue": "id"\n    },\n    scopedSlots: _vm._u([{\n      key: "option",\n      fn: function (_ref) {\n        let {\n          option\n        } = _ref;\n        return [option.hidden ? _c(\'i\', {\n          staticClass: "fi fi-rr-eye-crossed"\n        }, [_vm._v(" ")]) : _vm._e(), _vm._v(_vm._s(option.name))];\n      }\n    }]),\n    model: {\n      value: _vm.currentCollection,\n      callback: function ($$v) {\n        _vm.currentCollection = $$v;\n      },\n      expression: "currentCollection"\n    }\n  }), _vm._v(" "), _c(\'Selector\', {\n    attrs: {\n      "options": [\'ES\', \'EN\']\n    },\n    model: {\n      value: _vm.APP.language,\n      callback: function ($$v) {\n        _vm.$set(_vm.APP, "language", $$v);\n      },\n      expression: "APP.language"\n    }\n  })], 1), _vm._v(" "), _c(\'div\', {\n    staticClass: "c-scheme__toolbar v-darkmode"\n  }, [_c(\'label\', [_c(\'input\', {\n    directives: [{\n      name: "model",\n      rawName: "v-model",\n      value: _vm.palette.showBoth,\n      expression: "palette.showBoth"\n    }],\n    staticClass: "c-checkbox",\n    attrs: {\n      "type": "checkbox"\n    },\n    domProps: {\n      "checked": Array.isArray(_vm.palette.showBoth) ? _vm._i(_vm.palette.showBoth, null) > -1 : _vm.palette.showBoth\n    },\n    on: {\n      "change": function ($event) {\n        var $$a = _vm.palette.showBoth,\n          $$el = $event.target,\n          $$c = $$el.checked ? true : false;\n        if (Array.isArray($$a)) {\n          var $$v = null,\n            $$i = _vm._i($$a, $$v);\n          if ($$el.checked) {\n            $$i < 0 && _vm.$set(_vm.palette, "showBoth", $$a.concat([$$v]));\n          } else {\n            $$i > -1 && _vm.$set(_vm.palette, "showBoth", $$a.slice(0, $$i).concat($$a.slice($$i + 1)));\n          }\n        } else {\n          _vm.$set(_vm.palette, "showBoth", $$c);\n        }\n      }\n    }\n  }), _c(\'i\', {\n    staticClass: "fi fi-rr-table-columns"\n  }, [_vm._v(" ")]), _vm._v("Treeview")]), _vm._v(" "), _c(\'button\', {\n    staticClass: "c-action t-primary v-semi",\n    attrs: {\n      "type": "button"\n    },\n    on: {\n      "click": _vm.save\n    }\n  }, [_vm._v("Save staticDB")])])]), _vm._v(" "), _vm.currentCollection && _vm.currentCollection.Class ? _c(\'SchemeList\', {\n    key: _vm.currentCollection.name,\n    ref: "SchemeViewer",\n    attrs: {\n      "schemeClass": _vm.currentCollection.Class\n    },\n    model: {\n      value: _vm.currentCollection.data,\n      callback: function ($$v) {\n        _vm.$set(_vm.currentCollection, "data", $$v);\n      },\n      expression: "currentCollection.data"\n    }\n  }) : _vm.currentCollection === \'SQLite\' ? [_c(\'SchemeList\', {\n    ref: "SchemeViewer",\n    attrs: {\n      "schemeClass": _vm.APP.models.User,\n      "filterHandler": _vm.filterHandler\n    }\n  })] : _vm.currentCollection ? _c(\'fieldset\', {\n    staticClass: "c-fieldset"\n  }, [_vm._v("Not implemented - config panel")]) : _c(\'fieldset\', {\n    staticClass: "c-fieldset"\n  }, [_vm._v("Select a staticDB collection")])], 2);\n};\nvar StaticDBvue_type_template_id_e3b0a202_staticRenderFns = [];\n\n// EXTERNAL MODULE: ./src/services/Scheme.js\nvar Scheme = __webpack_require__(9964);\n// EXTERNAL MODULE: ./src/services/StaticDB.js\nvar StaticDB = __webpack_require__(1035);\n// EXTERNAL MODULE: ./src/services/palette.js\nvar palette = __webpack_require__(6780);\n;// CONCATENATED MODULE: ./node_modules/babel-loader/lib/index.js!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/views/StaticDB.vue?vue&type=script&lang=js\n\n\n\n\n\n\n\n// Necesito un gestor para esto :/ y tema rutas/state/vars\n// const newurl = window.location.protocol + \'//\' + window.location.host + window.location.pathname + \'?frontboard=\' + this.path\n//   window.history.pushState({ path: newurl }, \'\', newurl)\n// }\n\n/* harmony default export */ const StaticDBvue_type_script_lang_js = ({\n  name: \'Palette\',\n  components: {\n    draggable: (vuedraggable_umd_default())\n  },\n  data: () => ({\n    APP: APP["default"],\n    palette: palette["default"],\n    currentCollection: Object.values(StaticDB["default"].databases).map(database => Object.values(database.collections)).flat().find(collection => collection.id === localStorage.getItem(\'StaticDB:currentCollection\')) || localStorage.getItem(\'StaticDB:currentCollection\')\n  }),\n  created() {\n    window.StaticDB = this;\n  },\n  computed: {\n    collections() {\n      return Object.values(StaticDB["default"].databases).map(database => ({\n        name: database.path,\n        // review, grouped uses default \'text\' accesor, multilevel uses \'name\'. And bad current selection on load\n        options: Object.values(database.collections).toSorted(category => category.hidden ? 1 : -1)\n      }));\n    }\n  },\n  watch: {\n    currentCollection(value) {\n      localStorage.setItem(\'StaticDB:currentCollection\', value && value.id ? value.id : value);\n    }\n  },\n  methods: {\n    cMenu(event) {\n      // @contextmenu.stop.prevent="cMenu"\n      // document.addEventListener(\'contextmenu\', this.cMenu)\n      // event.preventDefault()\n      console.log(\'c-menu\', event);\n    },\n    filterHandler(filters) {\n      /*\n      const query = {}\n      if (filters.length > 0) {\n        console.log(\'filtering\', filters)\n        filters.forEach(filter => {\n          const field = filter.field\n          const key = field.key\n          const value = filter[key]\n          query[key] = filter[key]\n        })\n      }\n      */\n\n      const queryFilter = [];\n      if (filters.length > 0) {\n        console.log(\'filtering\', filters);\n        filters.forEach(filter => {\n          queryFilter.push(filter.map(operand => {\n            const field = operand.field;\n            const key = field.key;\n            const operandValueKeys = Object.keys(operand).filter(key => ![\'field\', \'operator\'].includes(key));\n            const operandValues = Object.fromEntries(operandValueKeys.map(key => [key, operand[key]]));\n            return {\n              [key]: operandValues\n            };\n          }));\n        });\n      }\n      console.log(\'QUERY\', JSON.stringify(queryFilter));\n      return API["default"].get(\'sqlite/users\', {\n        params: {\n          filter: JSON.stringify(queryFilter)\n        }\n      }).then(response => {\n        response.data.forEach(entry => {\n          entry.type = \'User\';\n        });\n        return Scheme["default"].populate(response.data);\n        // console.info(\'Saved\', { formated, stringified })\n      });\n\n      /*\n      [{a:[{between: []]}, {}]\n      [\n        {a: {equal: \'A\'}, b: {like:\'B\'}, c: {between: [1,10], d: {in: [1,2,3]}}},\n        // a = \'A\'\n        // AND b LIKE \'B\'\n        // AND c BETWEEN 1 AND 10\n        // AND d IN (1,2,3)\n        // notEqual !=\n        // less <\n        // greater >\n        // lessOrEqual <=\n        // greaterOrEqual >=\n        {} // OR...\n      ]\n      */\n\n      /*\n      return this.list.filter(entity => {\n        return filters.every(filter => {\n          const field = filter.field\n          const value = filter[field.key]\n          // console.log(\'filter value is\', field, filter, value)\n          if (field.type === Number || field.type === Date) {\n            const greaterThan = Number(filter[\'>\' + field.key]) || undefined //= [undefined, null].includes(entity[\'>\' + field.key]) ? true :\n            const lessThan = Number(filter[\'<\' + field.key]) || undefined\n            const isGreaterThan = [undefined, null].includes(greaterThan) ? true : (entity[field.key] >= greaterThan)\n            const isLessThan = [undefined, null].includes(lessThan) ? true : (entity[field.key] <= lessThan)\n            return isGreaterThan && isLessThan\n          } else if (field.class || field.options) {\n            if (field.multiple) {\n              return entity[field.key].some(entityValue => value.includes(entityValue))\n            } else {\n              return value.includes(entity[field.key])\n            }\n          } else if (!value) {\n            return true\n          } else if (typeof value === \'string\') {\n            return entity[field.key].toLowerCase().includes(value.toLowerCase())\n          } else {\n            // console.log(\'check if for\', field.key, \'item\', entity, \'has\', entity[field.key], \'===\', value)\n            return entity[field.key] === value\n          }\n        })\n      })\n      */\n    },\n    save() {\n      StaticDB["default"].save();\n      /*\n      .then(() => {\n        console.log(\'staticDB saved\')\n      })\n      */\n    }\n  }\n});\n;// CONCATENATED MODULE: ./src/views/StaticDB.vue?vue&type=script&lang=js\n /* harmony default export */ const views_StaticDBvue_type_script_lang_js = (StaticDBvue_type_script_lang_js); \n;// CONCATENATED MODULE: ./src/views/StaticDB.vue\n\n\n\n\n\n/* normalize component */\n;\nvar StaticDB_component = (0,componentNormalizer/* default */.A)(\n  views_StaticDBvue_type_script_lang_js,\n  StaticDBvue_type_template_id_e3b0a202_render,\n  StaticDBvue_type_template_id_e3b0a202_staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* harmony default export */ const views_StaticDB = (StaticDB_component.exports);\n;// CONCATENATED MODULE: ./node_modules/babel-loader/lib/index.js!./node_modules/vue-loader/lib/loaders/templateLoader.js??ruleSet[1].rules[2]!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/views/Palette.vue?vue&type=template&id=14f55da5\nvar Palettevue_type_template_id_14f55da5_render = function render() {\n  var _vm = this,\n    _c = _vm._self._c;\n  return _vm.palette.active ? _c(\'div\', {\n    staticClass: "c-palette"\n  }, [_vm.currentTab === \'CSSVars\' ? _c(\'div\', {\n    staticClass: "c-palette__section"\n  }, [_vm._m(0), _vm._v(" "), _c(\'draggable\', {\n    staticClass: "c-fieldset c-palette__table c-dragable",\n    attrs: {\n      "tag": "fieldset",\n      "draggable": ".c-draggable__item",\n      "handle": ".c-draggable__handler",\n      "list": _vm.palette.baseCSSVars\n    }\n  }, _vm._l(_vm.palette.baseCSSVars, function (cssVar) {\n    return _c(\'div\', {\n      staticClass: "c-fieldset__item c-draggable__item"\n    }, [_c(\'label\', [_c(\'span\', {\n      staticClass: "c-draggable__handler c-draggable__handler--grabber"\n    }), _vm._v(_vm._s(cssVar.name.toSpaces().capitalize()))]), _vm._v(" "), cssVar.format === \'px\' ? [_c(\'div\', {\n      staticClass: "c-field"\n    }, [_c(\'input\', {\n      directives: [{\n        name: "model",\n        rawName: "v-model",\n        value: cssVar.value,\n        expression: "cssVar.value"\n      }],\n      staticClass: "c-input",\n      attrs: {\n        "type": "number",\n        "min": "0",\n        "max": "50"\n      },\n      domProps: {\n        "value": cssVar.value\n      },\n      on: {\n        "input": function ($event) {\n          if ($event.target.composing) return;\n          _vm.$set(cssVar, "value", $event.target.value);\n        }\n      }\n    }), _vm._v(" "), _c(\'input\', {\n      directives: [{\n        name: "model",\n        rawName: "v-model",\n        value: cssVar.value,\n        expression: "cssVar.value"\n      }],\n      attrs: {\n        "type": "range",\n        "min": "0",\n        "max": "50"\n      },\n      domProps: {\n        "value": cssVar.value\n      },\n      on: {\n        "__r": function ($event) {\n          return _vm.$set(cssVar, "value", $event.target.value);\n        }\n      }\n    })])] : cssVar.format === \'color\' ? [_c(\'div\', {\n      staticClass: "c-input"\n    }, [_c(\'input\', {\n      directives: [{\n        name: "model",\n        rawName: "v-model",\n        value: cssVar.value,\n        expression: "cssVar.value"\n      }],\n      attrs: {\n        "type": "color"\n      },\n      domProps: {\n        "value": cssVar.value\n      },\n      on: {\n        "input": function ($event) {\n          if ($event.target.composing) return;\n          _vm.$set(cssVar, "value", $event.target.value);\n        }\n      }\n    })])] : [_c(\'div\', {\n      staticClass: "c-input"\n    }, [_c(\'input\', {\n      directives: [{\n        name: "model",\n        rawName: "v-model",\n        value: cssVar.value,\n        expression: "cssVar.value"\n      }],\n      attrs: {\n        "type": "text"\n      },\n      domProps: {\n        "value": cssVar.value\n      },\n      on: {\n        "input": function ($event) {\n          if ($event.target.composing) return;\n          _vm.$set(cssVar, "value", $event.target.value);\n        }\n      }\n    })])]], 2);\n  }), 0)], 1) : _vm.currentTab === \'Colors\' ? _c(\'div\', {\n    staticClass: "c-palette__section"\n  }, [_vm._m(1), _vm._v(" "), _c(\'fieldset\', {\n    staticClass: "c-fieldset"\n  }, [_c(\'draggable\', {\n    staticClass: "c-palette__table c-dragable",\n    attrs: {\n      "tag": "table",\n      "draggable": ".c-draggable__item",\n      "handle": ".c-draggable__handler",\n      "list": _vm.palette.colors\n    }\n  }, _vm._l(_vm.palette.colors, function (color) {\n    return _c(\'tr\', {\n      key: color.uid,\n      staticClass: "c-draggable__item"\n    }, [_c(\'td\', {\n      staticClass: "c-draggable__handler c-draggable__handler--grabber"\n    }), _vm._v(" "), _c(\'td\', [_c(\'div\', {\n      staticClass: "c-field"\n    }, [_c(\'input\', {\n      directives: [{\n        name: "model",\n        rawName: "v-model",\n        value: color.name,\n        expression: "color.name"\n      }],\n      staticClass: "c-input",\n      attrs: {\n        "type": "text"\n      },\n      domProps: {\n        "value": color.name\n      },\n      on: {\n        "input": function ($event) {\n          if ($event.target.composing) return;\n          _vm.$set(color, "name", $event.target.value);\n        }\n      }\n    }), _vm._v(" "), _c(\'input\', {\n      directives: [{\n        name: "model",\n        rawName: "v-model",\n        value: color.hue,\n        expression: "color.hue"\n      }],\n      staticClass: "c-input",\n      attrs: {\n        "type": "number",\n        "min": "0",\n        "max": "360"\n      },\n      domProps: {\n        "value": color.hue\n      },\n      on: {\n        "input": function ($event) {\n          if ($event.target.composing) return;\n          _vm.$set(color, "hue", $event.target.value);\n        }\n      }\n    }), _vm._v(" "), _c(\'input\', {\n      directives: [{\n        name: "model",\n        rawName: "v-model",\n        value: color.hue,\n        expression: "color.hue"\n      }],\n      attrs: {\n        "type": "range",\n        "min": "0",\n        "max": "360"\n      },\n      domProps: {\n        "value": color.hue\n      },\n      on: {\n        "__r": function ($event) {\n          return _vm.$set(color, "hue", $event.target.value);\n        }\n      }\n    }), _vm._v(" "), _c(\'input\', {\n      directives: [{\n        name: "model",\n        rawName: "v-model",\n        value: color.saturation,\n        expression: "color.saturation"\n      }],\n      staticClass: "c-input",\n      attrs: {\n        "type": "number",\n        "min": "0",\n        "max": "100"\n      },\n      domProps: {\n        "value": color.saturation\n      },\n      on: {\n        "input": function ($event) {\n          if ($event.target.composing) return;\n          _vm.$set(color, "saturation", $event.target.value);\n        }\n      }\n    }), _vm._v(" "), _c(\'input\', {\n      directives: [{\n        name: "model",\n        rawName: "v-model",\n        value: color.saturation,\n        expression: "color.saturation"\n      }],\n      attrs: {\n        "type": "range",\n        "min": "0",\n        "max": "100"\n      },\n      domProps: {\n        "value": color.saturation\n      },\n      on: {\n        "__r": function ($event) {\n          return _vm.$set(color, "saturation", $event.target.value);\n        }\n      }\n    }), _vm._v(" "), _c(\'input\', {\n      directives: [{\n        name: "model",\n        rawName: "v-model",\n        value: color.lightness,\n        expression: "color.lightness"\n      }],\n      staticClass: "c-input",\n      attrs: {\n        "type": "number",\n        "min": "0",\n        "max": "100"\n      },\n      domProps: {\n        "value": color.lightness\n      },\n      on: {\n        "input": function ($event) {\n          if ($event.target.composing) return;\n          _vm.$set(color, "lightness", $event.target.value);\n        }\n      }\n    }), _vm._v(" "), _c(\'input\', {\n      directives: [{\n        name: "model",\n        rawName: "v-model",\n        value: color.lightness,\n        expression: "color.lightness"\n      }],\n      attrs: {\n        "type": "range",\n        "min": "0",\n        "max": "100"\n      },\n      domProps: {\n        "value": color.lightness\n      },\n      on: {\n        "__r": function ($event) {\n          return _vm.$set(color, "lightness", $event.target.value);\n        }\n      }\n    })])]), _vm._v(" "), _vm._l([90, 80, 70, 60, 50, 40, 30, 20, 10], function (level) {\n      return _c(\'td\', {\n        style: {\n          backgroundColor: \'color-mix(in srgb, var(--color-\' + color.name + \'), black \' + level + \'%\'\n        }\n      });\n    }), _vm._v(" "), _c(\'td\'), _vm._v(" "), _vm._l([0], function (level) {\n      return _c(\'td\', {\n        style: {\n          backgroundColor: \'color-mix(in srgb, var(--color-\' + color.name + \'), white \' + level + \'%\'\n        }\n      });\n    }), _vm._v(" "), _c(\'td\'), _vm._v(" "), _vm._l([10, 20, 30, 40, 50, 60, 70, 80, 90, 95], function (level) {\n      return _c(\'td\', {\n        style: {\n          backgroundColor: \'color-mix(in srgb, var(--color-\' + color.name + \'), white \' + level + \'%\'\n        }\n      });\n    })], 2);\n  }), 0), _vm._v(" "), _c(\'button\', {\n    staticClass: "c-action t-primary",\n    attrs: {\n      "type": "button"\n    },\n    on: {\n      "click": function ($event) {\n        return _vm.palette.addColor();\n      }\n    }\n  }, [_vm._v("Add color")]), _vm._v(" "), _vm._m(2)], 1)]) : _vm.currentTab === \'Tones\' ? _c(\'div\', {\n    staticClass: "c-palette__section"\n  }, [_vm._m(3), _vm._v(" "), _c(\'fieldset\', {\n    staticClass: "c-fieldset"\n  }, [_c(\'draggable\', {\n    staticClass: "c-palette__table c-dragable",\n    attrs: {\n      "tag": "table",\n      "draggable": ".c-draggable__item",\n      "handle": ".c-draggable__handler",\n      "list": _vm.palette.colorTones\n    }\n  }, [_vm._l(_vm.palette.colorTones, function (colorTone) {\n    return _c(\'tr\', {\n      key: colorTone.uid,\n      staticClass: "c-draggable__item"\n    }, [_c(\'td\', {\n      staticClass: "c-draggable__handler c-draggable__handler--grabber"\n    }), _vm._v(" "), _c(\'td\', [_c(\'Selector\', {\n      attrs: {\n        "useObject": "",\n        "options": _vm.palette.colors,\n        "optionValue": "name",\n        "optionText": "name"\n      },\n      model: {\n        value: colorTone.color,\n        callback: function ($$v) {\n          _vm.$set(colorTone, "color", $$v);\n        },\n        expression: "colorTone.color"\n      }\n    }), _vm._v(" "), _c(\'input\', {\n      directives: [{\n        name: "model",\n        rawName: "v-model",\n        value: colorTone.name,\n        expression: "colorTone.name"\n      }],\n      staticClass: "c-input",\n      attrs: {\n        "type": "text"\n      },\n      domProps: {\n        "value": colorTone.name\n      },\n      on: {\n        "input": function ($event) {\n          if ($event.target.composing) return;\n          _vm.$set(colorTone, "name", $event.target.value);\n        }\n      }\n    })], 1), _vm._v(" "), _vm._l(_vm.palette.colorShadows, function (colorShadow) {\n      return _c(\'td\', {\n        style: "background-color: var(--color--".concat(colorTone).concat(colorShadow.name !== \'default\' ? \'--\' + colorShadow.name : \'\', ")")\n      });\n    })], 2);\n  }), _vm._v(" "), _c(\'tr\', {\n    attrs: {\n      "slot": "header"\n    },\n    slot: "header"\n  }, [_c(\'td\'), _vm._v(" "), _c(\'td\'), _vm._v(" "), _vm._l(_vm.palette.colorShadows, function (colorShadow) {\n    return _c(\'td\', [_vm._v(_vm._s(colorShadow.name))]);\n  })], 2)], 2), _vm._v(" "), _c(\'button\', {\n    staticClass: "c-action t-primary",\n    attrs: {\n      "type": "button"\n    },\n    on: {\n      "click": function ($event) {\n        return _vm.palette.addColorTone();\n      }\n    }\n  }, [_vm._v("Add tone")])], 1)]) : _vm.currentTab === \'Shadows\' ? _c(\'div\', {\n    staticClass: "c-palette__section"\n  }, [_vm._m(4), _vm._v(" "), _c(\'fieldset\', {\n    staticClass: "c-fieldset"\n  }, [_c(\'table\', {\n    staticClass: "c-palette__table"\n  }, [_c(\'tr\', [_c(\'td\'), _vm._v(" "), _vm._l(_vm.palette.colorTones, function (colorTone) {\n    return _c(\'td\', [_vm._v(_vm._s(colorTone.name))]);\n  })], 2), _vm._v(" "), _vm._l(_vm.palette.colorShadows, function (colorShadow) {\n    return _c(\'tr\', [_c(\'td\', [_c(\'div\', {\n      staticClass: "c-field"\n    }, [_c(\'label\', [_vm._v(_vm._s(colorShadow.name.capitalize()))]), _vm._v(" "), _c(\'input\', {\n      directives: [{\n        name: "model",\n        rawName: "v-model",\n        value: colorShadow.hue,\n        expression: "colorShadow.hue"\n      }],\n      staticClass: "c-input",\n      attrs: {\n        "type": "number",\n        "min": "-360",\n        "max": "360"\n      },\n      domProps: {\n        "value": colorShadow.hue\n      },\n      on: {\n        "input": function ($event) {\n          if ($event.target.composing) return;\n          _vm.$set(colorShadow, "hue", $event.target.value);\n        }\n      }\n    }), _vm._v(" "), _c(\'input\', {\n      directives: [{\n        name: "model",\n        rawName: "v-model",\n        value: colorShadow.hue,\n        expression: "colorShadow.hue"\n      }],\n      attrs: {\n        "type": "range",\n        "min": "0",\n        "max": "360"\n      },\n      domProps: {\n        "value": colorShadow.hue\n      },\n      on: {\n        "__r": function ($event) {\n          return _vm.$set(colorShadow, "hue", $event.target.value);\n        }\n      }\n    }), _vm._v(" "), _c(\'input\', {\n      directives: [{\n        name: "model",\n        rawName: "v-model",\n        value: colorShadow.saturation,\n        expression: "colorShadow.saturation"\n      }],\n      staticClass: "c-input",\n      attrs: {\n        "type": "number",\n        "min": "-100",\n        "max": "100"\n      },\n      domProps: {\n        "value": colorShadow.saturation\n      },\n      on: {\n        "input": function ($event) {\n          if ($event.target.composing) return;\n          _vm.$set(colorShadow, "saturation", $event.target.value);\n        }\n      }\n    }), _vm._v(" "), _c(\'input\', {\n      directives: [{\n        name: "model",\n        rawName: "v-model",\n        value: colorShadow.saturation,\n        expression: "colorShadow.saturation"\n      }],\n      attrs: {\n        "type": "range",\n        "min": "-100",\n        "max": "100"\n      },\n      domProps: {\n        "value": colorShadow.saturation\n      },\n      on: {\n        "__r": function ($event) {\n          return _vm.$set(colorShadow, "saturation", $event.target.value);\n        }\n      }\n    }), _vm._v(" "), _c(\'input\', {\n      directives: [{\n        name: "model",\n        rawName: "v-model",\n        value: colorShadow.lightness,\n        expression: "colorShadow.lightness"\n      }],\n      staticClass: "c-input",\n      attrs: {\n        "type": "number",\n        "min": "-100",\n        "max": "100"\n      },\n      domProps: {\n        "value": colorShadow.lightness\n      },\n      on: {\n        "input": function ($event) {\n          if ($event.target.composing) return;\n          _vm.$set(colorShadow, "lightness", $event.target.value);\n        }\n      }\n    }), _vm._v(" "), _c(\'input\', {\n      directives: [{\n        name: "model",\n        rawName: "v-model",\n        value: colorShadow.lightness,\n        expression: "colorShadow.lightness"\n      }],\n      attrs: {\n        "type": "range",\n        "min": "-100",\n        "max": "100"\n      },\n      domProps: {\n        "value": colorShadow.lightness\n      },\n      on: {\n        "__r": function ($event) {\n          return _vm.$set(colorShadow, "lightness", $event.target.value);\n        }\n      }\n    })])]), _vm._v(" "), _vm._l(_vm.palette.colorTones, function (colorTone) {\n      return _c(\'td\', {\n        style: "background-color: var(--color--".concat(colorTone).concat(colorShadow.name !== \'default\' ? \'--\' + colorShadow.name : \'\', ")")\n      });\n    })], 2);\n  })], 2)])]) : _vm._e(), _vm._v(" "), _c(\'menu\', {\n    staticClass: "c-tabs c-tabs--bottom"\n  }, [_c(\'li\', [_c(\'button\', {\n    staticClass: "c-action",\n    attrs: {\n      "type": "button",\n      "active": _vm.currentTab === \'CSSVars\'\n    },\n    on: {\n      "click": function ($event) {\n        _vm.currentTab = \'CSSVars\';\n      }\n    }\n  }, [_vm._v("CSS vars")])]), _vm._v(" "), _c(\'li\', [_c(\'button\', {\n    staticClass: "c-action",\n    attrs: {\n      "type": "button",\n      "active": _vm.currentTab === \'Colors\'\n    },\n    on: {\n      "click": function ($event) {\n        _vm.currentTab = \'Colors\';\n      }\n    }\n  }, [_vm._v("Colors")])]), _vm._v(" "), _c(\'li\', [_c(\'button\', {\n    staticClass: "c-action",\n    attrs: {\n      "type": "button",\n      "active": _vm.currentTab === \'Tones\'\n    },\n    on: {\n      "click": function ($event) {\n        _vm.currentTab = \'Tones\';\n      }\n    }\n  }, [_vm._v("Tones")])]), _vm._v(" "), _c(\'li\', [_c(\'button\', {\n    staticClass: "c-action",\n    attrs: {\n      "type": "button",\n      "active": _vm.currentTab === \'Shadows\'\n    },\n    on: {\n      "click": function ($event) {\n        _vm.currentTab = \'Shadows\';\n      }\n    }\n  }, [_vm._v("Shadows")])])])]) : _vm._e();\n};\nvar Palettevue_type_template_id_14f55da5_staticRenderFns = [function () {\n  var _vm = this,\n    _c = _vm._self._c;\n  return _c(\'div\', {\n    staticClass: "c-scheme__header"\n  }, [_c(\'div\', {\n    staticClass: "c-scheme__title"\n  }, [_c(\'h2\', [_vm._v("CSS variables")])]), _vm._v(" "), _c(\'div\', {\n    staticClass: "c-scheme__toolbar"\n  })]);\n}, function () {\n  var _vm = this,\n    _c = _vm._self._c;\n  return _c(\'div\', {\n    staticClass: "c-scheme__header"\n  }, [_c(\'div\', {\n    staticClass: "c-scheme__title"\n  }, [_c(\'h2\', [_vm._v("Colors")])]), _vm._v(" "), _c(\'div\', {\n    staticClass: "c-scheme__toolbar"\n  })]);\n}, function () {\n  var _vm = this,\n    _c = _vm._self._c;\n  return _c(\'div\', {\n    staticClass: "flex-row"\n  }, [_c(\'div\', {\n    staticClass: "c-palette__wheel-own"\n  }), _vm._v(" "), _c(\'div\', {\n    staticClass: "c-palette__wheel-base"\n  })]);\n}, function () {\n  var _vm = this,\n    _c = _vm._self._c;\n  return _c(\'div\', {\n    staticClass: "c-scheme__header"\n  }, [_c(\'div\', {\n    staticClass: "c-scheme__title"\n  }, [_c(\'h2\', [_vm._v("Tones")])]), _vm._v(" "), _c(\'div\', {\n    staticClass: "c-scheme__toolbar"\n  })]);\n}, function () {\n  var _vm = this,\n    _c = _vm._self._c;\n  return _c(\'div\', {\n    staticClass: "c-scheme__header"\n  }, [_c(\'div\', {\n    staticClass: "c-scheme__title"\n  }, [_c(\'h2\', [_vm._v("Shadows")])]), _vm._v(" "), _c(\'div\', {\n    staticClass: "c-scheme__toolbar"\n  })]);\n}];\n\n;// CONCATENATED MODULE: ./src/views/Palette.vue?vue&type=template&id=14f55da5\n\n;// CONCATENATED MODULE: ./node_modules/babel-loader/lib/index.js!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/views/Palette.vue?vue&type=script&lang=js\n\n\n\n\n/* harmony default export */ const Palettevue_type_script_lang_js = ({\n  name: \'Palette\',\n  components: {\n    draggable: (vuedraggable_umd_default())\n  },\n  data: () => ({\n    APP: APP["default"],\n    palette: palette["default"],\n    currentTab: localStorage.getItem(\'Palette:currentTab\')\n  }),\n  created() {\n    window.Palette = this;\n  },\n  watch: {\n    currentTab(value) {\n      localStorage.setItem(\'Palette:currentTab\', value);\n    }\n  }\n});\n;// CONCATENATED MODULE: ./src/views/Palette.vue?vue&type=script&lang=js\n /* harmony default export */ const views_Palettevue_type_script_lang_js = (Palettevue_type_script_lang_js); \n;// CONCATENATED MODULE: ./src/views/Palette.vue\n\n\n\n\n\n/* normalize component */\n;\nvar Palette_component = (0,componentNormalizer/* default */.A)(\n  views_Palettevue_type_script_lang_js,\n  Palettevue_type_template_id_14f55da5_render,\n  Palettevue_type_template_id_14f55da5_staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* harmony default export */ const Palette = (Palette_component.exports);\n;// CONCATENATED MODULE: ./node_modules/babel-loader/lib/index.js!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/views/Frontboard.vue?vue&type=script&lang=js\n\n\n\n\n\n\nconst Frontboardvue_type_script_lang_js_API = axios_default().create({\n  baseURL: \'http://localhost:3035/api\'\n});\nfunction getContextRoutes(base, context, component) {\n  // console.log(\'---\x3e context key\', base, context.keys())\n  return context.keys().map(contextPath => {\n    const path = [base, contextPath].pathJoin();\n    const name = contextPath.split(\'/\').slice(-1)[0].replace(/\\.[^.]*$/, \'\').toSpaces();\n    const route = {\n      name,\n      path,\n      component,\n      attrs: {\n        file: {\n          name,\n          path,\n          import: async () => {\n            // console.log(\'----\x3e loading contextPath\', contextPath, path)\n            const module = await context(contextPath);\n            return typeof module === \'string\' ? module : module.default;\n          }\n        }\n      }\n    };\n    routes.push(route);\n    return route;\n  });\n}\nconst routes = [];\nconst docsRoutes = getContextRoutes(\'data/md\', __webpack_require__(9180), FileLoader);\n// const componentsRoutes = getContextRoutes(\'src/components\', import.meta.webpackContext(\'@/src/components?raw\', { recursive: true, regExp: /\\.vue$/, mode: \'lazy\' }), ComponentViewer)\n// const snapshotsRoutes = getContextRoutes(\'tests\', require.context(\'@/tests\', true, /\\.snap$/, \'lazy\'), FileLoader)\n\nconst staticDBRoute = {\n  name: \'Appflow\',\n  path: \'data\',\n  component: views_StaticDB\n};\nroutes.push(staticDBRoute);\nconst whiteBoardRoute = {\n  name: \'Whiteboard\',\n  path: \'.whiteboard.md\',\n  component: FileLoader,\n  attrs: {\n    file: {\n      name: \'Whiteboard\',\n      path: \'.whiteboard.md\',\n      import: async () => await __webpack_require__.e(/* import() */ 590).then(__webpack_require__.t.bind(__webpack_require__, 590, 17)).then(module => module.default)\n    }\n  }\n};\nroutes.push(whiteBoardRoute);\nconst options = [staticDBRoute, {\n  name: \'Docs\',\n  opened: false,\n  options: docsRoutes\n},\n/*\n{\n  name: \'Components\',\n  opened: false,\n  options: componentsRoutes\n},\n*/\nwhiteBoardRoute];\n/* harmony default export */ const Frontboardvue_type_script_lang_js = ({\n  name: \'Frontboard\',\n  components: {\n    Palette: Palette,\n    FileLoader: FileLoader\n  },\n  props: {\n    path: {\n      type: String,\n      default: \'.whiteboard.md\'\n    }\n  },\n  data: () => ({\n    palette: palette["default"],\n    routes,\n    options,\n    isHidden: false,\n    currentRoute: undefined,\n    darkModeActive: localStorage.getItem(\'darkmode\') === \'true\'\n  }),\n  created() {\n    palette["default"].darkmode = this.darkModeActive;\n  },\n  mounted() {\n    const route = this.routes.find(route => route.path === this.path);\n    if (route) {\n      this.load(route);\n    } else {\n      throw new Error(\'File not exist\', this.path);\n    }\n  },\n  computed: {\n    title() {\n      return this.currentRoute ? this.currentRoute.path : \'\';\n    }\n  },\n  methods: {\n    darkmodeToggle() {\n      this.darkModeActive = !this.darkModeActive;\n      palette["default"].darkmode = this.darkModeActive;\n      localStorage.setItem(\'darkmode\', this.darkModeActive);\n    },\n    load(route) {\n      const group = this.options.find(option => option.options && option.options.includes(route));\n      if (group) {\n        group.opened = true;\n      }\n      if (window.history.pushState) {\n        const newurl = window.location.protocol + \'//\' + window.location.host + window.location.pathname + \'?frontboard=\' + route.path;\n        window.history.pushState({\n          path: newurl\n        }, \'\', newurl);\n      }\n      this.currentRoute = route;\n    },\n    toggle() {\n      this.isHidden = !this.isHidden;\n    },\n    exit() {\n      this.isHidden = true;\n      if (history.pushState) {\n        const newurl = window.location.protocol + \'//\' + window.location.host + window.location.pathname;\n        window.history.pushState({\n          path: newurl\n        }, \'\', newurl);\n      }\n    }\n  }\n});\n;// CONCATENATED MODULE: ./src/views/Frontboard.vue?vue&type=script&lang=js\n /* harmony default export */ const views_Frontboardvue_type_script_lang_js = (Frontboardvue_type_script_lang_js); \n;// CONCATENATED MODULE: ./src/views/Frontboard.vue\n\n\n\n\n\n/* normalize component */\n;\nvar Frontboard_component = (0,componentNormalizer/* default */.A)(\n  views_Frontboardvue_type_script_lang_js,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* harmony default export */ const Frontboard = (Frontboard_component.exports);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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SyxNQUFBLENBQUE0SyxRQUFBLENBQUFFLElBQUEsR0FBQTlLLE1BQUEsQ0FBQTRLLFFBQUEsQ0FBQUcsUUFBQSxvQkFBQXBCLEtBQUEsQ0FBQTlZLElBQUE7UUFDQW1QLE1BQUEsQ0FBQXlLLE9BQUEsQ0FBQUMsU0FBQTtVQUFBN1osSUFBQSxFQUFBOFo7UUFBQSxPQUFBQSxNQUFBO01BQ0E7TUFDQSxLQUFBdmEsWUFBQSxHQUFBdVosS0FBQTtJQUNBO0lBQ0E3WixPQUFBO01BQ0EsS0FBQWIsUUFBQSxTQUFBQSxRQUFBO0lBQ0E7SUFDQWUsS0FBQTtNQUNBLEtBQUFmLFFBQUE7TUFDQSxJQUFBd2IsT0FBQSxDQUFBQyxTQUFBO1FBQ0EsTUFBQUMsTUFBQSxHQUFBM0ssTUFBQSxDQUFBNEssUUFBQSxDQUFBQyxRQUFBLFVBQUE3SyxNQUFBLENBQUE0SyxRQUFBLENBQUFFLElBQUEsR0FBQTlLLE1BQUEsQ0FBQTRLLFFBQUEsQ0FBQUcsUUFBQTtRQUNBL0ssTUFBQSxDQUFBeUssT0FBQSxDQUFBQyxTQUFBO1VBQUE3WixJQUFBLEVBQUE4WjtRQUFBLE9BQUFBLE1BQUE7TUFDQTtJQUNBO0VBQ0E7QUFDQSxDQUFDLEU7O0FDNUx3SyxDQUFDLDhFQUFlLGlDQUFHLEVBQUMsQzs7QUNBckc7QUFDM0I7QUFDTDs7O0FBR3hEO0FBQ0EsQ0FBMEY7QUFDMUYsSUFBSSxvQkFBUyxHQUFHLHNDQUFVO0FBQzFCLEVBQUUsdUNBQU07QUFDUixFQUFFLE1BQU07QUFDUixFQUFFLGVBQWU7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLGlEQUFlLG9CQUFTIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZnJvbnRib2FyZC8uL3NyYy92aWV3cy9Gcm9udGJvYXJkLnZ1ZT82NTExIiwid2VicGFjazovL2Zyb250Ym9hcmQvLi9zcmMvdmlld3MvRnJvbnRib2FyZC52dWU/MTg5MCIsIndlYnBhY2s6Ly9mcm9udGJvYXJkLy4vc3JjL3ZpZXdzL3JpY2hFZGl0b3IvRmlsZUxvYWRlci52dWU/ZDZkYyIsIndlYnBhY2s6Ly9mcm9udGJvYXJkLy4vc3JjL3ZpZXdzL3JpY2hFZGl0b3IvUmljaEVkaXRvci52dWU/MmI2NCIsIndlYnBhY2s6Ly9mcm9udGJvYXJkLy4vc3JjL3ZpZXdzL3JpY2hFZGl0b3IvbGliL3RpcHRhcEluZGVudC5qcz84NDJiIiwid2VicGFjazovL2Zyb250Ym9hcmQvLi9zcmMvdmlld3MvcmljaEVkaXRvci9IaWdobGlnaHRlci52dWU/ZjU2NCIsIndlYnBhY2s6Ly9mcm9udGJvYXJkLy4vc3JjL3ZpZXdzL3JpY2hFZGl0b3IvSGlnaGxpZ2h0ZXIudnVlP2Y0NjAiLCJ3ZWJwYWNrOi8vZnJvbnRib2FyZC8uL3NyYy92aWV3cy9yaWNoRWRpdG9yL0hpZ2hsaWdodGVyLnZ1ZT83YmY3Iiwid2VicGFjazovL2Zyb250Ym9hcmQvLi9zcmMvdmlld3MvcmljaEVkaXRvci9saWIvd2ViY29tcG9uZW50LmhpZ2hsaWdodC5qcz9hMGY2Iiwid2VicGFjazovL2Zyb250Ym9hcmQvLi9zcmMvdmlld3MvcmljaEVkaXRvci9saWIvaHRtbFRvTWFya2Rvd24uanM/ZWViYSIsIndlYnBhY2s6Ly9mcm9udGJvYXJkLy4vc3JjL3ZpZXdzL3JpY2hFZGl0b3IvbGliL21hcmtkb3duVG9IdG1sLmpzPzQ1MzYiLCJ3ZWJwYWNrOi8vZnJvbnRib2FyZC9zcmMvdmlld3MvcmljaEVkaXRvci9SaWNoRWRpdG9yLnZ1ZT9lZDQ2Iiwid2VicGFjazovL2Zyb250Ym9hcmQvLi9zcmMvdmlld3MvcmljaEVkaXRvci9SaWNoRWRpdG9yLnZ1ZT9jYTRiIiwid2VicGFjazovL2Zyb250Ym9hcmQvLi9zcmMvdmlld3MvcmljaEVkaXRvci9SaWNoRWRpdG9yLnZ1ZT83NWI1Iiwid2VicGFjazovL2Zyb250Ym9hcmQvLi9zcmMvdmlld3MvQ29tcG9uZW50Vmlld2VyLnZ1ZT8wY2VjIiwid2VicGFjazovL2Zyb250Ym9hcmQvc3JjL3ZpZXdzL0NvbXBvbmVudFZpZXdlci52dWU/ZjdhMCIsIndlYnBhY2s6Ly9mcm9udGJvYXJkLy4vc3JjL3ZpZXdzL0NvbXBvbmVudFZpZXdlci52dWU/YmEzMyIsIndlYnBhY2s6Ly9mcm9udGJvYXJkLy4vc3JjL3ZpZXdzL0NvbXBvbmVudFZpZXdlci52dWU/NmE2MSIsIndlYnBhY2s6Ly9mcm9udGJvYXJkLy4vc3JjL3ZpZXdzL1NuYXBWaWV3ZXIudnVlPzYyYWEiLCJ3ZWJwYWNrOi8vZnJvbnRib2FyZC8uL3NyYy92aWV3cy9TbmFwVmlld2VyLnZ1ZT9mMTllIiwid2VicGFjazovL2Zyb250Ym9hcmQvLi9zcmMvdmlld3MvU25hcFZpZXdlci52dWU/NDVmMCIsIndlYnBhY2s6Ly9mcm9udGJvYXJkL3NyYy92aWV3cy9yaWNoRWRpdG9yL0ZpbGVMb2FkZXIudnVlPzNiZWIiLCJ3ZWJwYWNrOi8vZnJvbnRib2FyZC8uL3NyYy92aWV3cy9yaWNoRWRpdG9yL0ZpbGVMb2FkZXIudnVlP2E2OGUiLCJ3ZWJwYWNrOi8vZnJvbnRib2FyZC8uL3NyYy92aWV3cy9yaWNoRWRpdG9yL0ZpbGVMb2FkZXIudnVlPzBhMWQiLCJ3ZWJwYWNrOi8vZnJvbnRib2FyZC8uL3NyYy92aWV3cy9TdGF0aWNEQi52dWU/MzZhNCIsIndlYnBhY2s6Ly9mcm9udGJvYXJkL3NyYy92aWV3cy9TdGF0aWNEQi52dWU/ZjdjMyIsIndlYnBhY2s6Ly9mcm9udGJvYXJkLy4vc3JjL3ZpZXdzL1N0YXRpY0RCLnZ1ZT82YjM5Iiwid2VicGFjazovL2Zyb250Ym9hcmQvLi9zcmMvdmlld3MvU3RhdGljREIudnVlP2ZmYmYiLCJ3ZWJwYWNrOi8vZnJvbnRib2FyZC8uL3NyYy92aWV3cy9QYWxldHRlLnZ1ZT80ODQ2Iiwid2VicGFjazovL2Zyb250Ym9hcmQvLi9zcmMvdmlld3MvUGFsZXR0ZS52dWU/YjFiYSIsIndlYnBhY2s6Ly9mcm9udGJvYXJkL3NyYy92aWV3cy9QYWxldHRlLnZ1ZT9jZTgxIiwid2VicGFjazovL2Zyb250Ym9hcmQvLi9zcmMvdmlld3MvUGFsZXR0ZS52dWU/NzY4OSIsIndlYnBhY2s6Ly9mcm9udGJvYXJkLy4vc3JjL3ZpZXdzL1BhbGV0dGUudnVlP2YyNzkiLCJ3ZWJwYWNrOi8vZnJvbnRib2FyZC9zcmMvdmlld3MvRnJvbnRib2FyZC52dWU/NDE3ZCIsIndlYnBhY2s6Ly9mcm9udGJvYXJkLy4vc3JjL3ZpZXdzL0Zyb250Ym9hcmQudnVlPzBhMGMiLCJ3ZWJwYWNrOi8vZnJvbnRib2FyZC8uL3NyYy92aWV3cy9Gcm9udGJvYXJkLnZ1ZT83YTdmIl0sInNvdXJjZXNDb250ZW50IjpbInZhciByZW5kZXIgPSBmdW5jdGlvbiByZW5kZXIoKXt2YXIgX3ZtPXRoaXMsX2M9X3ZtLl9zZWxmLl9jO3JldHVybiAoIV92bS5pc0hpZGRlbik/X2MoJ2Rpdicse3N0YXRpY0NsYXNzOlwiLS1kcyBjLWZyb250Ym9hcmRcIixjbGFzczp7J3YtZGFya21vZGUnOiBfdm0uZGFya01vZGVBY3RpdmV9fSxbX2MoJ2Rpdicse3N0YXRpY0NsYXNzOlwiYy1mcm9udGJvYXJkX190b29sYmFyXCJ9LFtfYygnZGl2JyxbX3ZtLl9tKDApLF92bS5fdihcIiBcIiksX2MoJ3NwYW4nLHtzdGF0aWNDbGFzczpcImMtZnJvbnRib2FyZF9fdGl0bGVcIn0sW192bS5fdihfdm0uX3MoX3ZtLnRpdGxlKSldKV0pLF92bS5fdihcIiBcIiksX2MoJ2RpdicsW19jKCdkaXYnLHtzdGF0aWNDbGFzczpcImMtZnJvbnRib2FyZF9fZGFya21vZGVcIixvbjp7XCJjbGlja1wiOl92bS5kYXJrbW9kZVRvZ2dsZX19LFsoX3ZtLmRhcmtNb2RlQWN0aXZlKT9fYygnc3Bhbicse3N0YXRpY0NsYXNzOlwiZmkgZmktcnMtdG9nZ2xlLW9uXCJ9KTpfYygnc3Bhbicse3N0YXRpY0NsYXNzOlwiZmkgZmktcnMtdG9nZ2xlLW9mZlwifSksX3ZtLl92KFwiXFxuICAgICAgICBEYXJrIG1vZGVcXG4gICAgICBcIildKSxfdm0uX3YoXCIgXCIpLF9jKCdkaXYnLHtzdGF0aWNDbGFzczpcImMtZnJvbnRib2FyZF9fZGFya21vZGVcIixvbjp7XCJjbGlja1wiOmZ1bmN0aW9uKCRldmVudCl7cmV0dXJuIF92bS5wYWxldHRlLnRvZ2dsZSgpfX19LFsoX3ZtLnBhbGV0dGUuYWN0aXZlKT9fYygnc3Bhbicse3N0YXRpY0NsYXNzOlwiZmkgZmktcnMtdG9nZ2xlLW9uXCJ9KTpfYygnc3Bhbicse3N0YXRpY0NsYXNzOlwiZmkgZmktcnMtdG9nZ2xlLW9mZlwifSksX3ZtLl92KFwiXFxuICAgICAgICBQYWxldHRlXFxuICAgICAgXCIpXSksX3ZtLl92KFwiIFwiKSxfYygnZGl2Jyx7c3RhdGljQ2xhc3M6XCJjLWZyb250Ym9hcmRfX2V4aXRcIixvbjp7XCJjbGlja1wiOl92bS5leGl0fX0sW192bS5fdihcIkV4aXRcIildKV0pXSksX3ZtLl92KFwiIFwiKSxfYygnZGl2Jyx7c3RhdGljQ2xhc3M6XCJjLWZyb250Ym9hcmRfX21haW5cIn0sW19jKCdkaXYnLHtzdGF0aWNDbGFzczpcImMtZnJvbnRib2FyZF9fbWFpbi1jb250ZW50c1wifSxbX2MoJ2Rpdicse3N0YXRpY0NsYXNzOlwiYy1mcm9udGJvYXJkX19tZW51XCJ9LF92bS5fbCgoX3ZtLm9wdGlvbnMpLGZ1bmN0aW9uKG9wdGlvbil7cmV0dXJuIF9jKCdkaXYnLFtfYygnZGl2Jyx7c3RhdGljQ2xhc3M6XCJjLWZyb250Ym9hcmRfX29wdGlvbl9faGFuZGxlclwiLGNsYXNzOnsnYWN0aXZlJzogIW9wdGlvbi5vcHRpb25zICYmIF92bS5jdXJyZW50Um91dGUgJiYgb3B0aW9uID09PSBfdm0uY3VycmVudFJvdXRlfSxvbjp7XCJjbGlja1wiOmZ1bmN0aW9uKCRldmVudCl7b3B0aW9uLm9wdGlvbnMgPyBvcHRpb24ub3BlbmVkID0gIW9wdGlvbi5vcGVuZWQgOiBfdm0ubG9hZChvcHRpb24pfX19LFtfdm0uX3YoX3ZtLl9zKG9wdGlvbi5uYW1lKSldKSxfdm0uX3YoXCIgXCIpLChvcHRpb24ub3BlbmVkKT9fYygnZGl2Jyx7c3RhdGljQ2xhc3M6XCJjLWZyb250Ym9hcmRfX29wdGlvbnNcIn0sX3ZtLl9sKChvcHRpb24ub3B0aW9ucyksZnVuY3Rpb24oc3Vib3B0aW9uKXtyZXR1cm4gX2MoJ2Rpdicse3N0YXRpY0NsYXNzOlwiYy1mcm9udGJvYXJkX19vcHRpb25zX19pdGVtXCIsY2xhc3M6eydhY3RpdmUnOiBfdm0uY3VycmVudFJvdXRlICYmIHN1Ym9wdGlvbiA9PT0gX3ZtLmN1cnJlbnRSb3V0ZX0sb246e1wiY2xpY2tcIjpmdW5jdGlvbigkZXZlbnQpe3JldHVybiBfdm0ubG9hZChzdWJvcHRpb24pfX19LFtfdm0uX3YoX3ZtLl9zKHN1Ym9wdGlvbi5uYW1lKSldKX0pLDApOl92bS5fZSgpXSl9KSwwKSxfdm0uX3YoXCIgXCIpLF9jKCdkaXYnLHtzdGF0aWNDbGFzczpcImMtZnJvbnRib2FyZF9fYm9keVwifSxbKF92bS5jdXJyZW50Um91dGUpP19jKF92bS5jdXJyZW50Um91dGUuY29tcG9uZW50LF92bS5fYih7a2V5Ol92bS5jdXJyZW50Um91dGUucGF0aCx0YWc6XCJjb21wb25lbnRcIn0sJ2NvbXBvbmVudCcsX3ZtLmN1cnJlbnRSb3V0ZS5hdHRycyxmYWxzZSkpOl92bS5fZSgpXSwxKV0pXSksX3ZtLl92KFwiIFwiKSxfYygnUGFsZXR0ZScpXSwxKTpfdm0uX2UoKVxufVxudmFyIHN0YXRpY1JlbmRlckZucyA9IFtmdW5jdGlvbiAoKXt2YXIgX3ZtPXRoaXMsX2M9X3ZtLl9zZWxmLl9jO3JldHVybiBfYygnc3Bhbicse3N0YXRpY0NsYXNzOlwiYy1mcm9udGJvYXJkX19sb2dvXCJ9LFtfYygnc3BhbicsW192bS5fdihcIvCfpqZcIildKSxfdm0uX3YoXCIgRnJvbnRib2FyZCBcIiksX2MoJ2knLHtzdGF0aWNDbGFzczpcImZpIGZpLXJyLWNoZWNrXCJ9KV0pXG59XVxuXG5leHBvcnQgeyByZW5kZXIsIHN0YXRpY1JlbmRlckZucyB9IiwiZXhwb3J0ICogZnJvbSBcIi0hLi4vLi4vbm9kZV9tb2R1bGVzL2JhYmVsLWxvYWRlci9saWIvaW5kZXguanMhLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL2xvYWRlcnMvdGVtcGxhdGVMb2FkZXIuanM/P3J1bGVTZXRbMV0ucnVsZXNbMl0hLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL2luZGV4LmpzPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9Gcm9udGJvYXJkLnZ1ZT92dWUmdHlwZT10ZW1wbGF0ZSZpZD0wNzhlNTRmNFwiIiwidmFyIHJlbmRlciA9IGZ1bmN0aW9uIHJlbmRlcigpe3ZhciBfdm09dGhpcyxfYz1fdm0uX3NlbGYuX2M7cmV0dXJuIF9jKCdkaXYnLHtzdGF0aWNDbGFzczpcImMtZmlsZS1sb2FkZXJcIn0sWyhfdm0uY29udGVudHMgIT09IHVuZGVmaW5lZCk/X2MoJ2Rpdicse3N0YXRpY0NsYXNzOlwiYy1maWxlLWxvYWRlcl9fY29udGVudFwifSxbKF92bS5leHQgPT09ICdtZCcpP19jKCdSaWNoRWRpdG9yJyx7YXR0cnM6e1wiZmlsZVwiOl92bS5maWxlLFwiZnJvbS1tZW1vcnlcIjohIV92bS5mcm9tTWVtb3J5fSxvbjp7XCJpbnB1dFwiOl92bS5zYXZlLFwiY2xlYXJNZW1vcnlcIjpfdm0ub25DbGVhck1lbW9yeX0sbW9kZWw6e3ZhbHVlOihfdm0uY29udGVudHMpLGNhbGxiYWNrOmZ1bmN0aW9uICgkJHYpIHtfdm0uY29udGVudHM9JCR2fSxleHByZXNzaW9uOlwiY29udGVudHNcIn19KTooX3ZtLmV4dCA9PT0gJ3Z1ZScpP19jKCdDb21wb25lbnRWaWV3ZXInLHthdHRyczp7XCJmaWxlXCI6X3ZtLmZpbGUsXCJmcm9tLW1lbW9yeVwiOiEhX3ZtLmZyb21NZW1vcnl9LG9uOntcImNsZWFyTWVtb3J5XCI6X3ZtLm9uQ2xlYXJNZW1vcnl9LG1vZGVsOnt2YWx1ZTooX3ZtLmNvbnRlbnRzKSxjYWxsYmFjazpmdW5jdGlvbiAoJCR2KSB7X3ZtLmNvbnRlbnRzPSQkdn0sZXhwcmVzc2lvbjpcImNvbnRlbnRzXCJ9fSk6KF92bS5leHQgPT09ICdzbmFwJyk/X2MoJ1NuYXBWaWV3ZXInLHttb2RlbDp7dmFsdWU6KF92bS5jb250ZW50cyksY2FsbGJhY2s6ZnVuY3Rpb24gKCQkdikge192bS5jb250ZW50cz0kJHZ9LGV4cHJlc3Npb246XCJjb250ZW50c1wifX0pOl9jKCdkaXYnLFtfdm0uX3YoXCJVbnN1cHBvcnRlZCBmaWxlIGV4dGVuc2lvbiBcIitfdm0uX3MoX3ZtLnBhdGgpKV0pXSwxKTpfdm0uX2UoKV0pXG59XG52YXIgc3RhdGljUmVuZGVyRm5zID0gW11cblxuZXhwb3J0IHsgcmVuZGVyLCBzdGF0aWNSZW5kZXJGbnMgfSIsInZhciByZW5kZXIgPSBmdW5jdGlvbiByZW5kZXIoKXt2YXIgX3ZtPXRoaXMsX2M9X3ZtLl9zZWxmLl9jLF9zZXR1cD1fdm0uX3NlbGYuX3NldHVwUHJveHk7cmV0dXJuIF9jKCdkaXYnLHtzdGF0aWNDbGFzczpcImMtcmljaC1lZGl0b3JcIn0sW19jKCdkaXYnLHtzdGF0aWNDbGFzczpcImMtcmljaC1lZGl0b3JfX3RvcFwifSxbX2MoJ2Rpdicse3N0YXRpY0NsYXNzOlwiYy1yaWNoLWVkaXRvcl9fdG9vbGJhclwifSxbX2MoJ3NwYW4nLHtzdGF0aWNDbGFzczpcImMtcmljaC1lZGl0b3JfX2J0bi1ncm91cFwifSxbX2MoJ2J1dHRvbicse2NsYXNzOl92bS5lZGl0b3IuaXNBY3RpdmUoJ2JvbGQnKSA/IF92bS5hY3RpdmVDbGFzcyA6IG51bGwsYXR0cnM6e1widGl0bGVcIjpcIkJvbGRcIn0sb246e1wibW91c2Vkb3duXCI6ZnVuY3Rpb24oJGV2ZW50KXskZXZlbnQucHJldmVudERlZmF1bHQoKTskZXZlbnQuc3RvcFByb3BhZ2F0aW9uKCk7cmV0dXJuIF92bS5lZGl0b3IuY29tbWFuZHMudG9nZ2xlQm9sZCgpfX19LFtfYygnc3Bhbicse3N0YXRpY0NsYXNzOlwiZmkgZmktcnMtYm9sZFwifSldKSxfdm0uX3YoXCIgXCIpLF9jKCdidXR0b24nLHtjbGFzczpfdm0uZWRpdG9yLmlzQWN0aXZlKCdpdGFsaWMnKSA/IF92bS5hY3RpdmVDbGFzcyA6IG51bGwsYXR0cnM6e1widGl0bGVcIjpcIkl0YWxpY1wifSxvbjp7XCJtb3VzZWRvd25cIjpmdW5jdGlvbigkZXZlbnQpeyRldmVudC5wcmV2ZW50RGVmYXVsdCgpOyRldmVudC5zdG9wUHJvcGFnYXRpb24oKTtyZXR1cm4gX3ZtLmVkaXRvci5jb21tYW5kcy50b2dnbGVJdGFsaWMoKX19fSxbX2MoJ3NwYW4nLHtzdGF0aWNDbGFzczpcImZpIGZpLXJzLWl0YWxpY1wifSldKSxfdm0uX3YoXCIgXCIpLF9jKCdidXR0b24nLHtjbGFzczpfdm0uZWRpdG9yLmlzQWN0aXZlKCdzdHJpa2UnKSA/IF92bS5hY3RpdmVDbGFzcyA6IG51bGwsYXR0cnM6e1widGl0bGVcIjpcIlN0cmlrZVwifSxvbjp7XCJtb3VzZWRvd25cIjpmdW5jdGlvbigkZXZlbnQpeyRldmVudC5wcmV2ZW50RGVmYXVsdCgpOyRldmVudC5zdG9wUHJvcGFnYXRpb24oKTtyZXR1cm4gX3ZtLmVkaXRvci5jb21tYW5kcy50b2dnbGVTdHJpa2UoKX19fSxbX2MoJ3NwYW4nLHtzdGF0aWNDbGFzczpcImZpIGZpLXJzLXN0cmlrZXRocm91Z2hcIn0pXSksX3ZtLl92KFwiIFwiKSxfYygnYnV0dG9uJyx7Y2xhc3M6X3ZtLmVkaXRvci5pc0FjdGl2ZSgndW5kZXJsaW5lJykgPyBfdm0uYWN0aXZlQ2xhc3MgOiBudWxsLGF0dHJzOntcInRpdGxlXCI6XCJVbmRlcmxpbmVcIn0sb246e1wibW91c2Vkb3duXCI6ZnVuY3Rpb24oJGV2ZW50KXskZXZlbnQucHJldmVudERlZmF1bHQoKTskZXZlbnQuc3RvcFByb3BhZ2F0aW9uKCk7cmV0dXJuIF92bS5lZGl0b3IuY29tbWFuZHMudG9nZ2xlVW5kZXJsaW5lKCl9fX0sW19jKCdzcGFuJyx7c3RhdGljQ2xhc3M6XCJmaSBmaS1ycy11bmRlcmxpbmVcIn0pXSksX3ZtLl92KFwiIFwiKSxfYygnYnV0dG9uJyx7Y2xhc3M6X3ZtLmVkaXRvci5pc0FjdGl2ZSgnaGlnaGxpZ2h0JykgPyBfdm0uYWN0aXZlQ2xhc3MgOiBudWxsLGF0dHJzOntcInRpdGxlXCI6XCJIaWdobGlnaHRcIn0sb246e1wibW91c2Vkb3duXCI6ZnVuY3Rpb24oJGV2ZW50KXskZXZlbnQucHJldmVudERlZmF1bHQoKTskZXZlbnQuc3RvcFByb3BhZ2F0aW9uKCk7cmV0dXJuIF92bS5lZGl0b3IuY29tbWFuZHMudG9nZ2xlSGlnaGxpZ2h0KCl9fX0sW19jKCdzcGFuJyx7c3RhdGljQ2xhc3M6XCJmaSBmaS1ycy1oaWdobGlnaHRlci1saW5lXCJ9KV0pLF92bS5fdihcIiBcIiksX2MoJ2J1dHRvbicse2NsYXNzOl92bS5lZGl0b3IuaXNBY3RpdmUoJ2NvZGUnKSA/IF92bS5hY3RpdmVDbGFzcyA6IG51bGwsYXR0cnM6e1widGl0bGVcIjpcImNvZGVcIn0sb246e1wibW91c2Vkb3duXCI6ZnVuY3Rpb24oJGV2ZW50KXskZXZlbnQucHJldmVudERlZmF1bHQoKTskZXZlbnQuc3RvcFByb3BhZ2F0aW9uKCk7cmV0dXJuIF92bS5lZGl0b3IuY29tbWFuZHMudG9nZ2xlQ29kZSgpfX19LFtfYygnc3Bhbicse3N0YXRpY0NsYXNzOlwiZmkgZmktcnMtY29kZS1zaW1wbGVcIn0pXSksX3ZtLl92KFwiIFwiKSxfYygnYnV0dG9uJyx7Y2xhc3M6X3ZtLmVkaXRvci5pc0FjdGl2ZSgnbGluaycpID8gX3ZtLmFjdGl2ZUNsYXNzIDogbnVsbCxhdHRyczp7XCJ0aXRsZVwiOlwibGlua1wifSxvbjp7XCJtb3VzZWRvd25cIjpmdW5jdGlvbigkZXZlbnQpeyRldmVudC5wcmV2ZW50RGVmYXVsdCgpOyRldmVudC5zdG9wUHJvcGFnYXRpb24oKTtyZXR1cm4gX3ZtLnRvZ2dsZUxpbmtVcmwuYXBwbHkobnVsbCwgYXJndW1lbnRzKX19fSxbX2MoJ3NwYW4nLHtzdGF0aWNDbGFzczpcImZpIGZpLXJzLWxpbmtcIn0pXSldKSxfdm0uX3YoXCIgXCIpLF9jKCdzcGFuJyx7c3RhdGljQ2xhc3M6XCJjLXJpY2gtZWRpdG9yX19idG4tZ3JvdXBcIn0sW19jKCdidXR0b24nLHtjbGFzczpfdm0uZWRpdG9yLmlzQWN0aXZlKCdjb2RlQmxvY2snKSA/IF92bS5hY3RpdmVDbGFzcyA6IG51bGwsYXR0cnM6e1widGl0bGVcIjpcIkNvZGUgYmxvY2tcIn0sb246e1wibW91c2Vkb3duXCI6ZnVuY3Rpb24oJGV2ZW50KXskZXZlbnQucHJldmVudERlZmF1bHQoKTskZXZlbnQuc3RvcFByb3BhZ2F0aW9uKCk7cmV0dXJuIF92bS5lZGl0b3IuY29tbWFuZHMudG9nZ2xlQ29kZUJsb2NrKCl9fX0sW19jKCdzcGFuJyx7c3RhdGljQ2xhc3M6XCJmaSBmaS1ycy1yZWN0YW5nbGUtY29kZVwifSldKSxfdm0uX3YoXCIgXCIpLF9jKCdidXR0b24nLHtjbGFzczpfdm0uZWRpdG9yLmlzQWN0aXZlKCdwYXJhZ3JhcGgnKSA/IF92bS5hY3RpdmVDbGFzcyA6IG51bGwsYXR0cnM6e1widGl0bGVcIjpcIlBhcmFncmFwaFwifSxvbjp7XCJtb3VzZWRvd25cIjpmdW5jdGlvbigkZXZlbnQpeyRldmVudC5wcmV2ZW50RGVmYXVsdCgpOyRldmVudC5zdG9wUHJvcGFnYXRpb24oKTtyZXR1cm4gX3ZtLmVkaXRvci5jb21tYW5kcy5zZXRQYXJhZ3JhcGgoKX19fSxbX2MoJ3NwYW4nLHtzdGF0aWNDbGFzczpcImZpIGZpLXJzLXBhcmFncmFwaFwifSldKSxfdm0uX3YoXCIgXCIpLF9jKCdidXR0b24nLHtjbGFzczpfdm0uZWRpdG9yLmlzQWN0aXZlKCdoZWFkaW5nJywge2xldmVsIDogMX0pID8gX3ZtLmFjdGl2ZUNsYXNzIDogbnVsbCxhdHRyczp7XCJ0aXRsZVwiOlwiSDFcIn0sb246e1wibW91c2Vkb3duXCI6ZnVuY3Rpb24oJGV2ZW50KXskZXZlbnQucHJldmVudERlZmF1bHQoKTskZXZlbnQuc3RvcFByb3BhZ2F0aW9uKCk7cmV0dXJuIF92bS5lZGl0b3IuY29tbWFuZHMudG9nZ2xlSGVhZGluZyh7bGV2ZWwgOiAxfSl9fX0sW19jKCdzcGFuJyx7c3RhdGljQ2xhc3M6XCJmaSBmaS1ycy1oMVwifSldKSxfdm0uX3YoXCIgXCIpLF9jKCdidXR0b24nLHtjbGFzczpfdm0uZWRpdG9yLmlzQWN0aXZlKCdoZWFkaW5nJywge2xldmVsIDogMn0pID8gX3ZtLmFjdGl2ZUNsYXNzIDogbnVsbCxhdHRyczp7XCJ0aXRsZVwiOlwiSDJcIn0sb246e1wibW91c2Vkb3duXCI6ZnVuY3Rpb24oJGV2ZW50KXskZXZlbnQucHJldmVudERlZmF1bHQoKTskZXZlbnQuc3RvcFByb3BhZ2F0aW9uKCk7cmV0dXJuIF92bS5lZGl0b3IuY29tbWFuZHMudG9nZ2xlSGVhZGluZyh7bGV2ZWwgOiAyfSl9fX0sW19jKCdzcGFuJyx7c3RhdGljQ2xhc3M6XCJmaSBmaS1ycy1oMlwifSldKSxfdm0uX3YoXCIgXCIpLF9jKCdidXR0b24nLHtjbGFzczpfdm0uZWRpdG9yLmlzQWN0aXZlKCdoZWFkaW5nJywge2xldmVsIDogM30pID8gX3ZtLmFjdGl2ZUNsYXNzIDogbnVsbCxhdHRyczp7XCJ0aXRsZVwiOlwiSDNcIn0sb246e1wibW91c2Vkb3duXCI6ZnVuY3Rpb24oJGV2ZW50KXskZXZlbnQucHJldmVudERlZmF1bHQoKTskZXZlbnQuc3RvcFByb3BhZ2F0aW9uKCk7cmV0dXJuIF92bS5lZGl0b3IuY29tbWFuZHMudG9nZ2xlSGVhZGluZyh7bGV2ZWwgOiAzfSl9fX0sW19jKCdzcGFuJyx7c3RhdGljQ2xhc3M6XCJmaSBmaS1ycy1oM1wifSldKSxfdm0uX3YoXCIgXCIpLF9jKCdidXR0b24nLHtjbGFzczpfdm0uZWRpdG9yLmlzQWN0aXZlKCdoZWFkaW5nJywge2xldmVsIDogNH0pID8gX3ZtLmFjdGl2ZUNsYXNzIDogbnVsbCxhdHRyczp7XCJ0aXRsZVwiOlwiSDRcIn0sb246e1wibW91c2Vkb3duXCI6ZnVuY3Rpb24oJGV2ZW50KXskZXZlbnQucHJldmVudERlZmF1bHQoKTskZXZlbnQuc3RvcFByb3BhZ2F0aW9uKCk7cmV0dXJuIF92bS5lZGl0b3IuY29tbWFuZHMudG9nZ2xlSGVhZGluZyh7bGV2ZWwgOiA0fSl9fX0sW19jKCdzcGFuJyx7c3RhdGljQ2xhc3M6XCJmaSBmaS1ycy1oNFwifSldKSxfdm0uX3YoXCIgXCIpLF9jKCdidXR0b24nLHtjbGFzczpfdm0uZWRpdG9yLmlzQWN0aXZlKCdibG9ja3F1b3RlJykgPyBfdm0uYWN0aXZlQ2xhc3MgOiBudWxsLGF0dHJzOntcInRpdGxlXCI6XCJCbG9ja3F1b3RlXCJ9LG9uOntcIm1vdXNlZG93blwiOmZ1bmN0aW9uKCRldmVudCl7JGV2ZW50LnByZXZlbnREZWZhdWx0KCk7JGV2ZW50LnN0b3BQcm9wYWdhdGlvbigpO3JldHVybiBfdm0uZWRpdG9yLmNvbW1hbmRzLnRvZ2dsZUJsb2NrcXVvdGUoKX19fSxbX2MoJ3NwYW4nLHtzdGF0aWNDbGFzczpcImZpIGZpLXJzLWJsb2NrLXF1b3RlXCJ9KV0pXSksX3ZtLl92KFwiIFwiKSxfYygnc3Bhbicse3N0YXRpY0NsYXNzOlwiYy1yaWNoLWVkaXRvcl9fYnRuLWdyb3VwXCJ9LFtfYygnYnV0dG9uJyx7YXR0cnM6e1widGl0bGVcIjpcIkhvcml6b250YWwgcnVsZVwifSxvbjp7XCJjbGlja1wiOmZ1bmN0aW9uKCRldmVudCl7cmV0dXJuIF92bS5lZGl0b3IuY29tbWFuZHMuc2V0SG9yaXpvbnRhbFJ1bGUoKX19fSxbX2MoJ3NwYW4nLHtzdGF0aWNDbGFzczpcImZpIGZpLXJzLWhvcml6b250YWwtcnVsZVwifSldKSxfdm0uX3YoXCIgXCIpLF9jKCdidXR0b24nLHtjbGFzczpfdm0uZWRpdG9yLmlzQWN0aXZlKCdidWxsZXRMaXN0JykgPyBfdm0uYWN0aXZlQ2xhc3MgOiBudWxsLGF0dHJzOntcInRpdGxlXCI6XCJCdWxsZXQgbGlzdFwifSxvbjp7XCJtb3VzZWRvd25cIjpmdW5jdGlvbigkZXZlbnQpeyRldmVudC5wcmV2ZW50RGVmYXVsdCgpOyRldmVudC5zdG9wUHJvcGFnYXRpb24oKTtyZXR1cm4gX3ZtLmVkaXRvci5jb21tYW5kcy50b2dnbGVCdWxsZXRMaXN0KCl9fX0sW19jKCdzcGFuJyx7c3RhdGljQ2xhc3M6XCJmaSBmaS1ycy1saXN0XCJ9KV0pLF92bS5fdihcIiBcIiksX2MoJ2J1dHRvbicse2NsYXNzOl92bS5lZGl0b3IuaXNBY3RpdmUoJ29yZGVyZWRMaXN0JykgPyBfdm0uYWN0aXZlQ2xhc3MgOiBudWxsLGF0dHJzOntcInRpdGxlXCI6XCJPcmRlcmVkIGxpc3RcIn0sb246e1wibW91c2Vkb3duXCI6ZnVuY3Rpb24oJGV2ZW50KXskZXZlbnQucHJldmVudERlZmF1bHQoKTskZXZlbnQuc3RvcFByb3BhZ2F0aW9uKCk7cmV0dXJuIF92bS5lZGl0b3IuY29tbWFuZHMudG9nZ2xlT3JkZXJlZExpc3QoKX19fSxbX2MoJ3NwYW4nLHtzdGF0aWNDbGFzczpcImZpIGZpLXJzLWJhcnMtc29ydFwifSldKSxfdm0uX3YoXCIgXCIpLF9jKCdidXR0b24nLHtjbGFzczpfdm0uZWRpdG9yLmlzQWN0aXZlKCd0YXNrTGlzdCcpID8gX3ZtLmFjdGl2ZUNsYXNzIDogbnVsbCxhdHRyczp7XCJ0aXRsZVwiOlwiVGFzayBsaXN0XCJ9LG9uOntcIm1vdXNlZG93blwiOmZ1bmN0aW9uKCRldmVudCl7JGV2ZW50LnByZXZlbnREZWZhdWx0KCk7JGV2ZW50LnN0b3BQcm9wYWdhdGlvbigpO3JldHVybiBfdm0uZWRpdG9yLmNvbW1hbmRzLnRvZ2dsZVRhc2tMaXN0KCl9fX0sW19jKCdzcGFuJyx7c3RhdGljQ2xhc3M6XCJmaSBmaS1ycy1saXN0LWNoZWNrXCJ9KV0pXSksX3ZtLl92KFwiIFwiKSxfYygnc3Bhbicse3N0YXRpY0NsYXNzOlwiYy1yaWNoLWVkaXRvcl9fYnRuLWdyb3VwXCJ9LFtfYygnYnV0dG9uJyx7YXR0cnM6e1widGl0bGVcIjpcIlVuZG9cIn0sb246e1wiY2xpY2tcIjpmdW5jdGlvbigkZXZlbnQpe3JldHVybiBfdm0uZWRpdG9yLmNvbW1hbmRzLnVuZG8oKX19fSxbX2MoJ3NwYW4nLHtzdGF0aWNDbGFzczpcImZpIGZpLXJzLXVuZG9cIn0pXSksX3ZtLl92KFwiIFwiKSxfYygnYnV0dG9uJyx7YXR0cnM6e1widGl0bGVcIjpcIlJlZG9cIn0sb246e1wiY2xpY2tcIjpmdW5jdGlvbigkZXZlbnQpe3JldHVybiBfdm0uZWRpdG9yLmNvbW1hbmRzLnJlZG8oKX19fSxbX2MoJ3NwYW4nLHtzdGF0aWNDbGFzczpcImZpIGZpLXJzLXJlZG9cIn0pXSksX3ZtLl92KFwiIFwiKSxfYygnYnV0dG9uJyx7Y2xhc3M6X3ZtLm1kVmlldyA/IF92bS5hY3RpdmVDbGFzcyA6IG51bGwsYXR0cnM6e1widGl0bGVcIjpcIk1hcmtkb3duIHZpZXdcIn0sb246e1wiY2xpY2tcIjpmdW5jdGlvbigkZXZlbnQpeyhfdm0ubWRWaWV3ID0gIV92bS5tZFZpZXcpICYmIChfdm0uaHRtbFZpZXcgPSBmYWxzZSl9fX0sW19jKCdzcGFuJyx7c3RhdGljQ2xhc3M6XCJmaSBmaS1ycy1maWxlLWNvZGVcIn0pXSksX3ZtLl92KFwiIFwiKSwoIV92bS5hdXRvc2F2ZSk/W19jKCdidXR0b24nLHtjbGFzczohX3ZtLnByaXN0aW5lID8gX3ZtLmFjdGl2ZUNsYXNzIDogbnVsbCxhdHRyczp7XCJ0aXRsZVwiOiFfdm0ucHJpc3RpbmUgPyAnU2F2ZWQnIDogJ1Vuc2F2ZWQnfSxvbjp7XCJjbGlja1wiOl92bS5zYXZlfX0sW19jKCdzcGFuJyx7c3RhdGljQ2xhc3M6XCJmaSBmaS1ycy1kaXNrXCJ9KV0pXTpfdm0uX2UoKSxfdm0uX3YoXCIgXCIpLF9jKCdkaXYnLHtzdGF0aWNDbGFzczpcImMtcmljaC1lZGl0b3JfX2F1dG9zYXZlIGMtcmljaC1lZGl0b3JfX2ZsYWdcIixjbGFzczpfdm0uYXV0b3NhdmUgPyBfdm0uYWN0aXZlQ2xhc3MgOiBudWxsLG9uOntcImNsaWNrXCI6X3ZtLnRvZ2dsZUF1dG9zYXZlfX0sWyhfdm0uYXV0b3NhdmUpP19jKCdzcGFuJyx7c3RhdGljQ2xhc3M6XCJmaSBmaS1ycy10b2dnbGUtb25cIn0pOl9jKCdzcGFuJyx7c3RhdGljQ2xhc3M6XCJmaSBmaS1ycy10b2dnbGUtb2ZmXCJ9KSxfdm0uX3YoXCIgXCIpLF9jKCdzcGFuJyxbX3ZtLl92KFwiQXV0b3NhdmVcIildKV0pXSwyKSxfdm0uX3YoXCIgXCIpLChfdm0ubGlua1VybFZpc2libGUpP19jKCdpbnB1dCcse2RpcmVjdGl2ZXM6W3tuYW1lOlwibW9kZWxcIixyYXdOYW1lOlwidi1tb2RlbFwiLHZhbHVlOihfdm0ubGlua1VybCksZXhwcmVzc2lvbjpcImxpbmtVcmxcIn1dLHJlZjpcImxpbmtBY3RpdmF0b3JcIixhdHRyczp7XCJ0eXBlXCI6XCJ0ZXh0XCIsXCJwbGFjZWhvbGRlclwiOlwiaHR0cDovL1wifSxkb21Qcm9wczp7XCJ2YWx1ZVwiOihfdm0ubGlua1VybCl9LG9uOntcImtleWRvd25cIjpbZnVuY3Rpb24oJGV2ZW50KXtpZighJGV2ZW50LnR5cGUuaW5kZXhPZigna2V5JykmJl92bS5faygkZXZlbnQua2V5Q29kZSxcImVudGVyXCIsMTMsJGV2ZW50LmtleSxcIkVudGVyXCIpKXJldHVybiBudWxsOyRldmVudC5wcmV2ZW50RGVmYXVsdCgpO3JldHVybiBfdm0uc2V0TGlua1VybChmYWxzZSl9LGZ1bmN0aW9uKCRldmVudCl7aWYoISRldmVudC50eXBlLmluZGV4T2YoJ2tleScpJiZfdm0uX2soJGV2ZW50LmtleUNvZGUsXCJlc2NcIiwyNywkZXZlbnQua2V5LFtcIkVzY1wiLFwiRXNjYXBlXCJdKSlyZXR1cm4gbnVsbDtyZXR1cm4gX3ZtLnNldExpbmtVcmwodHJ1ZSl9XSxcImJsdXJcIjpmdW5jdGlvbigkZXZlbnQpe3JldHVybiBfdm0uc2V0TGlua1VybChmYWxzZSl9LFwiaW5wdXRcIjpmdW5jdGlvbigkZXZlbnQpe2lmKCRldmVudC50YXJnZXQuY29tcG9zaW5nKXJldHVybjtfdm0ubGlua1VybD0kZXZlbnQudGFyZ2V0LnZhbHVlfX19KTpfdm0uX2UoKV0pLF92bS5fdihcIiBcIiksKF92bS5mcm9tTWVtb3J5KT9fYygnZGl2Jyx7c3RhdGljQ2xhc3M6XCJjLXJpY2gtZWRpdG9yX19tZW1vcnlcIn0sW192bS5fdihcIlNhdmVkIG9uIGxvY2FsIG1lbW9yeSBcIiksX2MoJ3NwYW4nLHtvbjp7XCJjbGlja1wiOmZ1bmN0aW9uKCRldmVudCl7cmV0dXJuIF92bS4kZW1pdCgnY2xlYXJNZW1vcnknKX19fSxbX3ZtLl92KFwiY2xpY2sgaGVyZVwiKV0pLF92bS5fdihcIiB0byByZXN0b3JlIG9yaWdpbmFsIGNvbnRlbnQuXCIpXSk6X3ZtLl9lKCldKSxfdm0uX3YoXCIgXCIpLF9jKCdkcmFnZ2FibGUnLHtzdGF0aWNDbGFzczpcImMtcmljaC1lZGl0b3JfX3NlY3Rpb25zLXRhYnMgYy10YWJzIGMtZHJhZ2FibGVcIixhdHRyczp7XCJ0YWdcIjpcIm1lbnVcIixcImRyYWdnYWJsZVwiOlwiLmMtZHJhZ2dhYmxlX19pdGVtXCIsXCJsaXN0XCI6X3ZtLnNlY3Rpb25zfSxvbjp7XCJlbmRcIjpfdm0ub25TZWN0aW9uc0NoYW5nZX19LFtfdm0uX2woKF92bS5zZWN0aW9ucyksZnVuY3Rpb24oc2VjdGlvbixzZWN0aW9uSW5kZXgpe3JldHVybiBfYygnbGknLHtzdGF0aWNDbGFzczpcImMtZHJhZ2dhYmxlX19pdGVtXCJ9LFtfYygnc3Bhbicse3N0YXRpY0NsYXNzOlwiYy1hY3Rpb24gdi1zZW1pXCJ9LFtfYygnc3Bhbicse2RvbVByb3BzOntcImlubmVySFRNTFwiOl92bS5fcyhzZWN0aW9uLnRpdGxlIHx8ICdVbnRpdGxlZCcpfSxvbjp7XCJjbGlja1wiOmZ1bmN0aW9uKCRldmVudCl7cmV0dXJuIF92bS5sb2FkU2VjdGlvbihzZWN0aW9uSW5kZXgpfX19KSxfdm0uX3YoXCIgXCIpLF9jKCdidXR0b24nLHtzdGF0aWNDbGFzczpcImMtY2hpcFwiLG9uOntcImNsaWNrXCI6ZnVuY3Rpb24oJGV2ZW50KXskZXZlbnQucHJldmVudERlZmF1bHQoKTtyZXR1cm4gX3ZtLnJlbW92ZVNlY3Rpb24oc2VjdGlvbkluZGV4KX19fSxbX2MoJ3NwYW4nLHtzdGF0aWNDbGFzczpcImZpIGZpLXJyLWNyb3NzLXNtYWxsXCJ9KV0pXSldKX0pLF92bS5fdihcIiBcIiksX2MoJ2xpJyx7YXR0cnM6e1wic2xvdFwiOlwiZm9vdGVyXCJ9LHNsb3Q6XCJmb290ZXJcIn0sW19jKCdidXR0b24nLHtzdGF0aWNDbGFzczpcImMtYWN0aW9uIHYtc2VtaVwiLG9uOntcImNsaWNrXCI6X3ZtLmFkZFNlY3Rpb259fSxbX3ZtLl92KFwiK1wiKV0pXSldLDIpLF92bS5fdihcIiBcIiksKCFfdm0uaHRtbFZpZXcgJiYgIV92bS5tZFZpZXcpP19jKCdkaXYnLF92bS5fYih7c3RhdGljQ2xhc3M6XCJjLXJpY2gtZWRpdG9yX19kb2N1bWVudFwifSwnZGl2Jyxfdm0uJGF0dHJzLGZhbHNlKSxbX2MoJ2VkaXRvci1jb250ZW50Jyx7c3RhdGljQ2xhc3M6XCJjLXJpY2gtZWRpdG9yX19wYWdlXCIsYXR0cnM6e1wiZWRpdG9yXCI6X3ZtLmVkaXRvcn19KV0sMSk6KF92bS5odG1sVmlldyk/X2MoJ3RleHRhcmVhJyxfdm0uX2Ioe3N0YXRpY0NsYXNzOlwiYy1yaWNoLWVkaXRvcl9fdGV4dGFyZWFcIixkb21Qcm9wczp7XCJ2YWx1ZVwiOl92bS5zZWN0aW9uc1tfdm0uY3VycmVudFNlY3Rpb25JbmRleF0uaHRtbH0sb246e1wiaW5wdXRcIjpmdW5jdGlvbigkZXZlbnQpe3JldHVybiBfdm0uJGVtaXQoJ2lucHV0JywgJGV2ZW50KX19fSwndGV4dGFyZWEnLF92bS4kYXR0cnMsZmFsc2UpKTooX3ZtLm1kVmlldyk/X2MoJ3RleHRhcmVhJyxfdm0uX2Ioe3N0YXRpY0NsYXNzOlwiYy1yaWNoLWVkaXRvcl9fdGV4dGFyZWFcIixkb21Qcm9wczp7XCJ2YWx1ZVwiOl92bS5tZH0sb246e1wiaW5wdXRcIjpmdW5jdGlvbigkZXZlbnQpe3JldHVybiBfdm0uJGVtaXQoJ2lucHV0JywgJGV2ZW50KX19fSwndGV4dGFyZWEnLF92bS4kYXR0cnMsZmFsc2UpKTpfdm0uX2UoKV0sMSlcbn1cbnZhciBzdGF0aWNSZW5kZXJGbnMgPSBbXVxuXG5leHBvcnQgeyByZW5kZXIsIHN0YXRpY1JlbmRlckZucyB9IiwiaW1wb3J0IHsgRXh0ZW5zaW9uIH0gZnJvbSAnQHRpcHRhcC9jb3JlJ1xuaW1wb3J0IHsgVGV4dFNlbGVjdGlvbiB9IGZyb20gJ3Byb3NlbWlycm9yLXN0YXRlJ1xuXG5leHBvcnQgZGVmYXVsdCBFeHRlbnNpb24uY3JlYXRlKHtcbiAgbmFtZTogJ2luZGVudCcsXG5cbiAgYWRkQ29tbWFuZHMgKCkge1xuICAgIGNvbnN0IGFwcGx5SW5kZW50ID0gZGlyZWN0aW9uID0+ICgpID0+ICh7IGNoYWluLCB0ciwgc3RhdGUsIGRpc3BhdGNoLCBlZGl0b3IgfSkgPT4ge1xuICAgICAgY29uc3Qgc2VsZWN0aW9uID0gc3RhdGUuc2VsZWN0aW9uXG4gICAgICBjb25zdCBkb2MgPSBzdGF0ZS5kb2NcbiAgICAgIGNvbnN0IGZyb20gPSBzZWxlY3Rpb24uZnJvbVxuICAgICAgY29uc3QgdG8gPSBzZWxlY3Rpb24udG9cbiAgICAgIGlmIChmcm9tICYmIHRvICYmIHNlbGVjdGlvbi4kZnJvbS5wYXJlbnQudHlwZS5uYW1lID09PSAnY29kZUJsb2NrJykge1xuICAgICAgICBjb25zdCBwb3NpdGlvbiA9IHsgZnJvbSwgdG8gfVxuICAgICAgICB3aGlsZSAocG9zaXRpb24uZnJvbSA+IDAgJiYgIS9cXG4vLnRlc3QoZG9jLnRleHRCZXR3ZWVuKHBvc2l0aW9uLmZyb20gLSAxLCBwb3NpdGlvbi5mcm9tKSkpIHtcbiAgICAgICAgICBwb3NpdGlvbi5mcm9tIC09IDFcbiAgICAgICAgfVxuICAgICAgICB3aGlsZSAocG9zaXRpb24udG8gPCBkb2Mubm9kZVNpemUgJiYgIS9cXG4vLnRlc3QoZG9jLnRleHRCZXR3ZWVuKHBvc2l0aW9uLnRvLCBwb3NpdGlvbi50byArIDEpKSkge1xuICAgICAgICAgIHBvc2l0aW9uLnRvICs9IDFcbiAgICAgICAgfVxuXG4gICAgICAgIGNvbnN0IHNlbGVjdGlvblRleHQgPSBkb2MudGV4dEJldHdlZW4ocG9zaXRpb24uZnJvbSwgcG9zaXRpb24udG8pLnNwbGl0KCdcXG4nKS5tYXAobGluZSA9PiB7XG4gICAgICAgICAgaWYgKGRpcmVjdGlvbiA+IDApIHtcbiAgICAgICAgICAgIHJldHVybiAnICAnICsgbGluZVxuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICByZXR1cm4gbGluZS5yZXBsYWNlKC9eKCB7Mn18XFx0KS8sICcnKVxuICAgICAgICAgIH1cbiAgICAgICAgfSkuam9pbignXFxuJylcblxuICAgICAgICAvKiAqXG4gICAgICAgIGNvbnNvbGUubG9nKCc+Pj4nLCB7XG4gICAgICAgICAgc3RhdGUsXG4gICAgICAgICAgc2VsZWN0aW9uLFxuICAgICAgICAgIGZyb20sXG4gICAgICAgICAgdG8sXG4gICAgICAgICAgc2VsZWN0aW9uVGV4dFxuICAgICAgICB9KVxuICAgICAgICAvKiAqL1xuXG4gICAgICAgIGNvbnN0IG5ld1RyID0gc3RhdGUudHIuaW5zZXJ0VGV4dChzZWxlY3Rpb25UZXh0LCBwb3NpdGlvbi5mcm9tLCBwb3NpdGlvbi50bylcbiAgICAgICAgY29uc3QgbmV3RnJvbSA9IG5ld1RyLmRvYy5yZXNvbHZlKHBvc2l0aW9uLmZyb20pXG4gICAgICAgIGNvbnN0IG5ld1RvID0gbmV3VHIuZG9jLnJlc29sdmUocG9zaXRpb24uZnJvbSArIHNlbGVjdGlvblRleHQubGVuZ3RoKVxuICAgICAgICBjb25zdCBuZXdTZWxlY3Rpb24gPSBuZXcgVGV4dFNlbGVjdGlvbihuZXdGcm9tLCBuZXdUbylcbiAgICAgICAgZGlzcGF0Y2gobmV3VHIuc2V0U2VsZWN0aW9uKG5ld1NlbGVjdGlvbikpXG5cbiAgICAgICAgcmV0dXJuIHRydWVcbiAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4ge1xuICAgICAgaW5kZW50OiBhcHBseUluZGVudCgxKSxcbiAgICAgIG91dGRlbnQ6IGFwcGx5SW5kZW50KC0xKVxuICAgIH1cbiAgfSxcblxuICBhZGRLZXlib2FyZFNob3J0Y3V0cyAoKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIFRhYjogKCkgPT4ge1xuICAgICAgICByZXR1cm4gdGhpcy5lZGl0b3IuY29tbWFuZHMuaW5kZW50KClcbiAgICAgIH0sXG4gICAgICAnU2hpZnQtVGFiJzogKCkgPT4ge1xuICAgICAgICByZXR1cm4gdGhpcy5lZGl0b3IuY29tbWFuZHMub3V0ZGVudCgpXG4gICAgICB9XG4gICAgfVxuICB9XG59KVxuIiwidmFyIHJlbmRlciA9IGZ1bmN0aW9uIHJlbmRlcigpe3ZhciBfdm09dGhpcyxfYz1fdm0uX3NlbGYuX2M7cmV0dXJuIF9jKCdub2RlLXZpZXctd3JhcHBlcicse3N0YXRpY0NsYXNzOlwiYy1oaWdodGxpZ2h0ZXJcIixjbGFzczp7J2MtaGlnaHRsaWdodGVyLS1mdWxsc2NyZWVuJzogX3ZtLmZ1bGxTY3JlZW59LG5hdGl2ZU9uOntcImNsaWNrXCI6ZnVuY3Rpb24oJGV2ZW50KXtyZXR1cm4gX3ZtLmNsaWNrLmFwcGx5KG51bGwsIGFyZ3VtZW50cyl9fX0sW19jKCdkaXYnLHtzdGF0aWNDbGFzczpcImMtaGlnaHRsaWdodGVyX190b29sYmFyXCIsYXR0cnM6e1wiY29udGVudGVkaXRhYmxlXCI6XCJmYWxzZVwifX0sW19jKCdkaXYnLHtzdGF0aWNDbGFzczpcImMtZmllbGQgdi1yYWRpdXMtYm90dG9tLW5vbmVcIn0sW19jKCdTZWxlY3Rvcicse3N0YXRpY0NsYXNzOlwiYy1oaWdodGxpZ2h0ZXJfX3NlbGVjdG9yXCIsYXR0cnM6e1wib3B0aW9uc1wiOl92bS5vcHRpb25zfSxtb2RlbDp7dmFsdWU6KF92bS5zZWxlY3RlZExhbmd1YWdlKSxjYWxsYmFjazpmdW5jdGlvbiAoJCR2KSB7X3ZtLnNlbGVjdGVkTGFuZ3VhZ2U9JCR2fSxleHByZXNzaW9uOlwic2VsZWN0ZWRMYW5ndWFnZVwifX0pLF92bS5fdihcIiBcIiksKF92bS5pc1J1bmFibGUpP19jKCdidXR0b24nLHtzdGF0aWNDbGFzczpcImMtaGlnaHRsaWdodGVyX19idXR0b24gYy1hY3Rpb25cIixvbjp7XCJjbGlja1wiOl92bS50b2dnbGVDb2RlVmlld319LFtfdm0uX3YoX3ZtLl9zKF92bS5zaG93Q29kZVZpZXcgPyAnSGlkZSBjb2RlJyA6ICdTaG93IGNvZGUnKSldKTpfdm0uX2UoKSxfdm0uX3YoXCIgXCIpLF9jKCdidXR0b24nLHtzdGF0aWNDbGFzczpcImMtaGlnaHRsaWdodGVyX19idXR0b24gYy1hY3Rpb25cIixvbjp7XCJjbGlja1wiOmZ1bmN0aW9uKCRldmVudCl7X3ZtLmZ1bGxTY3JlZW4gPSAhX3ZtLmZ1bGxTY3JlZW59fX0sW192bS5fdihfdm0uX3MoX3ZtLmZ1bGxTY3JlZW4gPyAnRnVsbCBzY3JlZW4gZXhpdCcgOiAnRnVsbCBzY3JlZW4nKSldKV0sMSldKSxfdm0uX3YoXCIgXCIpLF9jKCdwcmUnLHtkaXJlY3RpdmVzOlt7bmFtZTpcInNob3dcIixyYXdOYW1lOlwidi1zaG93XCIsdmFsdWU6KCFfdm0uaXNSdW5hYmxlIHx8IF92bS5zaG93Q29kZVZpZXcpLGV4cHJlc3Npb246XCIhaXNSdW5hYmxlIHx8IHNob3dDb2RlVmlld1wifV0sc3RhdGljQ2xhc3M6XCJjLWhpZ2h0bGlnaHRlcl9faGxqcyBobGpzXCIsY2xhc3M6eydjLWhpZ2h0bGlnaHRlcl9faGxqcy0tcnVubmFibGUnOiBfdm0uaXNSdW5hYmxlIH19LFtfYygnY29kZScsW19jKCdub2RlLXZpZXctY29udGVudCcpXSwxKV0pLF92bS5fdihcIiBcIiksX2MoJ2Rpdicse2RpcmVjdGl2ZXM6W3tuYW1lOlwic2hvd1wiLHJhd05hbWU6XCJ2LXNob3dcIix2YWx1ZTooX3ZtLmlzUnVuYWJsZSksZXhwcmVzc2lvbjpcImlzUnVuYWJsZVwifV0scmVmOlwicnVubmVyXCIsc3RhdGljQ2xhc3M6XCJjLWhpZ2h0bGlnaHRlcl9fcnVubmVyXCIsYXR0cnM6e1wiY29udGVudGVkaXRhYmxlXCI6XCJmYWxzZVwifX0sWyhfdm0uZXJyb3JzLmxlbmd0aCA+IDApP19jKCdkaXYnLF92bS5fbCgoX3ZtLmVycm9ycyksZnVuY3Rpb24oZXJyb3Ipe3JldHVybiBfYygncHJlJyx7c3RhdGljQ2xhc3M6XCJjLWhpZ2h0bGlnaHRlcl9fZXJyb3JcIn0sW19jKCdjb2RlJyxbX3ZtLl92KF92bS5fcyhlcnJvcikpXSldKX0pLDApOl92bS5fZSgpLF92bS5fdihcIiBcIiksKF92bS53YXJuaW5ncy5sZW5ndGggPiAwKT9fYygnZGl2Jyxfdm0uX2woKF92bS53YXJuaW5ncyksZnVuY3Rpb24od2Fybil7cmV0dXJuIF9jKCdwcmUnLHtzdGF0aWNDbGFzczpcImMtaGlnaHRsaWdodGVyX193YXJuaW5nXCJ9LFtfYygnY29kZScsW192bS5fdihfdm0uX3Mod2FybikpXSldKX0pLDApOl92bS5fZSgpLF92bS5fdihcIiBcIiksX2MoJ2Rpdicse3JlZjpcIm1vdW50ZXJcIixzdGF0aWNDbGFzczpcImMtaGlnaHRsaWdodGVyX19ydW5uZXJfX2NvbnRlbnRzXCJ9KV0pXSlcbn1cbnZhciBzdGF0aWNSZW5kZXJGbnMgPSBbXVxuXG5leHBvcnQgeyByZW5kZXIsIHN0YXRpY1JlbmRlckZucyB9IiwiaW1wb3J0IG1vZCBmcm9tIFwiLSEuLi8uLi8uLi9ub2RlX21vZHVsZXMvYmFiZWwtbG9hZGVyL2xpYi9pbmRleC5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvaW5kZXguanM/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL0hpZ2hsaWdodGVyLnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qc1wiOyBleHBvcnQgZGVmYXVsdCBtb2Q7IGV4cG9ydCAqIGZyb20gXCItIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9iYWJlbC1sb2FkZXIvbGliL2luZGV4LmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9pbmRleC5qcz8/dnVlLWxvYWRlci1vcHRpb25zIS4vSGlnaGxpZ2h0ZXIudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzXCIiLCJpbXBvcnQgeyByZW5kZXIsIHN0YXRpY1JlbmRlckZucyB9IGZyb20gXCIuL0hpZ2hsaWdodGVyLnZ1ZT92dWUmdHlwZT10ZW1wbGF0ZSZpZD01NDJjN2EwYVwiXG5pbXBvcnQgc2NyaXB0IGZyb20gXCIuL0hpZ2hsaWdodGVyLnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qc1wiXG5leHBvcnQgKiBmcm9tIFwiLi9IaWdobGlnaHRlci52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anNcIlxuXG5cbi8qIG5vcm1hbGl6ZSBjb21wb25lbnQgKi9cbmltcG9ydCBub3JtYWxpemVyIGZyb20gXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL3J1bnRpbWUvY29tcG9uZW50Tm9ybWFsaXplci5qc1wiXG52YXIgY29tcG9uZW50ID0gbm9ybWFsaXplcihcbiAgc2NyaXB0LFxuICByZW5kZXIsXG4gIHN0YXRpY1JlbmRlckZucyxcbiAgZmFsc2UsXG4gIG51bGwsXG4gIG51bGwsXG4gIG51bGxcbiAgXG4pXG5cbmV4cG9ydCBkZWZhdWx0IGNvbXBvbmVudC5leHBvcnRzIiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gKGhsanMpIHtcbiAgcmV0dXJuIHtcbiAgICBzdWJMYW5ndWFnZTogJ3htbCcsXG4gICAgY29udGFpbnM6IFtcbiAgICAgIGhsanMuQ09NTUVOVCgnPCEtLScsICctLT4nLCB7XG4gICAgICAgIHJlbGV2YW5jZTogMTBcbiAgICAgIH0pLFxuICAgICAge1xuICAgICAgICBiZWdpbjogL14oXFxzKikoPHNjcmlwdD4pL2dtLFxuICAgICAgICBlbmQ6IC9eKFxccyopKDxcXC9zY3JpcHQ+KS9nbSxcbiAgICAgICAgc3ViTGFuZ3VhZ2U6ICdqYXZhc2NyaXB0JyxcbiAgICAgICAgZXhjbHVkZUJlZ2luOiB0cnVlLFxuICAgICAgICBleGNsdWRlRW5kOiB0cnVlXG4gICAgICB9LFxuICAgICAge1xuICAgICAgICBiZWdpbjogL14oPzpcXHMqKSg/OjxzY3JpcHRcXHMrbGFuZz0oW1wiJ10pdHNcXDE+KS9nbSxcbiAgICAgICAgZW5kOiAvXihcXHMqKSg8XFwvc2NyaXB0PikvZ20sXG4gICAgICAgIHN1Ykxhbmd1YWdlOiAndHlwZXNjcmlwdCcsXG4gICAgICAgIGV4Y2x1ZGVCZWdpbjogdHJ1ZSxcbiAgICAgICAgZXhjbHVkZUVuZDogdHJ1ZVxuICAgICAgfSxcbiAgICAgIHtcbiAgICAgICAgYmVnaW46IC9eKFxccyopKDxzdHlsZShcXHMrc2NvcGVkKT8+KS9nbSxcbiAgICAgICAgZW5kOiAvXihcXHMqKSg8XFwvc3R5bGU+KS9nbSxcbiAgICAgICAgc3ViTGFuZ3VhZ2U6ICdjc3MnLFxuICAgICAgICBleGNsdWRlQmVnaW46IHRydWUsXG4gICAgICAgIGV4Y2x1ZGVFbmQ6IHRydWVcbiAgICAgIH0sXG4gICAgICB7XG4gICAgICAgIGJlZ2luOiAvXig/OlxccyopKD86PHN0eWxlKD86XFxzK3Njb3BlZCk/XFxzK2xhbmc9KFtcIiddKSg/OnNbY2Fdc3MpXFwxKD86XFxzK3Njb3BlZCk/PikvZ20sXG4gICAgICAgIGVuZDogL14oXFxzKikoPFxcL3N0eWxlPikvZ20sXG4gICAgICAgIHN1Ykxhbmd1YWdlOiAnc2NzcycsXG4gICAgICAgIGV4Y2x1ZGVCZWdpbjogdHJ1ZSxcbiAgICAgICAgZXhjbHVkZUVuZDogdHJ1ZVxuICAgICAgfSxcbiAgICAgIHtcbiAgICAgICAgYmVnaW46IC9eKD86XFxzKikoPzo8c3R5bGUoPzpcXHMrc2NvcGVkKT9cXHMrbGFuZz0oW1wiJ10pc3R5bHVzXFwxKD86XFxzK3Njb3BlZCk/PikvZ20sXG4gICAgICAgIGVuZDogL14oXFxzKikoPFxcL3N0eWxlPikvZ20sXG4gICAgICAgIHN1Ykxhbmd1YWdlOiAnc3R5bHVzJyxcbiAgICAgICAgZXhjbHVkZUJlZ2luOiB0cnVlLFxuICAgICAgICBleGNsdWRlRW5kOiB0cnVlXG4gICAgICB9XG4gICAgXVxuICB9XG59XG4iLCJpbXBvcnQgVHVybmRvd25TZXJ2aWNlIGZyb20gJ3R1cm5kb3duJ1xuXG5jb25zdCB0dXJuZG93blNlcnZpY2UgPSBuZXcgVHVybmRvd25TZXJ2aWNlKHtcbiAgaGVhZGluZ1N0eWxlOiAnYXR4JyxcbiAgaHI6ICctLS0nLFxuICBidWxsZXRMaXN0TWFya2VyOiAnKicsXG4gIGNvZGVCbG9ja1N0eWxlOiAnZmVuY2VkJyxcbiAgZmVuY2U6ICdgYGAnLFxuICBlbURlbGltaXRlcjogJ18nLFxuICBzdHJvbmdEZWxpbWl0ZXI6ICcqKicsXG4gIGxpbmtTdHlsZTogJ2lubGluZWQnXG59KVxuXG50dXJuZG93blNlcnZpY2UuYWRkUnVsZSgnc3RyaWtldGhyb3VnaCcsIHtcbiAgZmlsdGVyOiBbJ3MnXSxcbiAgcmVwbGFjZW1lbnQ6IGNvbnRlbnQgPT4ge1xuICAgIHJldHVybiBgfn4ke2NvbnRlbnR9fn5gXG4gIH1cbn0pXG5cbnR1cm5kb3duU2VydmljZS5hZGRSdWxlKCd1bmRlcmxpbmUnLCB7XG4gIGZpbHRlcjogWyd1J10sXG4gIHJlcGxhY2VtZW50OiBjb250ZW50ID0+IHtcbiAgICByZXR1cm4gYMK3wrcke2NvbnRlbnR9wrfCt2BcbiAgfVxufSlcblxudHVybmRvd25TZXJ2aWNlLmFkZFJ1bGUoJ21hcmsnLCB7XG4gIGZpbHRlcjogWydtYXJrJ10sXG4gIHJlcGxhY2VtZW50OiBjb250ZW50ID0+IHtcbiAgICByZXR1cm4gYCEhISR7Y29udGVudH0hISFgXG4gIH1cbn0pXG5cbnR1cm5kb3duU2VydmljZS5hZGRSdWxlKCdwYXJhZ3JhcGgnLCB7XG4gIGZpbHRlcjogWydwJ10sXG4gIHJlcGxhY2VtZW50OiAoY29udGVudCwgbm9kZSkgPT4ge1xuICAgIGlmIChub2RlLnBhcmVudEVsZW1lbnQ/Lm5vZGVOYW1lID09PSAnTEknKSB7XG4gICAgICByZXR1cm4gY29udGVudFxuICAgIH1cblxuICAgIHJldHVybiBgXFxuXFxuJHtjb250ZW50fVxcblxcbmBcbiAgfVxufSlcblxudHVybmRvd25TZXJ2aWNlLmFkZFJ1bGUoJ2xpc3RJdGVtJywge1xuICBmaWx0ZXI6IG5vZGUgPT4ge1xuICAgIHJldHVybiBub2RlLm5vZGVOYW1lID09PSAnTEknICYmICFub2RlLmhhc0F0dHJpYnV0ZSgnZGF0YS10eXBlJylcbiAgfSxcbiAgcmVwbGFjZW1lbnQ6IGZ1bmN0aW9uIChjb250ZW50LCBub2RlLCBvcHRpb25zKSB7XG4gICAgbGV0IGxpc3RJdGVtUHJlZml4ID0gYCR7b3B0aW9ucy5idWxsZXRMaXN0TWFya2VyfSBgXG4gICAgY29uc3QgcGFyZW50Tm9kZSA9IG5vZGUucGFyZW50Tm9kZVxuXG4gICAgY29udGVudCA9IGNvbnRlbnRcbiAgICAgIC5yZXBsYWNlKC9eXFxzKlxcbisvLCAnJylcbiAgICAgIC5yZXBsYWNlKC9cXHMqXFxuKyQvLCAnXFxuJylcbiAgICAgIC5yZXBsYWNlKC9cXHMqXFxuL2dtLCAnXFxuICAnKVxuXG4gICAgaWYgKHBhcmVudE5vZGU/Lm5vZGVOYW1lID09PSAnT0wnKSB7XG4gICAgICBjb25zdCBzdGFydCA9IHBhcmVudE5vZGU/LmdldEF0dHJpYnV0ZSgnc3RhcnQnKVxuICAgICAgY29uc3QgaW5kZXggPSBBcnJheS5wcm90b3R5cGUuaW5kZXhPZi5jYWxsKHBhcmVudE5vZGUuY2hpbGRyZW4sIG5vZGUpXG4gICAgICBsaXN0SXRlbVByZWZpeCA9IGAke3N0YXJ0ID8gTnVtYmVyKHN0YXJ0KSArIGluZGV4IDogaW5kZXggKyAxfS4gYFxuICAgIH1cblxuICAgIHJldHVybiBgJHtsaXN0SXRlbVByZWZpeH0ke2NvbnRlbnR9JHtcbiAgICAgIG5vZGUubmV4dFNpYmxpbmcgJiYgIS9cXG4kLy50ZXN0KGNvbnRlbnQpID8gJ1xcbicgOiAnJ1xuICAgIH1gXG4gIH1cbn0pXG5cbnR1cm5kb3duU2VydmljZS5hZGRSdWxlKCd0YXNrTGlzdEl0ZW0nLCB7XG4gIGZpbHRlcjogbm9kZSA9PiB7XG4gICAgcmV0dXJuIChcbiAgICAgIG5vZGUubm9kZU5hbWUgPT09ICdMSScgJiYgbm9kZS5nZXRBdHRyaWJ1dGUoJ2RhdGEtdHlwZScpID09PSAndGFza0l0ZW0nXG4gICAgKVxuICB9LFxuICByZXBsYWNlbWVudDogZnVuY3Rpb24gKGNvbnRlbnQsIG5vZGUsIG9wdGlvbnMpIHtcbiAgICBsZXQgbGlzdEl0ZW1QcmVmaXggPSBgJHtvcHRpb25zLmJ1bGxldExpc3RNYXJrZXJ9IGBcbiAgICBjb25zdCBwYXJlbnROb2RlID0gbm9kZS5wYXJlbnROb2RlXG5cbiAgICBjb250ZW50ID0gY29udGVudFxuICAgICAgLnJlcGxhY2UoL15cXHMqXFxuKy8sICcnKVxuICAgICAgLnJlcGxhY2UoL1xccypcXG4rJC8sICcnKVxuICAgICAgLnJlcGxhY2UoL1xccypcXG4vZ20sICdcXG4gICcpXG5cbiAgICBpZiAocGFyZW50Tm9kZT8ubm9kZU5hbWUgPT09ICdVTCcpIHtcbiAgICAgIGNvbnN0IGNoZWNrZWQgPSBub2RlLmdldEF0dHJpYnV0ZSgnZGF0YS1jaGVja2VkJylcbiAgICAgIGxpc3RJdGVtUHJlZml4ID0gYCR7bGlzdEl0ZW1QcmVmaXh9JHtjaGVja2VkID09PSAndHJ1ZScgPyAnW3hdJyA6ICdbIF0nfSBgXG4gICAgfVxuXG4gICAgcmV0dXJuIGAke2xpc3RJdGVtUHJlZml4fSR7Y29udGVudH0ke25vZGUubmV4dFNpYmxpbmcgJiYgIS9cXG4kLy50ZXN0KGNvbnRlbnQpID8gJ1xcbicgOiAnJ31gXG4gIH1cbn0pXG5cbmZ1bmN0aW9uIGh0bWxUb01hcmtkb3duIChodG1sKSB7XG4gIHJldHVybiB0dXJuZG93blNlcnZpY2UudHVybmRvd24oaHRtbClcbn1cblxuZXhwb3J0IGRlZmF1bHQgaHRtbFRvTWFya2Rvd25cbiIsImltcG9ydCBET01QdXJpZnkgZnJvbSAnZG9tcHVyaWZ5J1xuaW1wb3J0IHsgbWFya2VkIH0gZnJvbSAnbWFya2VkJ1xuXG5tYXJrZWQudXNlKHtcbiAgZ2ZtOiB0cnVlLFxuICBleHRlbnNpb25zOiBbe1xuICAgIG5hbWU6ICd1bmRlcmxpbmUnLFxuICAgIGxldmVsOiAnaW5saW5lJyxcbiAgICBzdGFydCAoc3JjKSB7XG4gICAgICBjb25zdCBzdGFydCA9IHNyYy5tYXRjaCgvwrfCt1tewrfCt1xcbl0vKT8uaW5kZXhcbiAgICAgIHJldHVybiBzdGFydFxuICAgIH0sXG4gICAgdG9rZW5pemVyIChzcmMsIHRva2Vucykge1xuICAgICAgY29uc3QgcnVsZSA9IC9ewrfCtyhbXsK3wrdcXG5dKynCt8K3L1xuICAgICAgY29uc3QgbWF0Y2ggPSBydWxlLmV4ZWMoc3JjKVxuICAgICAgaWYgKG1hdGNoKSB7XG4gICAgICAgIGNvbnN0IHRva2VuID0ge1xuICAgICAgICAgIHR5cGU6ICd1bmRlcmxpbmUnLFxuICAgICAgICAgIHJhdzogbWF0Y2hbMF0sXG4gICAgICAgICAgdGV4dDogdGhpcy5sZXhlci5pbmxpbmVUb2tlbnMobWF0Y2hbMV0udHJpbSgpKSxcbiAgICAgICAgICB0b2tlbnM6IFtdXG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHRva2VuXG4gICAgICB9XG4gICAgfSxcbiAgICByZW5kZXJlciAodG9rZW4pIHtcbiAgICAgIHJldHVybiBgPHU+JHt0aGlzLnBhcnNlci5wYXJzZUlubGluZSh0b2tlbi50ZXh0KX08L3U+YFxuICAgIH1cbiAgfSwge1xuICAgIG5hbWU6ICdzdHJpa2UnLFxuICAgIGxldmVsOiAnaW5saW5lJyxcbiAgICBzdGFydCAoc3JjKSB7XG4gICAgICBjb25zdCBzdGFydCA9IHNyYy5tYXRjaCgvfn5bXn5+XFxuXS8pPy5pbmRleFxuICAgICAgcmV0dXJuIHN0YXJ0XG4gICAgfSxcbiAgICB0b2tlbml6ZXIgKHNyYywgdG9rZW5zKSB7XG4gICAgICBjb25zdCBydWxlID0gL15+fihbXn5+XFxuXSspfn4vXG4gICAgICBjb25zdCBtYXRjaCA9IHJ1bGUuZXhlYyhzcmMpXG4gICAgICBpZiAobWF0Y2gpIHtcbiAgICAgICAgY29uc3QgdG9rZW4gPSB7XG4gICAgICAgICAgdHlwZTogJ3N0cmlrZScsXG4gICAgICAgICAgcmF3OiBtYXRjaFswXSxcbiAgICAgICAgICB0ZXh0OiB0aGlzLmxleGVyLmlubGluZVRva2VucyhtYXRjaFsxXS50cmltKCkpLFxuICAgICAgICAgIHRva2VuczogW11cbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdG9rZW5cbiAgICAgIH1cbiAgICB9LFxuICAgIHJlbmRlcmVyICh0b2tlbikge1xuICAgICAgcmV0dXJuIGA8cz4ke3RoaXMucGFyc2VyLnBhcnNlSW5saW5lKHRva2VuLnRleHQpfTwvcz5gXG4gICAgfVxuICB9LCB7XG4gICAgbmFtZTogJ21hcmsnLFxuICAgIGxldmVsOiAnaW5saW5lJyxcbiAgICBzdGFydCAoc3JjKSB7XG4gICAgICBjb25zdCBzdGFydCA9IHNyYy5tYXRjaCgvISEhW14hISFcXG5dLyk/LmluZGV4XG4gICAgICByZXR1cm4gc3RhcnRcbiAgICB9LFxuICAgIHRva2VuaXplciAoc3JjLCB0b2tlbnMpIHtcbiAgICAgIGNvbnN0IHJ1bGUgPSAvXiEhIShbXiEhIVxcbl0rKSEhIS9cbiAgICAgIGNvbnN0IG1hdGNoID0gcnVsZS5leGVjKHNyYylcbiAgICAgIGlmIChtYXRjaCkge1xuICAgICAgICBjb25zdCB0b2tlbiA9IHtcbiAgICAgICAgICB0eXBlOiAnbWFyaycsXG4gICAgICAgICAgcmF3OiBtYXRjaFswXSxcbiAgICAgICAgICB0ZXh0OiB0aGlzLmxleGVyLmlubGluZVRva2VucyhtYXRjaFsxXS50cmltKCkpLFxuICAgICAgICAgIHRva2VuczogW11cbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdG9rZW5cbiAgICAgIH1cbiAgICB9LFxuICAgIHJlbmRlcmVyICh0b2tlbikge1xuICAgICAgcmV0dXJuIGA8bWFyaz4ke3RoaXMucGFyc2VyLnBhcnNlSW5saW5lKHRva2VuLnRleHQpfTwvbWFyaz5gXG4gICAgfVxuICB9LCB7XG4gICAgbmFtZTogJ3Rhc2tsaXN0JyxcbiAgICBsZXZlbDogJ2Jsb2NrJyxcbiAgICBzdGFydCAoc3JjKSB7XG4gICAgICBjb25zdCBzdGFydCA9IHNyYy5tYXRjaCgvXFwqIFxcWyggfHgpXFxdIC8pPy5pbmRleFxuICAgICAgcmV0dXJuIHN0YXJ0XG4gICAgfSxcbiAgICB0b2tlbml6ZXIgKHNyYywgdG9rZW5zKSB7XG4gICAgICBjb25zdCBydWxlID0gL14oPzpcXCogXFxbKCB8eClcXF0gKFteXFxuXSopKD86XFxufCQpKSsvXG4gICAgICBjb25zdCBtYXRjaCA9IHJ1bGUuZXhlYyhzcmMpXG4gICAgICBpZiAobWF0Y2gpIHtcbiAgICAgICAgY29uc3QgdG9rZW4gPSB7XG4gICAgICAgICAgdHlwZTogJ3Rhc2tsaXN0JyxcbiAgICAgICAgICByYXc6IG1hdGNoWzBdLFxuICAgICAgICAgIHRleHQ6IG1hdGNoWzBdLnRyaW0oKSxcbiAgICAgICAgICB0b2tlbnM6IFtdXG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5sZXhlci5pbmxpbmUodG9rZW4udGV4dCwgdG9rZW4udG9rZW5zKVxuICAgICAgICByZXR1cm4gdG9rZW5cbiAgICAgIH1cbiAgICB9LFxuICAgIHJlbmRlcmVyICh0b2tlbikge1xuICAgICAgcmV0dXJuIGA8dWwgZGF0YS10eXBlPVwidGFza0xpc3RcIj4ke3RoaXMucGFyc2VyLnBhcnNlSW5saW5lKHRva2VuLnRva2Vucyl9XFxuPC91bD5cXG5gXG4gICAgfVxuICB9LCB7XG4gICAgbmFtZTogJ3Rhc2tsaXN0aXRlbScsXG4gICAgbGV2ZWw6ICdpbmxpbmUnLFxuICAgIGNoaWxkVG9rZW5zOiBbJ2l0ZW0nXSxcbiAgICBzdGFydCAoc3JjKSB7XG4gICAgICBjb25zdCBzdGFydCA9IHNyYy5tYXRjaCgvXlxcKiBcXFsoIHx4KVxcXSAvKT8uaW5kZXhcbiAgICAgIHJldHVybiBzdGFydFxuICAgIH0sXG4gICAgdG9rZW5pemVyIChzcmMsIHRva2Vucykge1xuICAgICAgY29uc3QgcnVsZSA9IC9eKD86XFwqIFxcWyggfHgpXFxdIChbXlxcbl0qKSg/OlxcbnwkKSkvXG4gICAgICBjb25zdCBtYXRjaCA9IHJ1bGUuZXhlYyhzcmMpXG4gICAgICBpZiAobWF0Y2gpIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICB0eXBlOiAndGFza2xpc3RpdGVtJyxcbiAgICAgICAgICByYXc6IG1hdGNoWzBdLFxuICAgICAgICAgIGNoZWNrZWQ6ICEhbWF0Y2hbMV0udHJpbSgpLFxuICAgICAgICAgIGl0ZW06IHRoaXMubGV4ZXIuaW5saW5lVG9rZW5zKG1hdGNoWzJdLnRyaW0oKSlcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0sXG4gICAgcmVuZGVyZXIgKHRva2VuKSB7XG4gICAgICByZXR1cm4gYFxcbjxsaSBkYXRhLWNoZWNrZWQ9XCIke3Rva2VuLmNoZWNrZWQudG9TdHJpbmcoKX1cIiBkYXRhLXR5cGU9XCJ0YXNrSXRlbVwiPjxwPiR7dGhpcy5wYXJzZXIucGFyc2VJbmxpbmUodG9rZW4uaXRlbSl9PC9wPjwvbGk+YFxuICAgIH1cbiAgfV0sXG5cbiAgd2Fsa1Rva2VucyAodG9rZW4pIHtcbiAgICBpZiAodG9rZW4udHlwZSA9PT0gJ3N0cm9uZycpIHtcbiAgICAgIHRva2VuLnRva2VucyA9IHRoaXMuTGV4ZXIubGV4SW5saW5lKHRva2VuLnRleHQpXG4gICAgfVxuICB9XG59KVxuXG5mdW5jdGlvbiBtYXJrZG93blRvSHRtbCAobWFya2Rvd24pIHtcbiAgcmV0dXJuIERPTVB1cmlmeS5zYW5pdGl6ZShtYXJrZWQucGFyc2UobWFya2Rvd24pLCB7XG4gICAgVVNFX1BST0ZJTEVTOiB7XG4gICAgICBodG1sOiB0cnVlXG4gICAgfVxuICB9KVxufVxuXG5leHBvcnQgZGVmYXVsdCBtYXJrZG93blRvSHRtbFxuIiwiPHRlbXBsYXRlPlxuICA8ZGl2IGNsYXNzPVwiYy1yaWNoLWVkaXRvclwiPlxuICAgIDxkaXYgY2xhc3M9XCJjLXJpY2gtZWRpdG9yX190b3BcIj5cbiAgICAgIDxkaXYgY2xhc3M9XCJjLXJpY2gtZWRpdG9yX190b29sYmFyXCI+XG4gICAgICAgIDxzcGFuIGNsYXNzPVwiYy1yaWNoLWVkaXRvcl9fYnRuLWdyb3VwXCI+XG4gICAgICAgICAgPGJ1dHRvbiB0aXRsZT1cIkJvbGRcIiA6Y2xhc3M9XCJlZGl0b3IuaXNBY3RpdmUoJ2JvbGQnKSA/IGFjdGl2ZUNsYXNzIDogbnVsbFwiIEBtb3VzZWRvd24ucHJldmVudC5zdG9wPVwiZWRpdG9yLmNvbW1hbmRzLnRvZ2dsZUJvbGQoKVwiPjxzcGFuIGNsYXNzPVwiZmkgZmktcnMtYm9sZFwiPjwvc3Bhbj48L2J1dHRvbj5cbiAgICAgICAgICA8YnV0dG9uIHRpdGxlPVwiSXRhbGljXCIgOmNsYXNzPVwiZWRpdG9yLmlzQWN0aXZlKCdpdGFsaWMnKSA/IGFjdGl2ZUNsYXNzIDogbnVsbFwiIEBtb3VzZWRvd24ucHJldmVudC5zdG9wPVwiZWRpdG9yLmNvbW1hbmRzLnRvZ2dsZUl0YWxpYygpXCI+PHNwYW4gY2xhc3M9XCJmaSBmaS1ycy1pdGFsaWNcIj48L3NwYW4+PC9idXR0b24+XG4gICAgICAgICAgPGJ1dHRvbiB0aXRsZT1cIlN0cmlrZVwiIDpjbGFzcz1cImVkaXRvci5pc0FjdGl2ZSgnc3RyaWtlJykgPyBhY3RpdmVDbGFzcyA6IG51bGxcIiBAbW91c2Vkb3duLnByZXZlbnQuc3RvcD1cImVkaXRvci5jb21tYW5kcy50b2dnbGVTdHJpa2UoKVwiPjxzcGFuIGNsYXNzPVwiZmkgZmktcnMtc3RyaWtldGhyb3VnaFwiPjwvc3Bhbj48L2J1dHRvbj5cbiAgICAgICAgICA8YnV0dG9uIHRpdGxlPVwiVW5kZXJsaW5lXCIgOmNsYXNzPVwiZWRpdG9yLmlzQWN0aXZlKCd1bmRlcmxpbmUnKSA/IGFjdGl2ZUNsYXNzIDogbnVsbFwiIEBtb3VzZWRvd24ucHJldmVudC5zdG9wPVwiZWRpdG9yLmNvbW1hbmRzLnRvZ2dsZVVuZGVybGluZSgpXCI+PHNwYW4gY2xhc3M9XCJmaSBmaS1ycy11bmRlcmxpbmVcIj48L3NwYW4+PC9idXR0b24+XG4gICAgICAgICAgPGJ1dHRvbiB0aXRsZT1cIkhpZ2hsaWdodFwiIDpjbGFzcz1cImVkaXRvci5pc0FjdGl2ZSgnaGlnaGxpZ2h0JykgPyBhY3RpdmVDbGFzcyA6IG51bGxcIiBAbW91c2Vkb3duLnByZXZlbnQuc3RvcD1cImVkaXRvci5jb21tYW5kcy50b2dnbGVIaWdobGlnaHQoKVwiPjxzcGFuIGNsYXNzPVwiZmkgZmktcnMtaGlnaGxpZ2h0ZXItbGluZVwiPjwvc3Bhbj48L2J1dHRvbj5cbiAgICAgICAgICA8YnV0dG9uIHRpdGxlPVwiY29kZVwiIDpjbGFzcz1cImVkaXRvci5pc0FjdGl2ZSgnY29kZScpID8gYWN0aXZlQ2xhc3MgOiBudWxsXCIgQG1vdXNlZG93bi5wcmV2ZW50LnN0b3A9XCJlZGl0b3IuY29tbWFuZHMudG9nZ2xlQ29kZSgpXCI+PHNwYW4gY2xhc3M9XCJmaSBmaS1ycy1jb2RlLXNpbXBsZVwiPjwvc3Bhbj48L2J1dHRvbj5cbiAgICAgICAgICA8YnV0dG9uIHRpdGxlPVwibGlua1wiIDpjbGFzcz1cImVkaXRvci5pc0FjdGl2ZSgnbGluaycpID8gYWN0aXZlQ2xhc3MgOiBudWxsXCIgQG1vdXNlZG93bi5wcmV2ZW50LnN0b3A9XCJ0b2dnbGVMaW5rVXJsXCI+PHNwYW4gY2xhc3M9XCJmaSBmaS1ycy1saW5rXCI+PC9zcGFuPjwvYnV0dG9uPlxuICAgICAgICAgIDwhLS0gPGJ1dHRvbiA6Y2xhc3M9XCJlZGl0b3IuaXNBY3RpdmUoJ2lmcmFtZScpID8gYWN0aXZlQ2xhc3MgOiBudWxsXCIgQG1vdXNlZG93bi5wcmV2ZW50LnN0b3A9XCJhZGRJZnJhbWVcIj48c3BhbiBjbGFzcz1cImZpIGZpLXJzLWxpbmtcIj48L3NwYW4+PC9idXR0b24+IC0tPlxuICAgICAgICA8L3NwYW4+XG4gICAgICAgIDxzcGFuIGNsYXNzPVwiYy1yaWNoLWVkaXRvcl9fYnRuLWdyb3VwXCI+XG4gICAgICAgICAgPGJ1dHRvbiB0aXRsZT1cIkNvZGUgYmxvY2tcIiA6Y2xhc3M9XCJlZGl0b3IuaXNBY3RpdmUoJ2NvZGVCbG9jaycpID8gYWN0aXZlQ2xhc3MgOiBudWxsXCIgQG1vdXNlZG93bi5wcmV2ZW50LnN0b3A9XCJlZGl0b3IuY29tbWFuZHMudG9nZ2xlQ29kZUJsb2NrKClcIj48c3BhbiBjbGFzcz1cImZpIGZpLXJzLXJlY3RhbmdsZS1jb2RlXCI+PC9zcGFuPjwvYnV0dG9uPlxuICAgICAgICAgIDxidXR0b24gdGl0bGU9XCJQYXJhZ3JhcGhcIiA6Y2xhc3M9XCJlZGl0b3IuaXNBY3RpdmUoJ3BhcmFncmFwaCcpID8gYWN0aXZlQ2xhc3MgOiBudWxsXCIgQG1vdXNlZG93bi5wcmV2ZW50LnN0b3A9XCJlZGl0b3IuY29tbWFuZHMuc2V0UGFyYWdyYXBoKClcIj48c3BhbiBjbGFzcz1cImZpIGZpLXJzLXBhcmFncmFwaFwiPjwvc3Bhbj48L2J1dHRvbj5cbiAgICAgICAgICA8YnV0dG9uIHRpdGxlPVwiSDFcIiA6Y2xhc3M9XCJlZGl0b3IuaXNBY3RpdmUoJ2hlYWRpbmcnLCB7bGV2ZWwgOiAxfSkgPyBhY3RpdmVDbGFzcyA6IG51bGxcIiBAbW91c2Vkb3duLnByZXZlbnQuc3RvcD1cImVkaXRvci5jb21tYW5kcy50b2dnbGVIZWFkaW5nKHtsZXZlbCA6IDF9KVwiPjxzcGFuIGNsYXNzPVwiZmkgZmktcnMtaDFcIj48L3NwYW4+PC9idXR0b24+XG4gICAgICAgICAgPGJ1dHRvbiB0aXRsZT1cIkgyXCIgOmNsYXNzPVwiZWRpdG9yLmlzQWN0aXZlKCdoZWFkaW5nJywge2xldmVsIDogMn0pID8gYWN0aXZlQ2xhc3MgOiBudWxsXCIgQG1vdXNlZG93bi5wcmV2ZW50LnN0b3A9XCJlZGl0b3IuY29tbWFuZHMudG9nZ2xlSGVhZGluZyh7bGV2ZWwgOiAyfSlcIj48c3BhbiBjbGFzcz1cImZpIGZpLXJzLWgyXCI+PC9zcGFuPjwvYnV0dG9uPlxuICAgICAgICAgIDxidXR0b24gdGl0bGU9XCJIM1wiIDpjbGFzcz1cImVkaXRvci5pc0FjdGl2ZSgnaGVhZGluZycsIHtsZXZlbCA6IDN9KSA/IGFjdGl2ZUNsYXNzIDogbnVsbFwiIEBtb3VzZWRvd24ucHJldmVudC5zdG9wPVwiZWRpdG9yLmNvbW1hbmRzLnRvZ2dsZUhlYWRpbmcoe2xldmVsIDogM30pXCI+PHNwYW4gY2xhc3M9XCJmaSBmaS1ycy1oM1wiPjwvc3Bhbj48L2J1dHRvbj5cbiAgICAgICAgICA8YnV0dG9uIHRpdGxlPVwiSDRcIiA6Y2xhc3M9XCJlZGl0b3IuaXNBY3RpdmUoJ2hlYWRpbmcnLCB7bGV2ZWwgOiA0fSkgPyBhY3RpdmVDbGFzcyA6IG51bGxcIiBAbW91c2Vkb3duLnByZXZlbnQuc3RvcD1cImVkaXRvci5jb21tYW5kcy50b2dnbGVIZWFkaW5nKHtsZXZlbCA6IDR9KVwiPjxzcGFuIGNsYXNzPVwiZmkgZmktcnMtaDRcIj48L3NwYW4+PC9idXR0b24+XG4gICAgICAgICAgPGJ1dHRvbiB0aXRsZT1cIkJsb2NrcXVvdGVcIiA6Y2xhc3M9XCJlZGl0b3IuaXNBY3RpdmUoJ2Jsb2NrcXVvdGUnKSA/IGFjdGl2ZUNsYXNzIDogbnVsbFwiIEBtb3VzZWRvd24ucHJldmVudC5zdG9wPVwiZWRpdG9yLmNvbW1hbmRzLnRvZ2dsZUJsb2NrcXVvdGUoKVwiPjxzcGFuIGNsYXNzPVwiZmkgZmktcnMtYmxvY2stcXVvdGVcIj48L3NwYW4+PC9idXR0b24+XG4gICAgICAgIDwvc3Bhbj5cbiAgICAgICAgPHNwYW4gY2xhc3M9XCJjLXJpY2gtZWRpdG9yX19idG4tZ3JvdXBcIj5cbiAgICAgICAgICA8YnV0dG9uIHRpdGxlPVwiSG9yaXpvbnRhbCBydWxlXCIgQGNsaWNrPVwiZWRpdG9yLmNvbW1hbmRzLnNldEhvcml6b250YWxSdWxlKClcIj48c3BhbiBjbGFzcz1cImZpIGZpLXJzLWhvcml6b250YWwtcnVsZVwiPjwvc3Bhbj48L2J1dHRvbj5cbiAgICAgICAgICA8YnV0dG9uIHRpdGxlPVwiQnVsbGV0IGxpc3RcIiA6Y2xhc3M9XCJlZGl0b3IuaXNBY3RpdmUoJ2J1bGxldExpc3QnKSA/IGFjdGl2ZUNsYXNzIDogbnVsbFwiIEBtb3VzZWRvd24ucHJldmVudC5zdG9wPVwiZWRpdG9yLmNvbW1hbmRzLnRvZ2dsZUJ1bGxldExpc3QoKVwiPjxzcGFuIGNsYXNzPVwiZmkgZmktcnMtbGlzdFwiPjwvc3Bhbj48L2J1dHRvbj5cbiAgICAgICAgICA8YnV0dG9uIHRpdGxlPVwiT3JkZXJlZCBsaXN0XCIgOmNsYXNzPVwiZWRpdG9yLmlzQWN0aXZlKCdvcmRlcmVkTGlzdCcpID8gYWN0aXZlQ2xhc3MgOiBudWxsXCIgQG1vdXNlZG93bi5wcmV2ZW50LnN0b3A9XCJlZGl0b3IuY29tbWFuZHMudG9nZ2xlT3JkZXJlZExpc3QoKVwiPjxzcGFuIGNsYXNzPVwiZmkgZmktcnMtYmFycy1zb3J0XCI+PC9zcGFuPjwvYnV0dG9uPlxuICAgICAgICAgIDxidXR0b24gdGl0bGU9XCJUYXNrIGxpc3RcIiA6Y2xhc3M9XCJlZGl0b3IuaXNBY3RpdmUoJ3Rhc2tMaXN0JykgPyBhY3RpdmVDbGFzcyA6IG51bGxcIiBAbW91c2Vkb3duLnByZXZlbnQuc3RvcD1cImVkaXRvci5jb21tYW5kcy50b2dnbGVUYXNrTGlzdCgpXCI+PHNwYW4gY2xhc3M9XCJmaSBmaS1ycy1saXN0LWNoZWNrXCI+PC9zcGFuPjwvYnV0dG9uPlxuICAgICAgICA8L3NwYW4+XG4gICAgICAgIDxzcGFuIGNsYXNzPVwiYy1yaWNoLWVkaXRvcl9fYnRuLWdyb3VwXCI+XG4gICAgICAgICAgPGJ1dHRvbiB0aXRsZT1cIlVuZG9cIiBAY2xpY2s9XCJlZGl0b3IuY29tbWFuZHMudW5kbygpXCI+PHNwYW4gY2xhc3M9XCJmaSBmaS1ycy11bmRvXCI+PC9zcGFuPjwvYnV0dG9uPlxuICAgICAgICAgIDxidXR0b24gdGl0bGU9XCJSZWRvXCIgQGNsaWNrPVwiZWRpdG9yLmNvbW1hbmRzLnJlZG8oKVwiPjxzcGFuIGNsYXNzPVwiZmkgZmktcnMtcmVkb1wiPjwvc3Bhbj48L2J1dHRvbj5cbiAgICAgICAgICA8IS0tIDxidXR0b24gdGl0bGU9XCJIVE1MIHZpZXdcIiA6Y2xhc3M9XCJodG1sVmlldyA/IGFjdGl2ZUNsYXNzIDogbnVsbFwiIEBjbGljaz1cIihodG1sVmlldyA9ICFodG1sVmlldykgJiYgKG1kVmlldyA9IGZhbHNlKVwiPmh0bWw8L2J1dHRvbj4gLS0+XG4gICAgICAgICAgPGJ1dHRvbiB0aXRsZT1cIk1hcmtkb3duIHZpZXdcIiA6Y2xhc3M9XCJtZFZpZXcgPyBhY3RpdmVDbGFzcyA6IG51bGxcIiBAY2xpY2s9XCIobWRWaWV3ID0gIW1kVmlldykgJiYgKGh0bWxWaWV3ID0gZmFsc2UpXCI+PHNwYW4gY2xhc3M9XCJmaSBmaS1ycy1maWxlLWNvZGVcIj48L3NwYW4+PC9idXR0b24+XG4gICAgICAgICAgPHRlbXBsYXRlIHYtaWY9XCIhYXV0b3NhdmVcIj5cbiAgICAgICAgICAgIDxidXR0b24gOnRpdGxlPVwiIXByaXN0aW5lID8gJ1NhdmVkJyA6ICdVbnNhdmVkJ1wiIDpjbGFzcz1cIiFwcmlzdGluZSA/IGFjdGl2ZUNsYXNzIDogbnVsbFwiIEBjbGljaz1cInNhdmVcIj48c3BhbiBjbGFzcz1cImZpIGZpLXJzLWRpc2tcIj48L3NwYW4+PC9idXR0b24+XG4gICAgICAgICAgPC90ZW1wbGF0ZT5cbiAgICAgICAgICA8ZGl2IGNsYXNzPVwiYy1yaWNoLWVkaXRvcl9fYXV0b3NhdmUgYy1yaWNoLWVkaXRvcl9fZmxhZ1wiIDpjbGFzcz1cImF1dG9zYXZlID8gYWN0aXZlQ2xhc3MgOiBudWxsXCIgQGNsaWNrPVwidG9nZ2xlQXV0b3NhdmVcIj5cbiAgICAgICAgICAgIDxzcGFuIHYtaWY9XCJhdXRvc2F2ZVwiY2xhc3M9XCJmaSBmaS1ycy10b2dnbGUtb25cIj48L3NwYW4+XG4gICAgICAgICAgICA8c3BhbiB2LWVsc2UgY2xhc3M9XCJmaSBmaS1ycy10b2dnbGUtb2ZmXCI+PC9zcGFuPlxuICAgICAgICAgICAgPHNwYW4+QXV0b3NhdmU8L3NwYW4+XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgPCEtLVxuICAgICAgICAgIDxkaXYgY2xhc3M9XCJjLXJpY2gtZWRpdG9yX19lZGl0YWJsZSBjLXJpY2gtZWRpdG9yX19mbGFnXCIgOmNsYXNzPVwiZWRpdG9yLmlzRWRpdGFibGUgPyBhY3RpdmVDbGFzcyA6IG51bGxcIiBAY2xpY2s9XCJ0b2dnbGVFZGl0YWJsZVwiPlxuICAgICAgICAgICAgPHNwYW4gdi1pZj1cImVkaXRvci5pc0VkaXRhYmxlXCJjbGFzcz1cImZpIGZpLXJzLXRvZ2dsZS1vblwiPjwvc3Bhbj5cbiAgICAgICAgICAgIDxzcGFuIHYtZWxzZSBjbGFzcz1cImZpIGZpLXJzLXRvZ2dsZS1vZmZcIj48L3NwYW4+XG4gICAgICAgICAgICA8c3Bhbj5FZGl0YWJsZTwvc3Bhbj5cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAtLT5cbiAgICAgICAgPC9zcGFuPlxuICAgICAgICA8aW5wdXRcbiAgICAgICAgICB0eXBlPVwidGV4dFwiXG4gICAgICAgICAgdi1pZj1cImxpbmtVcmxWaXNpYmxlXCJcbiAgICAgICAgICB2LW1vZGVsPVwibGlua1VybFwiXG4gICAgICAgICAgcmVmPVwibGlua0FjdGl2YXRvclwiXG4gICAgICAgICAgQGtleWRvd24uZW50ZXIucHJldmVudD1cInNldExpbmtVcmwoZmFsc2UpXCJcbiAgICAgICAgICBAa2V5ZG93bi5lc2M9XCJzZXRMaW5rVXJsKHRydWUpXCJcbiAgICAgICAgICBAYmx1cj1cInNldExpbmtVcmwoZmFsc2UpXCJcbiAgICAgICAgICBwbGFjZWhvbGRlcj1cImh0dHA6Ly9cIlxuICAgICAgICAvPlxuICAgICAgPC9kaXY+XG5cbiAgICAgIDxkaXYgdi1pZj1cImZyb21NZW1vcnlcIiBjbGFzcz1cImMtcmljaC1lZGl0b3JfX21lbW9yeVwiPlNhdmVkIG9uIGxvY2FsIG1lbW9yeSA8c3BhbiBAY2xpY2s9XCIkZW1pdCgnY2xlYXJNZW1vcnknKVwiPmNsaWNrIGhlcmU8L3NwYW4+IHRvIHJlc3RvcmUgb3JpZ2luYWwgY29udGVudC48L2Rpdj5cbiAgICA8L2Rpdj5cblxuICAgIDxkcmFnZ2FibGUgdGFnPVwibWVudVwiIGNsYXNzPVwiYy1yaWNoLWVkaXRvcl9fc2VjdGlvbnMtdGFicyBjLXRhYnMgYy1kcmFnYWJsZVwiIGRyYWdnYWJsZT1cIi5jLWRyYWdnYWJsZV9faXRlbVwiIDpsaXN0PVwic2VjdGlvbnNcIiBAZW5kPVwib25TZWN0aW9uc0NoYW5nZVwiPlxuICAgICAgPGxpIHYtZm9yPVwiKHNlY3Rpb24sIHNlY3Rpb25JbmRleCkgaW4gc2VjdGlvbnNcIiBjbGFzcz1cImMtZHJhZ2dhYmxlX19pdGVtXCI+XG4gICAgICAgIDxzcGFuIGNsYXNzPVwiYy1hY3Rpb24gdi1zZW1pXCIgPlxuICAgICAgICAgIDxzcGFuIHYtaHRtbD1cInNlY3Rpb24udGl0bGUgfHwgJ1VudGl0bGVkJ1wiIEBjbGljaz1cImxvYWRTZWN0aW9uKHNlY3Rpb25JbmRleClcIj48L3NwYW4+XG4gICAgICAgICAgPGJ1dHRvbiBjbGFzcz1cImMtY2hpcFwiIEBjbGljay5wcmV2ZW50PVwicmVtb3ZlU2VjdGlvbihzZWN0aW9uSW5kZXgpXCI+XG4gICAgICAgICAgICA8c3BhbiBjbGFzcz1cImZpIGZpLXJyLWNyb3NzLXNtYWxsXCI+PC9zcGFuPlxuICAgICAgICAgIDwvYnV0dG9uPlxuICAgICAgICAgIDwvc3Bhbj5cbiAgICAgICAgPC9zcGFuPlxuICAgICAgPC9saT5cbiAgICAgIDxsaSBzbG90PVwiZm9vdGVyXCI+XG4gICAgICAgIDxidXR0b24gY2xhc3M9XCJjLWFjdGlvbiB2LXNlbWlcIiBAY2xpY2s9XCJhZGRTZWN0aW9uXCI+KzwvYnV0dG9uPlxuICAgICAgPC9saT5cbiAgICA8L2RyYWdnYWJsZT5cblxuICAgIDxkaXYgdi1pZj1cIiFodG1sVmlldyAmJiAhbWRWaWV3XCIgY2xhc3M9XCJjLXJpY2gtZWRpdG9yX19kb2N1bWVudFwiIHYtYmluZD1cIiRhdHRyc1wiPlxuICAgICAgPGVkaXRvci1jb250ZW50IDplZGl0b3I9XCJlZGl0b3JcIiBjbGFzcz1cImMtcmljaC1lZGl0b3JfX3BhZ2VcIiAvPlxuICAgIDwvZGl2PlxuXG4gICAgPHRleHRhcmVhXG4gICAgICBjbGFzcz1cImMtcmljaC1lZGl0b3JfX3RleHRhcmVhXCJcbiAgICAgIHYtZWxzZS1pZj1cImh0bWxWaWV3XCJcbiAgICAgIHYtYmluZD1cIiRhdHRyc1wiXG4gICAgICBAaW5wdXQ9XCIkZW1pdCgnaW5wdXQnLCAkZXZlbnQpXCJcbiAgICAgIDp2YWx1ZT1cInNlY3Rpb25zW2N1cnJlbnRTZWN0aW9uSW5kZXhdLmh0bWxcIlxuICAgID48L3RleHRhcmVhPlxuXG4gICAgPHRleHRhcmVhXG4gICAgICBjbGFzcz1cImMtcmljaC1lZGl0b3JfX3RleHRhcmVhXCJcbiAgICAgIHYtZWxzZS1pZj1cIm1kVmlld1wiXG4gICAgICB2LWJpbmQ9XCIkYXR0cnNcIlxuICAgICAgQGlucHV0PVwiJGVtaXQoJ2lucHV0JywgJGV2ZW50KVwiXG4gICAgICA6dmFsdWU9XCJtZFwiXG4gICAgPjwvdGV4dGFyZWE+XG5cbiAgPC9kaXY+XG48L3RlbXBsYXRlPlxuXG48c2NyaXB0PlxuaW1wb3J0IFZ1ZSBmcm9tICd2dWUnXG5pbXBvcnQgeyBOb2RlLCBleHRlbnNpb25zIH0gZnJvbSAnQHRpcHRhcC9jb3JlJ1xuaW1wb3J0IHsgRWRpdG9yLCBFZGl0b3JDb250ZW50LCBWdWVOb2RlVmlld1JlbmRlcmVyIH0gZnJvbSAnQHRpcHRhcC92dWUtMidcbmltcG9ydCBTdGFydGVyS2l0IGZyb20gJ0B0aXB0YXAvc3RhcnRlci1raXQnXG5pbXBvcnQgVHlwb2dyYXBoeSBmcm9tICdAdGlwdGFwL2V4dGVuc2lvbi10eXBvZ3JhcGh5J1xuaW1wb3J0IExpbmsgZnJvbSAnQHRpcHRhcC9leHRlbnNpb24tbGluaydcbmltcG9ydCBVbmRlcmxpbmUgZnJvbSAnQHRpcHRhcC9leHRlbnNpb24tdW5kZXJsaW5lJ1xuaW1wb3J0IFRhc2tMaXN0IGZyb20gJ0B0aXB0YXAvZXh0ZW5zaW9uLXRhc2stbGlzdCdcbmltcG9ydCBUYXNrSXRlbSBmcm9tICdAdGlwdGFwL2V4dGVuc2lvbi10YXNrLWl0ZW0nXG5pbXBvcnQgSW1hZ2UgZnJvbSAnQHRpcHRhcC9leHRlbnNpb24taW1hZ2UnXG5pbXBvcnQgSGlnaGxpZ2h0IGZyb20gJ0B0aXB0YXAvZXh0ZW5zaW9uLWhpZ2hsaWdodCdcbmltcG9ydCBDb2RlQmxvY2tMb3dsaWdodCBmcm9tICdAdGlwdGFwL2V4dGVuc2lvbi1jb2RlLWJsb2NrLWxvd2xpZ2h0J1xuaW1wb3J0IEluZGVudCBmcm9tICcuL2xpYi90aXB0YXBJbmRlbnQnXG5pbXBvcnQgSGlnaGxpZ2h0ZXIgZnJvbSAnLi9IaWdobGlnaHRlcidcbmltcG9ydCB7IGxvd2xpZ2h0IH0gZnJvbSAnbG93bGlnaHQnXG5pbXBvcnQgd2ViY29tcG9uZW50IGZyb20gJy4vbGliL3dlYmNvbXBvbmVudC5oaWdobGlnaHQnXG5pbXBvcnQgaHRtbFRvTWFya2Rvd24gZnJvbSAnLi9saWIvaHRtbFRvTWFya2Rvd24nXG5pbXBvcnQgbWFya2Rvd25Ub0h0bWwgZnJvbSAnLi9saWIvbWFya2Rvd25Ub0h0bWwnXG5pbXBvcnQgZHJhZ2dhYmxlIGZyb20gJ3Z1ZWRyYWdnYWJsZSdcbi8vIGltcG9ydCBTZWN0aW9uIGZyb20gJy4vdGlwdGFwU2VjdGlvbidcbi8vIGltcG9ydCBLZXltYXAgZnJvbSAnLi90aXB0YXBLZXltYXAnXG4vLyBpbXBvcnQgSWZyYW1lIGZyb20gJy4vdGlwdGFwSWZyYW1lJ1xuXG5pbXBvcnQgJ2hpZ2hsaWdodC5qcy9zdHlsZXMvYXRvbS1vbmUtZGFyay1yZWFzb25hYmxlLmNzcydcblxuLy8gY29uc3QgY29yZUV4dGVuc2lvbnMgPSBPYmplY3Qua2V5cyhleHRlbnNpb25zKS5maWx0ZXIoa2V5ID0+IGtleSAhPT0gJ0tleW1hcCcgKS5tYXAoa2V5ID0+IGV4dGVuc2lvbnNba2V5XSlcbi8vIGNvcmVFeHRlbnNpb25zLnB1c2goS2V5bWFwKVxuXG4vKlxuY29uc3QgRG9jdW1lbnQgPSBOb2RlLmNyZWF0ZSh7XG4gIG5hbWU6ICdkb2MnLFxuICB0b3BOb2RlOiB0cnVlLFxuICBjb250ZW50OiAnc2VjdGlvbisnXG59KVxuKi9cblxubG93bGlnaHQucmVnaXN0ZXJMYW5ndWFnZSgnd2ViY29tcG9uZW50Jywgd2ViY29tcG9uZW50KVxubG93bGlnaHQucmVnaXN0ZXJMYW5ndWFnZSgnaHRtbCcsIHdlYmNvbXBvbmVudClcbmxvd2xpZ2h0LnJlZ2lzdGVyQWxpYXMoJ3dlYmNvbXBvbmVudCcsICd2dWUnKVxuLy8gbG93bGlnaHQucmVnaXN0ZXJBbGlhcygneG1sJywgJ2h0bWwnKVxuXG5jb25zdCBzZWN0aW9uSGFzaCA9ICdcXG48IS0tLSBzZWN0aW9uIC0tLT5cXG4nXG5cbmV4cG9ydCBkZWZhdWx0IFZ1ZS5jb21wb25lbnQoJ1JpY2hFZGl0b3InLCB7XG4gIGNvbXBvbmVudHM6IHtcbiAgICBFZGl0b3JDb250ZW50LFxuICAgIGRyYWdnYWJsZVxuICB9LFxuICBwcm9wczoge1xuICAgIHZhbHVlOiB7IHR5cGU6IFN0cmluZywgZGVmYXVsdDogbnVsbCB9LFxuICAgIGZyb21NZW1vcnk6IHsgdHlwZTogQm9vbGVhbiwgZGVmYXVsdDogZmFsc2UgfVxuICB9LFxuICBkYXRhOiAoKSA9PiAoe1xuICAgIHByaXN0aW5lOiB0cnVlLFxuICAgIGN1cnJlbnRTZWN0aW9uSW5kZXg6IDAsXG4gICAgYXV0b3NhdmU6IGxvY2FsU3RvcmFnZS5nZXRJdGVtKCdhdXRvc2F2ZScpID09PSAndHJ1ZScsXG4gICAgZWRpdG9yOiBudWxsLFxuICAgIGh0bWxWaWV3OiBmYWxzZSxcbiAgICBtZFZpZXc6IGZhbHNlLFxuICAgIGxpbmtVcmw6IG51bGwsXG4gICAgbGlua1VybFZpc2libGU6IGZhbHNlLFxuICAgIGFjdGl2ZUNsYXNzOiAnYWN0aXZlJyxcbiAgICBzZWN0aW9uczogW10sXG4gICAgbWQ6IHVuZGVmaW5lZFxuICB9KSxcbiAgd2F0Y2g6IHtcbiAgICB2YWx1ZToge1xuICAgICAgaGFuZGxlciAodmFsdWUsIG9sZFZhbHVlKSB7XG4gICAgICAgIHRoaXMucmVmcmVzaCh2YWx1ZSlcbiAgICAgICAgdGhpcy5wcmlzdGluZSA9IHRydWVcbiAgICAgIH1cbiAgICB9XG4gIH0sXG4gIGNyZWF0ZWQgKCkge1xuICAgIHdpbmRvdy5SaWNoRWRpdG9yID0gdGhpc1xuICAgIHRoaXMuZWRpdG9yID0gbmV3IEVkaXRvcih7XG4gICAgICAvLyBjb250ZW50OiAnJyxcbiAgICAgIGVuYWJsZUNvcmVFeHRlbnNpb25zOiB0cnVlLFxuICAgICAgZXh0ZW5zaW9uczogW1xuICAgICAgICAvLyAuLi5jb3JlRXh0ZW5zaW9ucyxcbiAgICAgICAgU3RhcnRlcktpdC5jb25maWd1cmUoe1xuICAgICAgICAgIC8vIGRvY3VtZW50OiBmYWxzZSxcbiAgICAgICAgICBoZWFkaW5nOiB7XG4gICAgICAgICAgICBsZXZlbHM6IFsxLCAyLCAzLCA0XVxuICAgICAgICAgIH0sXG4gICAgICAgICAgbGluazogeyBvcGVuT25DbGljazogZmFsc2UgfSxcbiAgICAgICAgICBjb2RlQmxvY2s6IGZhbHNlXG4gICAgICAgIH0pLFxuICAgICAgICBUeXBvZ3JhcGh5LFxuICAgICAgICBMaW5rLmNvbmZpZ3VyZSh7XG4gICAgICAgICAgb3Blbk9uQ2xpY2s6IGZhbHNlXG4gICAgICAgIH0pLFxuICAgICAgICBVbmRlcmxpbmUsXG4gICAgICAgIFRhc2tMaXN0LmNvbmZpZ3VyZSh7XG4gICAgICAgICAgSFRNTEF0dHJpYnV0ZXM6IHtcbiAgICAgICAgICAgIGNsYXNzOiAnYy1yaWNoLWVkaXRvcl9fdGFzay1saXN0J1xuICAgICAgICAgIH1cbiAgICAgICAgfSksXG4gICAgICAgIFRhc2tJdGVtLmNvbmZpZ3VyZSh7XG4gICAgICAgICAgSFRNTEF0dHJpYnV0ZXM6IHtcbiAgICAgICAgICAgIGNsYXNzOiAnYy1yaWNoLWVkaXRvcl9fdGFzay1pdGVtJ1xuICAgICAgICAgIH1cbiAgICAgICAgfSksXG4gICAgICAgIC8vIERvY3VtZW50LFxuICAgICAgICBJbmRlbnQsXG4gICAgICAgIEhpZ2hsaWdodCxcbiAgICAgICAgLy8gSWZyYW1lLFxuICAgICAgICAvLyBTZWN0aW9uLFxuICAgICAgICBJbWFnZS5jb25maWd1cmUoe1xuICAgICAgICAgIGFsbG93QmFzZTY0OiB0cnVlLFxuICAgICAgICAgIGlubGluZTogdHJ1ZVxuICAgICAgICB9KSxcbiAgICAgICAgQ29kZUJsb2NrTG93bGlnaHQuZXh0ZW5kKHtcbiAgICAgICAgICBhZGROb2RlVmlldyAoKSB7XG4gICAgICAgICAgICByZXR1cm4gVnVlTm9kZVZpZXdSZW5kZXJlcihIaWdobGlnaHRlcilcbiAgICAgICAgICB9XG4gICAgICAgIH0pLmNvbmZpZ3VyZSh7XG4gICAgICAgICAgZGVmYXVsdExhbmd1YWdlOiAnYXV0bycsXG4gICAgICAgICAgbG93bGlnaHRcbiAgICAgICAgfSlcbiAgICAgIF0sXG4gICAgICBvblVwZGF0ZTogdGhpcy5vblVwZGF0ZVxuICAgIH0pXG4gICAgdGhpcy5yZWZyZXNoKHRoaXMudmFsdWUpXG4gIH0sXG4gIG1vdW50ZWQgKCkge1xuICAgIHRoaXMuJGVsLmFkZEV2ZW50TGlzdGVuZXIoJ2tleWRvd24nLCB0aGlzLm9uS2V5ZG93bilcbiAgfSxcbiAgYmVmb3JlRGVzdHJveSAoKSB7XG4gICAgdGhpcy4kZWwucmVtb3ZlRXZlbnRMaXN0ZW5lcigna2V5ZG93bicsIHRoaXMub25LZXlkb3duKVxuICAgIHRoaXMuZWRpdG9yLmRlc3Ryb3koKVxuICB9LFxuICBtZXRob2RzOiB7XG4gICAgbG9hZFNlY3Rpb24oc2VjdGlvbkluZGV4KSB7XG4gICAgICB0aGlzLmN1cnJlbnRTZWN0aW9uSW5kZXggPSBzZWN0aW9uSW5kZXhcbiAgICAgIHRoaXMuZWRpdG9yLmNvbW1hbmRzLnNldENvbnRlbnQodGhpcy5zZWN0aW9uc1t0aGlzLmN1cnJlbnRTZWN0aW9uSW5kZXhdLmh0bWwpXG4gICAgfSxcbiAgICBhZGRTZWN0aW9uKCkge1xuICAgICAgdGhpcy5zZWN0aW9ucy5wdXNoKHtcbiAgICAgICAgaHRtbDogJzxoMT5OZXcgc2VjdGlvbjwvaDE+JyxcbiAgICAgICAgdGl0bGU6ICdOZXcgc2VjdGlvbidcbiAgICAgIH0pXG4gICAgICB0aGlzLmxvYWRTZWN0aW9uKHRoaXMuc2VjdGlvbnMubGVuZ3RoIC0gMSlcbiAgICAgIHRoaXMub25VcGRhdGUoKVxuICAgIH0sXG4gICAgcmVtb3ZlU2VjdGlvbihzZWN0aW9uSW5kZXgpIHtcbiAgICAgIHRoaXMuc2VjdGlvbnMuc3BsaWNlKHNlY3Rpb25JbmRleCwgMSlcbiAgICAgIHRoaXMub25TZWN0aW9uc0NoYW5nZSgpXG4gICAgfSxcbiAgICAvKlxuICAgIGFkZElmcmFtZSgpIHtcbiAgICAgIGNvbnN0IHVybCA9IHdpbmRvdy5wcm9tcHQoJ1VSTCcpXG4gICAgICBpZiAodXJsKSB7XG4gICAgICAgIHRoaXMuZWRpdG9yLmNoYWluKCkuZm9jdXMoKS5zZXRJZnJhbWUoeyBzcmM6IHVybCB9KS5ydW4oKVxuICAgICAgfVxuICAgIH0sXG4gICAgKi9cbiAgICB0b2dnbGVBdXRvc2F2ZSAoKSB7XG4gICAgICB0aGlzLmF1dG9zYXZlID0gIXRoaXMuYXV0b3NhdmVcbiAgICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKCdhdXRvc2F2ZScsIHRoaXMuYXV0b3NhdmUpXG4gICAgfSxcbiAgICBvbktleWRvd24gKGV2ZW50KSB7XG4gICAgICBpZiAoZXZlbnQua2V5ID09PSAncycgJiYgZXZlbnQubWV0YUtleSkge1xuICAgICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpXG4gICAgICAgIHRoaXMuc2F2ZSgpXG4gICAgICB9XG4gICAgfSxcbiAgICBvblVwZGF0ZSAoKSB7XG4gICAgICBjb25zdCBjdXJyZW50RWRpdG9ySFRNTCA9IHRoaXMuZWRpdG9yLmdldEhUTUwoKVxuICAgICAgY29uc3QgY3VycmVudFNlY3Rpb24gPSB0aGlzLnNlY3Rpb25zW3RoaXMuY3VycmVudFNlY3Rpb25JbmRleF1cbiAgICAgIGN1cnJlbnRTZWN0aW9uLmh0bWwgPSBjdXJyZW50RWRpdG9ySFRNTFxuICAgICAgdGhpcy5vblNlY3Rpb25zQ2hhbmdlKGZhbHNlKVxuICAgICAgLy8gaWYgKGN1cnJlbnRTZWN0aW9uLmh0bWwgIT09IGN1cnJlbnRFZGl0b3JIVE1MKSB7fVxuICAgIH0sXG4gICAgb25TZWN0aW9uc0NoYW5nZShyZWZyZXNoID0gdHJ1ZSkge1xuICAgICAgY29uc3QgbWQgPSB0aGlzLnNlY3Rpb25zLm1hcChzZWN0aW9uID0+IGh0bWxUb01hcmtkb3duKHNlY3Rpb24uaHRtbCkpLmpvaW4oc2VjdGlvbkhhc2gpXG4gICAgICB0aGlzLnByaXN0aW5lID0gZmFsc2VcblxuICAgICAgaWYgKHJlZnJlc2gpIHtcbiAgICAgICAgdGhpcy5yZWZyZXNoKG1kKVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdGhpcy5wYXJzZVNlY3Rpb25zKG1kKVxuICAgICAgfVxuICAgICAgaWYgKHRoaXMuYXV0b3NhdmUpIHRoaXMuc2F2ZSgpXG4gICAgfSxcbiAgICBwYXJzZVNlY3Rpb25zKGZpbGVDb250ZW50cykge1xuICAgICAgdGhpcy5zZWN0aW9ucyA9IGZpbGVDb250ZW50cy5zcGxpdChzZWN0aW9uSGFzaCkubWFwKHNlY3Rpb25Db250ZW50ID0+ICh7XG4gICAgICAgIGh0bWw6IG1hcmtkb3duVG9IdG1sKHNlY3Rpb25Db250ZW50KSxcbiAgICAgICAgdGl0bGU6IG1hcmtkb3duVG9IdG1sKC9eIyAoLiopL2dtLmV4ZWMoc2VjdGlvbkNvbnRlbnQpPy5bMV0gfHwgJycpXG4gICAgICB9KSlcbiAgICAgIGlmICh0aGlzLmN1cnJlbnRTZWN0aW9uSW5kZXggPj0gdGhpcy5zZWN0aW9ucy5sZW5ndGgpIHRoaXMuY3VycmVudFNlY3Rpb25JbmRleCA9IDBcbiAgICAgIHRoaXMubWQgPSBmaWxlQ29udGVudHNcbiAgICB9LFxuICAgIHJlZnJlc2ggKGZpbGVDb250ZW50cykge1xuICAgICAgaWYgKHRoaXMubWQgIT09IGZpbGVDb250ZW50cykge1xuICAgICAgICB0aGlzLnBhcnNlU2VjdGlvbnMoZmlsZUNvbnRlbnRzKVxuXG4gICAgICAgIGlmICh0aGlzLmVkaXRvci5nZXRIVE1MKCkgIT09IHRoaXMuc2VjdGlvbnNbdGhpcy5jdXJyZW50U2VjdGlvbkluZGV4XS5odG1sKSB7XG4gICAgICAgICAgLypcbiAgICAgICAgICBjb25zdCBwYXJzZXIgPSBuZXcgRE9NUGFyc2VyKClcbiAgICAgICAgICBjb25zdCBzZXJpYWxpemVyID0gbmV3IFhNTFNlcmlhbGl6ZXIoKVxuICAgICAgICAgIGNvbnN0IGRvbU9iamVjdCA9IHBhcnNlci5wYXJzZUZyb21TdHJpbmcoIHRoaXMuaHRtbCB8fCAnJywgJ3RleHQvaHRtbCcpXG4gICAgICAgICAgY29uc3Qgc2VjdGlvbnMgPSBkb21PYmplY3QuYm9keS5jaGlsZE5vZGVzXG4gICAgICAgICAgc2VjdGlvbnMuZm9yRWFjaChjaGlsZCA9PiB7XG4gICAgICAgICAgICBpZiAoIWNoaWxkLnRleHRDb250ZW50LnRyaW0oKSkgcmV0dXJuXG4gICAgICAgICAgICBjb25zdCBzZWN0aW9uID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc2VjdGlvbicpXG4gICAgICAgICAgICBzZWN0aW9uLmFwcGVuZChjaGlsZC5jbG9uZU5vZGUodHJ1ZSkpXG4gICAgICAgICAgICBjaGlsZC5yZXBsYWNlV2l0aChzZWN0aW9uKVxuICAgICAgICAgIH0pXG4gICAgICAgICAgY29uc3Qgc2VjdGlvbmVkID0gc2VyaWFsaXplci5zZXJpYWxpemVUb1N0cmluZyhkb21PYmplY3QpXG4gICAgICAgICAgdGhpcy5lZGl0b3IuY29tbWFuZHMuc2V0Q29udGVudChzZWN0aW9uZWQpXG4gICAgICAgICAgKi9cbiAgICAgICAgICB0aGlzLmxvYWRTZWN0aW9uKHRoaXMuY3VycmVudFNlY3Rpb25JbmRleClcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0sXG4gICAgc2F2ZSAoKSB7XG4gICAgICB0aGlzLnByaXN0aW5lID0gdHJ1ZVxuICAgICAgdGhpcy4kZW1pdCgnaW5wdXQnLCB0aGlzLm1kKVxuICAgIH0sXG4gICAgdG9nZ2xlTGlua1VybCAoKSB7XG4gICAgICB0aGlzLmxpbmtVcmwgPSBudWxsXG4gICAgICB0aGlzLmxpbmtVcmxWaXNpYmxlID0gIXRoaXMubGlua1VybFZpc2libGVcblxuICAgICAgaWYgKHRoaXMubGlua1VybFZpc2libGUpIHtcbiAgICAgICAgdGhpcy4kbmV4dFRpY2soKCkgPT4ge1xuICAgICAgICAgIGlmICh0aGlzLiRyZWZzLmxpbmtBY3RpdmF0b3IpIHtcbiAgICAgICAgICAgIHRoaXMuJHJlZnMubGlua0FjdGl2YXRvci5mb2N1cygpXG4gICAgICAgICAgfVxuICAgICAgICB9KVxuICAgICAgfVxuXG4gICAgICBpZiAodGhpcy5lZGl0b3IuaXNBY3RpdmUoJ2xpbmsnKSkge1xuICAgICAgICB0aGlzLmxpbmtVcmwgPSB0aGlzLmVkaXRvci5nZXRBdHRyaWJ1dGVzKCdsaW5rJykuaHJlZlxuICAgICAgfVxuICAgIH0sXG4gICAgdG9nZ2xlRWRpdGFibGUoKSB7XG4gICAgICB0aGlzLmVkaXRvci5zZXRFZGl0YWJsZSghdGhpcy5lZGl0b3IuaXNFZGl0YWJsZSlcbiAgICB9LFxuICAgIHNldExpbmtVcmwgKGNhbmNlbCkge1xuICAgICAgaWYgKCFjYW5jZWwpIHtcbiAgICAgICAgdGhpcy5lZGl0b3IuY29tbWFuZHMuZm9jdXMoKVxuICAgICAgICB0aGlzLmVkaXRvci5jb21tYW5kcy5zZXRMaW5rKHsgaHJlZjogdGhpcy5saW5rVXJsIH0pXG4gICAgICB9XG4gICAgICB0aGlzLnRvZ2dsZUxpbmtVcmwoKVxuICAgIH0sXG4gICAgY2xlYXJMaW5rVXJsICgpIHtcbiAgICAgIHRoaXMuZWRpdG9yLmNvbW1hbmRzLnNldExpbmsoeyBocmVmOiBudWxsIH0pXG4gICAgICB0aGlzLnRvZ2dsZUxpbmtVcmwoKVxuICAgIH1cbiAgfVxufSlcbjwvc2NyaXB0PlxuIiwiaW1wb3J0IG1vZCBmcm9tIFwiLSEuLi8uLi8uLi9ub2RlX21vZHVsZXMvYmFiZWwtbG9hZGVyL2xpYi9pbmRleC5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvaW5kZXguanM/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL1JpY2hFZGl0b3IudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzXCI7IGV4cG9ydCBkZWZhdWx0IG1vZDsgZXhwb3J0ICogZnJvbSBcIi0hLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2JhYmVsLWxvYWRlci9saWIvaW5kZXguanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL2luZGV4LmpzPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9SaWNoRWRpdG9yLnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qc1wiIiwiaW1wb3J0IHsgcmVuZGVyLCBzdGF0aWNSZW5kZXJGbnMgfSBmcm9tIFwiLi9SaWNoRWRpdG9yLnZ1ZT92dWUmdHlwZT10ZW1wbGF0ZSZpZD1kN2ZmMWQ5Y1wiXG5pbXBvcnQgc2NyaXB0IGZyb20gXCIuL1JpY2hFZGl0b3IudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzXCJcbmV4cG9ydCAqIGZyb20gXCIuL1JpY2hFZGl0b3IudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzXCJcblxuXG4vKiBub3JtYWxpemUgY29tcG9uZW50ICovXG5pbXBvcnQgbm9ybWFsaXplciBmcm9tIFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9ydW50aW1lL2NvbXBvbmVudE5vcm1hbGl6ZXIuanNcIlxudmFyIGNvbXBvbmVudCA9IG5vcm1hbGl6ZXIoXG4gIHNjcmlwdCxcbiAgcmVuZGVyLFxuICBzdGF0aWNSZW5kZXJGbnMsXG4gIGZhbHNlLFxuICBudWxsLFxuICBudWxsLFxuICBudWxsXG4gIFxuKVxuXG5leHBvcnQgZGVmYXVsdCBjb21wb25lbnQuZXhwb3J0cyIsInZhciByZW5kZXIgPSBmdW5jdGlvbiByZW5kZXIoKXt2YXIgX3ZtPXRoaXMsX2M9X3ZtLl9zZWxmLl9jLF9zZXR1cD1fdm0uX3NlbGYuX3NldHVwUHJveHk7cmV0dXJuIF9jKCdkaXYnLHtzdGF0aWNDbGFzczpcImMtY29tcG9uZW50LXZpZXdlclwifSxbX2MoJ2RpdicsW192bS5fdihfdm0uX3MoX3ZtLmZpbGUucGF0aCkpXSksX3ZtLl92KFwiIFwiKSxfYygncHJlJyxbX3ZtLl92KF92bS5fcyhfdm0uaW5mbykpXSldKVxufVxudmFyIHN0YXRpY1JlbmRlckZucyA9IFtdXG5cbmV4cG9ydCB7IHJlbmRlciwgc3RhdGljUmVuZGVyRm5zIH0iLCI8dGVtcGxhdGU+XG4gIDxkaXYgY2xhc3M9XCJjLWNvbXBvbmVudC12aWV3ZXJcIj5cbiAgICA8ZGl2Pnt7IGZpbGUucGF0aCB9fTwvZGl2PlxuICAgIDxwcmU+e3sgaW5mbyB9fTwvcHJlPlxuICA8L2Rpdj5cbjwvdGVtcGxhdGU+XG5cbjxzY3JpcHQ+XG5pbXBvcnQgVnVlIGZyb20gJ3Z1ZSdcbmltcG9ydCBBUFAgZnJvbSAnI3NlcnZpY2VzL0FQUCdcbmV4cG9ydCBkZWZhdWx0IFZ1ZS5jb21wb25lbnQoJ0NvbXBvbmVudFZpZXdlcicsIHtcbiAgY29tcG9uZW50czoge1xuICB9LFxuICBwcm9wczoge1xuICAgIGZpbGU6IE9iamVjdFxuICB9LFxuICBkYXRhOiAoKSA9PiAoe1xuICAgIGluZm86IHt9LFxuICAgIGNvbnRlbnRzOiB1bmRlZmluZWQsXG4gICAgc2xvdFJlZ2V4OiAvPHNsb3QuKjo/bmFtZT1cIihbXlwiXSopXCIvZ20sXG4gICAgZXZlbnRzUmVnZXg6IC9cXCRlbWl0XFwoJyguKiknLipcXCkvZ21cbiAgfSksXG4gIGNyZWF0ZWQgKCkge1xuICAgIHdpbmRvdy5Db21wb25lbnRWaWV3ZXIgPSB0aGlzXG4gICAgdGhpcy5maWxlLmltcG9ydCgpLnRoZW4oY29udGVudHMgPT4ge1xuICAgICAgdGhpcy5jb250ZW50cyA9IGNvbnRlbnRzXG4gICAgICBjb25zdCBjb21wb25lbnQgPSBBUFAuY29tcG9uZW50c1t0aGlzLmZpbGUucGF0aC5zcGxpdCgnLycpLnBvcCgpLnJlcGxhY2UoL1xcLnZ1ZSQvLCAnJyldXG4gICAgICBjb25zdCBjb21wb25lbnROYW1lID0gY29tcG9uZW50Lm9wdGlvbnMubmFtZVxuICAgICAgdGhpcy5pbmZvLm5hbWUgPSBjb21wb25lbnROYW1lXG4gICAgICB0aGlzLmluZm8ucHJvcHMgPSBjb21wb25lbnQub3B0aW9ucy5wcm9wc1xuICAgICAgdGhpcy5pbmZvLnNsb3RzID0gdGhpcy5zbG90UmVnZXguZXhlY0JhdGNoKGNvbnRlbnRzKS5tYXAobWF0Y2ggPT4gbWF0Y2hbMV0pXG4gICAgICB0aGlzLmluZm8uZXZlbnRzID0gdGhpcy5ldmVudHNSZWdleC5leGVjQmF0Y2goY29udGVudHMpLm1hcChtYXRjaCA9PiBtYXRjaFsxXSlcblxuICAgICAgdGhpcy4kZm9yY2VVcGRhdGUoKVxuICAgIH0pXG4gIH0sXG4gIGJlZm9yZURlc3Ryb3kgKCkge1xuICB9LFxuICBtZXRob2RzOiB7XG4gIH1cbn0pXG48L3NjcmlwdD5cbiIsImltcG9ydCBtb2QgZnJvbSBcIi0hLi4vLi4vbm9kZV9tb2R1bGVzL2JhYmVsLWxvYWRlci9saWIvaW5kZXguanMhLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL2luZGV4LmpzPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9Db21wb25lbnRWaWV3ZXIudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzXCI7IGV4cG9ydCBkZWZhdWx0IG1vZDsgZXhwb3J0ICogZnJvbSBcIi0hLi4vLi4vbm9kZV9tb2R1bGVzL2JhYmVsLWxvYWRlci9saWIvaW5kZXguanMhLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL2luZGV4LmpzPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9Db21wb25lbnRWaWV3ZXIudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzXCIiLCJpbXBvcnQgeyByZW5kZXIsIHN0YXRpY1JlbmRlckZucyB9IGZyb20gXCIuL0NvbXBvbmVudFZpZXdlci52dWU/dnVlJnR5cGU9dGVtcGxhdGUmaWQ9N2Q0YWI1NGRcIlxuaW1wb3J0IHNjcmlwdCBmcm9tIFwiLi9Db21wb25lbnRWaWV3ZXIudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzXCJcbmV4cG9ydCAqIGZyb20gXCIuL0NvbXBvbmVudFZpZXdlci52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anNcIlxuXG5cbi8qIG5vcm1hbGl6ZSBjb21wb25lbnQgKi9cbmltcG9ydCBub3JtYWxpemVyIGZyb20gXCIhLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL3J1bnRpbWUvY29tcG9uZW50Tm9ybWFsaXplci5qc1wiXG52YXIgY29tcG9uZW50ID0gbm9ybWFsaXplcihcbiAgc2NyaXB0LFxuICByZW5kZXIsXG4gIHN0YXRpY1JlbmRlckZucyxcbiAgZmFsc2UsXG4gIG51bGwsXG4gIG51bGwsXG4gIG51bGxcbiAgXG4pXG5cbmV4cG9ydCBkZWZhdWx0IGNvbXBvbmVudC5leHBvcnRzIiwidmFyIHJlbmRlciA9IGZ1bmN0aW9uIHJlbmRlcigpe3ZhciBfdm09dGhpcyxfYz1fdm0uX3NlbGYuX2MsX3NldHVwPV92bS5fc2VsZi5fc2V0dXBQcm94eTtyZXR1cm4gX2MoJ2Rpdicse3N0YXRpY0NsYXNzOlwiYy1zbmFwLXZpZXdlclwifSxbX2MoJ2Rpdicse3N0YXRpY0NsYXNzOlwiYy1zbmFwLXZpZXdlcl9fcGFnZVwiLGRvbVByb3BzOntcImlubmVySFRNTFwiOl92bS5fcyhfdm0uaHRtbCl9fSldKVxufVxudmFyIHN0YXRpY1JlbmRlckZucyA9IFtdXG5cbmV4cG9ydCB7IHJlbmRlciwgc3RhdGljUmVuZGVyRm5zIH0iLCJpbXBvcnQgbW9kIGZyb20gXCItIS4uLy4uL25vZGVfbW9kdWxlcy9iYWJlbC1sb2FkZXIvbGliL2luZGV4LmpzIS4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9pbmRleC5qcz8/dnVlLWxvYWRlci1vcHRpb25zIS4vU25hcFZpZXdlci52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anNcIjsgZXhwb3J0IGRlZmF1bHQgbW9kOyBleHBvcnQgKiBmcm9tIFwiLSEuLi8uLi9ub2RlX21vZHVsZXMvYmFiZWwtbG9hZGVyL2xpYi9pbmRleC5qcyEuLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvaW5kZXguanM/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL1NuYXBWaWV3ZXIudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzXCIiLCJpbXBvcnQgeyByZW5kZXIsIHN0YXRpY1JlbmRlckZucyB9IGZyb20gXCIuL1NuYXBWaWV3ZXIudnVlP3Z1ZSZ0eXBlPXRlbXBsYXRlJmlkPTdmOWRlNDcxXCJcbmltcG9ydCBzY3JpcHQgZnJvbSBcIi4vU25hcFZpZXdlci52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anNcIlxuZXhwb3J0ICogZnJvbSBcIi4vU25hcFZpZXdlci52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anNcIlxuXG5cbi8qIG5vcm1hbGl6ZSBjb21wb25lbnQgKi9cbmltcG9ydCBub3JtYWxpemVyIGZyb20gXCIhLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL3J1bnRpbWUvY29tcG9uZW50Tm9ybWFsaXplci5qc1wiXG52YXIgY29tcG9uZW50ID0gbm9ybWFsaXplcihcbiAgc2NyaXB0LFxuICByZW5kZXIsXG4gIHN0YXRpY1JlbmRlckZucyxcbiAgZmFsc2UsXG4gIG51bGwsXG4gIG51bGwsXG4gIG51bGxcbiAgXG4pXG5cbmV4cG9ydCBkZWZhdWx0IGNvbXBvbmVudC5leHBvcnRzIiwiPHRlbXBsYXRlPlxuICA8ZGl2IGNsYXNzPVwiYy1maWxlLWxvYWRlclwiPlxuICAgIDxkaXYgY2xhc3M9XCJjLWZpbGUtbG9hZGVyX19jb250ZW50XCIgdi1pZj1cImNvbnRlbnRzICE9PSB1bmRlZmluZWRcIj5cbiAgICAgIDxSaWNoRWRpdG9yIHYtaWY9XCJleHQgPT09ICdtZCdcIiB2LW1vZGVsPVwiY29udGVudHNcIiBAaW5wdXQ9XCJzYXZlXCIgOmZpbGU9XCJmaWxlXCIgOmZyb20tbWVtb3J5PVwiISFmcm9tTWVtb3J5XCIgQGNsZWFyTWVtb3J5PVwib25DbGVhck1lbW9yeVwiLz5cbiAgICAgIDxDb21wb25lbnRWaWV3ZXIgdi1lbHNlLWlmPVwiZXh0ID09PSAndnVlJ1wiIHYtbW9kZWw9XCJjb250ZW50c1wiIDpmaWxlPVwiZmlsZVwiIDpmcm9tLW1lbW9yeT1cIiEhZnJvbU1lbW9yeVwiIEBjbGVhck1lbW9yeT1cIm9uQ2xlYXJNZW1vcnlcIi8+XG4gICAgICA8U25hcFZpZXdlciB2LWVsc2UtaWY9XCJleHQgPT09ICdzbmFwJ1wiIHYtbW9kZWw9XCJjb250ZW50c1wiLz5cbiAgICAgIDxkaXYgdi1lbHNlPlVuc3VwcG9ydGVkIGZpbGUgZXh0ZW5zaW9uIHt7IHBhdGggfX08L2Rpdj5cbiAgICA8L2Rpdj5cbiAgPC9kaXY+XG48L3RlbXBsYXRlPlxuXG48c2NyaXB0PlxuXG5pbXBvcnQgQVBQIGZyb20gJyNzZXJ2aWNlcy9BUFAnXG5pbXBvcnQgUmljaEVkaXRvciBmcm9tICd2aWV3cy9yaWNoRWRpdG9yL1JpY2hFZGl0b3InXG5pbXBvcnQgQ29tcG9uZW50Vmlld2VyIGZyb20gJ3ZpZXdzL0NvbXBvbmVudFZpZXdlcidcbmltcG9ydCBTbmFwVmlld2VyIGZyb20gJ3ZpZXdzL1NuYXBWaWV3ZXInXG5pbXBvcnQgQVBJIGZyb20gJyNzZXJ2aWNlcy9BUEknXG5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgbmFtZTogJ0ZpbGVMb2FkZXInLFxuICBjb21wb25lbnRzOiB7XG4gICAgUmljaEVkaXRvcixcbiAgICBDb21wb25lbnRWaWV3ZXIsXG4gICAgU25hcFZpZXdlclxuICB9LFxuICBwcm9wczoge1xuICAgIGZpbGU6IHt0eXBlOiBPYmplY3QsIHJlcXVpcmVkOiB0cnVlIH1cbiAgfSxcbiAgZGF0YTogKCkgPT4gKHtcbiAgICBwYXRoOiB1bmRlZmluZWQsXG4gICAgZXh0OiB1bmRlZmluZWQsXG4gICAgY29udGVudHM6IHVuZGVmaW5lZCxcbiAgICBmcm9tTWVtb3J5OiB1bmRlZmluZWQsXG4gICAgb2ZmbGluZTogIUFQUC5pc1dlYnBhY2tTZXJ2ZVxuICB9KSxcbiAgY3JlYXRlZCAoKSB7XG4gICAgY29uc29sZS5sb2coJ25ldyBmaWxlIGxvYWRlcicsIHRoaXMsIHRoaXMuZmlsZSlcbiAgICB0aGlzLnBhdGggPSB0aGlzLmZpbGUucGF0aFxuICAgIHRoaXMuZXh0ID0gdGhpcy5maWxlLnBhdGguc3BsaXQoJy4nKS5wb3AoKVxuICAgIHRoaXMub3BlbigpXG4gIH0sXG4gIG1vdW50ZWQgKCkge1xuICAgIHdpbmRvdy5GaWxlTG9hZGVyID0gdGhpc1xuICB9LFxuICBtZXRob2RzOiB7XG4gICAgb25DbGVhck1lbW9yeSAoKSB7XG4gICAgICBsb2NhbFN0b3JhZ2UucmVtb3ZlSXRlbSgnRnJvbnRCb2FyZFNhdmU6JyArIHRoaXMucGF0aClcbiAgICAgIHRoaXMub3BlbigpXG4gICAgfSxcbiAgICBvcGVuICgpIHtcbiAgICAgIHRoaXMuY29udGVudHMgPSB1bmRlZmluZWRcbiAgICAgIHRoaXMuZnJvbU1lbW9yeSA9IHVuZGVmaW5lZFxuICAgICAgaWYgKHRoaXMub2ZmbGluZSkge1xuICAgICAgICBjb25zdCBsb2NhbFNhdmVkID0gbG9jYWxTdG9yYWdlLmdldEl0ZW0oJ0Zyb250Qm9hcmRTYXZlOicgKyB0aGlzLnBhdGgpXG4gICAgICAgIGlmIChsb2NhbFNhdmVkKSB7XG4gICAgICAgICAgdGhpcy5mcm9tTWVtb3J5ID0gdHJ1ZVxuICAgICAgICAgIHRoaXMuY29udGVudHMgPSBsb2NhbFNhdmVkXG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgdGhpcy5maWxlLmltcG9ydCgpLnRoZW4oY29udGVudHMgPT4ge1xuICAgICAgICAgICAgdGhpcy5jb250ZW50cyA9IGNvbnRlbnRzXG4gICAgICAgICAgfSlcbiAgICAgICAgfVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgQVBJLmdldCgnZmlsZXMvJyArIHRoaXMucGF0aCkudGhlbihyZXNwb25zZSA9PiB7XG4gICAgICAgICAgaWYgKHRoaXMucGF0aCA9PT0gJy53aGl0ZWJvYXJkLm1kJyAmJiAhcmVzcG9uc2UuZGF0YSkge1xuICAgICAgICAgICAgdGhpcy5maWxlLmltcG9ydCgpLnRoZW4oY29udGVudHMgPT4ge1xuICAgICAgICAgICAgICB0aGlzLmNvbnRlbnRzID0gY29udGVudHNcbiAgICAgICAgICAgIH0pXG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHRoaXMuY29udGVudHMgPSByZXNwb25zZS5kYXRhXG4gICAgICAgICAgfVxuICAgICAgICB9KVxuICAgICAgfVxuICAgIH0sXG4gICAgc2F2ZSAoKSB7XG4gICAgICBpZiAodGhpcy5vZmZsaW5lKSB7XG4gICAgICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKCdGcm9udEJvYXJkU2F2ZTonICsgdGhpcy5wYXRoLCB0aGlzLmNvbnRlbnRzKVxuICAgICAgICB0aGlzLmZyb21NZW1vcnkgPSB0cnVlXG4gICAgICAgIGNvbnNvbGUuaW5mbygnU2F2ZWQgdG8gbG9jYWwgc3RvcmFnZScpXG4gICAgICB9IGVsc2Uge1xuICAgICAgICBBUEkucHV0KCdmaWxlcy8nICsgdGhpcy5wYXRoLCB7IGNvbnRlbnRzOiB0aGlzLmNvbnRlbnRzfSwge1xuICAgICAgICAgIGhlYWRlcnM6IHtcbiAgICAgICAgICAgICdDb250ZW50LVR5cGUnOiAnbXVsdGlwYXJ0L2Zvcm0tZGF0YSdcbiAgICAgICAgICB9XG4gICAgICAgIH0pLnRoZW4ocmVzcG9uc2UgPT4ge1xuICAgICAgICAgIGNvbnNvbGUuaW5mbygnU2F2ZWQgdG8gZmlsZSBzeXN0ZW0nKVxuICAgICAgICB9KVxuICAgICAgfVxuICAgIH1cbiAgfVxufVxuPC9zY3JpcHQ+XG4iLCJpbXBvcnQgbW9kIGZyb20gXCItIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9iYWJlbC1sb2FkZXIvbGliL2luZGV4LmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9pbmRleC5qcz8/dnVlLWxvYWRlci1vcHRpb25zIS4vRmlsZUxvYWRlci52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anNcIjsgZXhwb3J0IGRlZmF1bHQgbW9kOyBleHBvcnQgKiBmcm9tIFwiLSEuLi8uLi8uLi9ub2RlX21vZHVsZXMvYmFiZWwtbG9hZGVyL2xpYi9pbmRleC5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvaW5kZXguanM/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL0ZpbGVMb2FkZXIudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzXCIiLCJpbXBvcnQgeyByZW5kZXIsIHN0YXRpY1JlbmRlckZucyB9IGZyb20gXCIuL0ZpbGVMb2FkZXIudnVlP3Z1ZSZ0eXBlPXRlbXBsYXRlJmlkPTAxMGUwM2UxXCJcbmltcG9ydCBzY3JpcHQgZnJvbSBcIi4vRmlsZUxvYWRlci52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anNcIlxuZXhwb3J0ICogZnJvbSBcIi4vRmlsZUxvYWRlci52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anNcIlxuXG5cbi8qIG5vcm1hbGl6ZSBjb21wb25lbnQgKi9cbmltcG9ydCBub3JtYWxpemVyIGZyb20gXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL3J1bnRpbWUvY29tcG9uZW50Tm9ybWFsaXplci5qc1wiXG52YXIgY29tcG9uZW50ID0gbm9ybWFsaXplcihcbiAgc2NyaXB0LFxuICByZW5kZXIsXG4gIHN0YXRpY1JlbmRlckZucyxcbiAgZmFsc2UsXG4gIG51bGwsXG4gIG51bGwsXG4gIG51bGxcbiAgXG4pXG5cbmV4cG9ydCBkZWZhdWx0IGNvbXBvbmVudC5leHBvcnRzIiwidmFyIHJlbmRlciA9IGZ1bmN0aW9uIHJlbmRlcigpe3ZhciBfdm09dGhpcyxfYz1fdm0uX3NlbGYuX2M7cmV0dXJuIF9jKCdkaXYnLHtzdGF0aWNDbGFzczpcImMtcGFsZXR0ZV9fc2VjdGlvbi0tc3RhdGljZGJcIn0sW19jKCdkaXYnLHtzdGF0aWNDbGFzczpcImMtc2NoZW1lX19oZWFkZXJcIn0sW19jKCdkaXYnLHtzdGF0aWNDbGFzczpcImMtc2NoZW1lX190aXRsZSB2LWRhcmttb2RlXCJ9LFtfYygnaDInLFtfdm0uX3YoXCJEYXRhYmFzZXNcIildKSxfdm0uX3YoXCIgXCIpLF9jKCdTZWxlY3Rvcicse2F0dHJzOntcInVzZS1vYmplY3RcIjpcIlwiLFwibXVsdGlsZXZlbFwiOlwiXCIsXCJvcHRpb25zXCI6X3ZtLmNvbGxlY3Rpb25zLFwib3B0aW9uVGV4dFwiOlwibmFtZVwiLFwib3B0aW9uVmFsdWVcIjpcImlkXCJ9LHNjb3BlZFNsb3RzOl92bS5fdShbe2tleTpcIm9wdGlvblwiLGZuOmZ1bmN0aW9uKHsgb3B0aW9uIH0pe3JldHVybiBbKG9wdGlvbi5oaWRkZW4pP19jKCdpJyx7c3RhdGljQ2xhc3M6XCJmaSBmaS1yci1leWUtY3Jvc3NlZFwifSxbX3ZtLl92KFwiwqBcIildKTpfdm0uX2UoKSxfdm0uX3YoX3ZtLl9zKG9wdGlvbi5uYW1lKSldfX1dKSxtb2RlbDp7dmFsdWU6KF92bS5jdXJyZW50Q29sbGVjdGlvbiksY2FsbGJhY2s6ZnVuY3Rpb24gKCQkdikge192bS5jdXJyZW50Q29sbGVjdGlvbj0kJHZ9LGV4cHJlc3Npb246XCJjdXJyZW50Q29sbGVjdGlvblwifX0pLF92bS5fdihcIiBcIiksX2MoJ1NlbGVjdG9yJyx7YXR0cnM6e1wib3B0aW9uc1wiOlsnRVMnLCdFTiddfSxtb2RlbDp7dmFsdWU6KF92bS5BUFAubGFuZ3VhZ2UpLGNhbGxiYWNrOmZ1bmN0aW9uICgkJHYpIHtfdm0uJHNldChfdm0uQVBQLCBcImxhbmd1YWdlXCIsICQkdil9LGV4cHJlc3Npb246XCJBUFAubGFuZ3VhZ2VcIn19KV0sMSksX3ZtLl92KFwiIFwiKSxfYygnZGl2Jyx7c3RhdGljQ2xhc3M6XCJjLXNjaGVtZV9fdG9vbGJhciB2LWRhcmttb2RlXCJ9LFtfYygnbGFiZWwnLFtfYygnaW5wdXQnLHtkaXJlY3RpdmVzOlt7bmFtZTpcIm1vZGVsXCIscmF3TmFtZTpcInYtbW9kZWxcIix2YWx1ZTooX3ZtLnBhbGV0dGUuc2hvd0JvdGgpLGV4cHJlc3Npb246XCJwYWxldHRlLnNob3dCb3RoXCJ9XSxzdGF0aWNDbGFzczpcImMtY2hlY2tib3hcIixhdHRyczp7XCJ0eXBlXCI6XCJjaGVja2JveFwifSxkb21Qcm9wczp7XCJjaGVja2VkXCI6QXJyYXkuaXNBcnJheShfdm0ucGFsZXR0ZS5zaG93Qm90aCk/X3ZtLl9pKF92bS5wYWxldHRlLnNob3dCb3RoLG51bGwpPi0xOihfdm0ucGFsZXR0ZS5zaG93Qm90aCl9LG9uOntcImNoYW5nZVwiOmZ1bmN0aW9uKCRldmVudCl7dmFyICQkYT1fdm0ucGFsZXR0ZS5zaG93Qm90aCwkJGVsPSRldmVudC50YXJnZXQsJCRjPSQkZWwuY2hlY2tlZD8odHJ1ZSk6KGZhbHNlKTtpZihBcnJheS5pc0FycmF5KCQkYSkpe3ZhciAkJHY9bnVsbCwkJGk9X3ZtLl9pKCQkYSwkJHYpO2lmKCQkZWwuY2hlY2tlZCl7JCRpPDAmJihfdm0uJHNldChfdm0ucGFsZXR0ZSwgXCJzaG93Qm90aFwiLCAkJGEuY29uY2F0KFskJHZdKSkpfWVsc2V7JCRpPi0xJiYoX3ZtLiRzZXQoX3ZtLnBhbGV0dGUsIFwic2hvd0JvdGhcIiwgJCRhLnNsaWNlKDAsJCRpKS5jb25jYXQoJCRhLnNsaWNlKCQkaSsxKSkpKX19ZWxzZXtfdm0uJHNldChfdm0ucGFsZXR0ZSwgXCJzaG93Qm90aFwiLCAkJGMpfX19fSksX2MoJ2knLHtzdGF0aWNDbGFzczpcImZpIGZpLXJyLXRhYmxlLWNvbHVtbnNcIn0sW192bS5fdihcIsKgXCIpXSksX3ZtLl92KFwiVHJlZXZpZXdcIildKSxfdm0uX3YoXCIgXCIpLF9jKCdidXR0b24nLHtzdGF0aWNDbGFzczpcImMtYWN0aW9uIHQtcHJpbWFyeSB2LXNlbWlcIixhdHRyczp7XCJ0eXBlXCI6XCJidXR0b25cIn0sb246e1wiY2xpY2tcIjpfdm0uc2F2ZX19LFtfdm0uX3YoXCJTYXZlIHN0YXRpY0RCXCIpXSldKV0pLF92bS5fdihcIiBcIiksKF92bS5jdXJyZW50Q29sbGVjdGlvbiAmJiBfdm0uY3VycmVudENvbGxlY3Rpb24uQ2xhc3MpP19jKCdTY2hlbWVMaXN0Jyx7a2V5Ol92bS5jdXJyZW50Q29sbGVjdGlvbi5uYW1lLHJlZjpcIlNjaGVtZVZpZXdlclwiLGF0dHJzOntcInNjaGVtZUNsYXNzXCI6X3ZtLmN1cnJlbnRDb2xsZWN0aW9uLkNsYXNzfSxtb2RlbDp7dmFsdWU6KF92bS5jdXJyZW50Q29sbGVjdGlvbi5kYXRhKSxjYWxsYmFjazpmdW5jdGlvbiAoJCR2KSB7X3ZtLiRzZXQoX3ZtLmN1cnJlbnRDb2xsZWN0aW9uLCBcImRhdGFcIiwgJCR2KX0sZXhwcmVzc2lvbjpcImN1cnJlbnRDb2xsZWN0aW9uLmRhdGFcIn19KTooX3ZtLmN1cnJlbnRDb2xsZWN0aW9uID09PSAnU1FMaXRlJyk/W19jKCdTY2hlbWVMaXN0Jyx7cmVmOlwiU2NoZW1lVmlld2VyXCIsYXR0cnM6e1wic2NoZW1lQ2xhc3NcIjpfdm0uQVBQLm1vZGVscy5Vc2VyLFwiZmlsdGVySGFuZGxlclwiOl92bS5maWx0ZXJIYW5kbGVyfX0pXTooX3ZtLmN1cnJlbnRDb2xsZWN0aW9uKT9fYygnZmllbGRzZXQnLHtzdGF0aWNDbGFzczpcImMtZmllbGRzZXRcIn0sW192bS5fdihcIk5vdCBpbXBsZW1lbnRlZCAtIGNvbmZpZyBwYW5lbFwiKV0pOl9jKCdmaWVsZHNldCcse3N0YXRpY0NsYXNzOlwiYy1maWVsZHNldFwifSxbX3ZtLl92KFwiU2VsZWN0IGEgc3RhdGljREIgY29sbGVjdGlvblwiKV0pXSwyKVxufVxudmFyIHN0YXRpY1JlbmRlckZucyA9IFtdXG5cbmV4cG9ydCB7IHJlbmRlciwgc3RhdGljUmVuZGVyRm5zIH0iLCI8dGVtcGxhdGU+XG4gIDxkaXYgY2xhc3M9XCJjLXBhbGV0dGVfX3NlY3Rpb24tLXN0YXRpY2RiXCI+XG4gICAgPGRpdiBjbGFzcz1cImMtc2NoZW1lX19oZWFkZXJcIj5cbiAgICAgIDxkaXYgY2xhc3M9XCJjLXNjaGVtZV9fdGl0bGUgdi1kYXJrbW9kZVwiPlxuICAgICAgICA8aDI+RGF0YWJhc2VzPC9oMj5cbiAgICAgICAgPFNlbGVjdG9yIHYtbW9kZWw9XCJjdXJyZW50Q29sbGVjdGlvblwiIHVzZS1vYmplY3QgbXVsdGlsZXZlbCA6b3B0aW9ucz1cImNvbGxlY3Rpb25zXCIgb3B0aW9uVGV4dD1cIm5hbWVcIiBvcHRpb25WYWx1ZT1cImlkXCI+XG4gICAgICAgICAgPHRlbXBsYXRlICNvcHRpb249XCJ7IG9wdGlvbiB9XCI+PGkgdi1pZj1cIm9wdGlvbi5oaWRkZW5cIiBjbGFzcz1cImZpIGZpLXJyLWV5ZS1jcm9zc2VkXCI+Jm5ic3A7PC9pPnt7IG9wdGlvbi5uYW1lIH19PC90ZW1wbGF0ZT5cbiAgICAgICAgICA8IS0tXG4gICAgICAgICAgPHRlbXBsYXRlICNvcHRpb25zLmFwcGVuZD5cbiAgICAgICAgICAgIDxTZWxlY3Rvck9wdGlvbiBAc2VsZWN0Om9wdGlvbj1cImN1cnJlbnRDb2xsZWN0aW9uID0gJ1NRTGl0ZSdcIj5TUUxpdGU8L1NlbGVjdG9yT3B0aW9uPlxuICAgICAgICAgIDwvdGVtcGxhdGU+XG4gICAgICAgICAgLS0+XG4gICAgICAgIDwvU2VsZWN0b3I+XG4gICAgICAgIDxTZWxlY3RvciB2LW1vZGVsPVwiQVBQLmxhbmd1YWdlXCIgOm9wdGlvbnM9XCJbJ0VTJywnRU4nXVwiIC8+XG4gICAgICA8L2Rpdj5cbiAgICAgIDxkaXYgY2xhc3M9XCJjLXNjaGVtZV9fdG9vbGJhciB2LWRhcmttb2RlXCI+XG4gICAgICAgIDwhLS1cbiAgICAgICAgPGxhYmVsPlxuICAgICAgICAgIDxpbnB1dCB0eXBlPVwiY2hlY2tib3hcIiB2LW1vZGVsPVwicGFsZXR0ZS5taW5pVmFyaWF0aW9uXCIgY2xhc3M9XCJjLWNoZWNrYm94XCI+XG4gICAgICAgICAgPHRvb2x0aXAgOmNvbnRlbnQ9XCJpMThuKCdjb21tb24uaGVscC5saWdodFRhYmxlcycpXCI+TGlnaHQgdGFibGVzPC90b29sdGlwPlxuICAgICAgICA8L2xhYmVsPlxuICAgICAgICA8bGFiZWw+PGlucHV0IHR5cGU9XCJjaGVja2JveFwiIHYtbW9kZWw9XCJwYWxldHRlLmlubGluZUV4cGFuZFwiIGNsYXNzPVwiYy1jaGVja2JveFwiPklubGluZSBleHBhbmQ8L2xhYmVsPlxuICAgICAgICAtLT5cbiAgICAgICAgPGxhYmVsPjxpbnB1dCB0eXBlPVwiY2hlY2tib3hcIiB2LW1vZGVsPVwicGFsZXR0ZS5zaG93Qm90aFwiIGNsYXNzPVwiYy1jaGVja2JveFwiPjxpIGNsYXNzPVwiZmkgZmktcnItdGFibGUtY29sdW1uc1wiPiZuYnNwOzwvaT5UcmVldmlldzwvbGFiZWw+XG4gICAgICAgIDxidXR0b24gY2xhc3M9XCJjLWFjdGlvbiB0LXByaW1hcnkgdi1zZW1pXCIgQGNsaWNrPVwic2F2ZVwiIHR5cGU9XCJidXR0b25cIj5TYXZlIHN0YXRpY0RCPC9idXR0b24+XG4gICAgICA8L2Rpdj5cbiAgICA8L2Rpdj5cbiAgICA8U2NoZW1lTGlzdCByZWY9XCJTY2hlbWVWaWV3ZXJcIiB2LWlmPVwiY3VycmVudENvbGxlY3Rpb24gJiYgY3VycmVudENvbGxlY3Rpb24uQ2xhc3NcIiA6a2V5PVwiY3VycmVudENvbGxlY3Rpb24ubmFtZVwiIDpzY2hlbWVDbGFzcz1cImN1cnJlbnRDb2xsZWN0aW9uLkNsYXNzXCIgdi1tb2RlbD1cImN1cnJlbnRDb2xsZWN0aW9uLmRhdGFcIj5cbiAgICAgIDwhLS0gPHRlbXBsYXRlICN0aXRsZT48aDI+e3sgY3VycmVudENvbGxlY3Rpb24uQ2xhc3MucGx1cmFsaXplKGN1cnJlbnRDb2xsZWN0aW9uLkNsYXNzLnRvU3RyaW5nKCkpIH19PC9oMj48L3RlbXBsYXRlPiAtLT5cbiAgICA8L1NjaGVtZUxpc3Q+XG4gICAgPHRlbXBsYXRlIHYtZWxzZS1pZj1cImN1cnJlbnRDb2xsZWN0aW9uID09PSAnU1FMaXRlJ1wiPlxuICAgICAgPFNjaGVtZUxpc3QgcmVmPVwiU2NoZW1lVmlld2VyXCIgOnNjaGVtZUNsYXNzPVwiQVBQLm1vZGVscy5Vc2VyXCIgOmZpbHRlckhhbmRsZXI9XCJmaWx0ZXJIYW5kbGVyXCIvPlxuICAgIDwvdGVtcGxhdGU+XG4gICAgPGZpZWxkc2V0IGNsYXNzPVwiYy1maWVsZHNldFwiIHYtZWxzZS1pZj1cImN1cnJlbnRDb2xsZWN0aW9uXCI+Tm90IGltcGxlbWVudGVkIC0gY29uZmlnIHBhbmVsPC9maWVsZHNldD5cbiAgICA8ZmllbGRzZXQgY2xhc3M9XCJjLWZpZWxkc2V0XCIgdi1lbHNlPlNlbGVjdCBhIHN0YXRpY0RCIGNvbGxlY3Rpb248L2ZpZWxkc2V0PlxuICA8L2Rpdj5cbjwvdGVtcGxhdGU+XG5cbjxzY3JpcHQ+XG5cbmltcG9ydCBBUFAgZnJvbSAnI3NlcnZpY2VzL0FQUCdcbmltcG9ydCBBUEkgZnJvbSAnI3NlcnZpY2VzL0FQSSdcbmltcG9ydCBTY2hlbWUgZnJvbSAnI3NlcnZpY2VzL1NjaGVtZSdcbmltcG9ydCBTdGF0aWNEQiBmcm9tICcjc2VydmljZXMvU3RhdGljREInXG5pbXBvcnQgcGFsZXR0ZSBmcm9tICcjc2VydmljZXMvcGFsZXR0ZSdcbmltcG9ydCBkcmFnZ2FibGUgZnJvbSAndnVlZHJhZ2dhYmxlJ1xuXG4vLyBOZWNlc2l0byB1biBnZXN0b3IgcGFyYSBlc3RvIDovIHkgdGVtYSBydXRhcy9zdGF0ZS92YXJzXG4vLyBjb25zdCBuZXd1cmwgPSB3aW5kb3cubG9jYXRpb24ucHJvdG9jb2wgKyAnLy8nICsgd2luZG93LmxvY2F0aW9uLmhvc3QgKyB3aW5kb3cubG9jYXRpb24ucGF0aG5hbWUgKyAnP2Zyb250Ym9hcmQ9JyArIHRoaXMucGF0aFxuLy8gICB3aW5kb3cuaGlzdG9yeS5wdXNoU3RhdGUoeyBwYXRoOiBuZXd1cmwgfSwgJycsIG5ld3VybClcbi8vIH1cblxuZXhwb3J0IGRlZmF1bHQge1xuICBuYW1lOiAnUGFsZXR0ZScsXG4gIGNvbXBvbmVudHM6IHtcbiAgICBkcmFnZ2FibGVcbiAgfSxcbiAgZGF0YTogKCkgPT4gKHtcbiAgICBBUFAsXG4gICAgcGFsZXR0ZSxcbiAgICBjdXJyZW50Q29sbGVjdGlvbjogT2JqZWN0LnZhbHVlcyhTdGF0aWNEQi5kYXRhYmFzZXMpXG4gICAgICAubWFwKGRhdGFiYXNlID0+IE9iamVjdC52YWx1ZXMoZGF0YWJhc2UuY29sbGVjdGlvbnMpKVxuICAgICAgLmZsYXQoKVxuICAgICAgLmZpbmQoY29sbGVjdGlvbiA9PiBjb2xsZWN0aW9uLmlkID09PSBsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgnU3RhdGljREI6Y3VycmVudENvbGxlY3Rpb24nKSkgfHwgbG9jYWxTdG9yYWdlLmdldEl0ZW0oJ1N0YXRpY0RCOmN1cnJlbnRDb2xsZWN0aW9uJylcbiAgfSksXG4gIGNyZWF0ZWQoKSB7XG4gICAgd2luZG93LlN0YXRpY0RCID0gdGhpc1xuICB9LFxuICBjb21wdXRlZDoge1xuICAgIGNvbGxlY3Rpb25zKCkge1xuICAgICAgcmV0dXJuIE9iamVjdC52YWx1ZXMoU3RhdGljREIuZGF0YWJhc2VzKS5tYXAoZGF0YWJhc2UgPT4gKHtcbiAgICAgICAgbmFtZTogZGF0YWJhc2UucGF0aCwgLy8gcmV2aWV3LCBncm91cGVkIHVzZXMgZGVmYXVsdCAndGV4dCcgYWNjZXNvciwgbXVsdGlsZXZlbCB1c2VzICduYW1lJy4gQW5kIGJhZCBjdXJyZW50IHNlbGVjdGlvbiBvbiBsb2FkXG4gICAgICAgIG9wdGlvbnM6IE9iamVjdC52YWx1ZXMoZGF0YWJhc2UuY29sbGVjdGlvbnMpLnRvU29ydGVkKGNhdGVnb3J5ID0+IGNhdGVnb3J5LmhpZGRlbiA/IDEgOiAtMSlcbiAgICAgIH0pKVxuICAgIH1cbiAgfSxcbiAgd2F0Y2g6IHtcbiAgICBjdXJyZW50Q29sbGVjdGlvbih2YWx1ZSkge1xuICAgICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oJ1N0YXRpY0RCOmN1cnJlbnRDb2xsZWN0aW9uJywgKHZhbHVlICYmIHZhbHVlLmlkKSA/IHZhbHVlLmlkIDogdmFsdWUpXG4gICAgfVxuICB9LFxuICBtZXRob2RzOiB7XG4gICAgY01lbnUoZXZlbnQpIHtcbiAgICAgIC8vIEBjb250ZXh0bWVudS5zdG9wLnByZXZlbnQ9XCJjTWVudVwiXG4gICAgICAvLyBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCdjb250ZXh0bWVudScsIHRoaXMuY01lbnUpXG4gICAgICAvLyBldmVudC5wcmV2ZW50RGVmYXVsdCgpXG4gICAgICBjb25zb2xlLmxvZygnYy1tZW51JywgZXZlbnQpXG4gICAgfSxcbiAgICBmaWx0ZXJIYW5kbGVyKGZpbHRlcnMpIHtcbiAgICAgIC8qXG4gICAgICBjb25zdCBxdWVyeSA9IHt9XG4gICAgICBpZiAoZmlsdGVycy5sZW5ndGggPiAwKSB7XG4gICAgICAgIGNvbnNvbGUubG9nKCdmaWx0ZXJpbmcnLCBmaWx0ZXJzKVxuICAgICAgICBmaWx0ZXJzLmZvckVhY2goZmlsdGVyID0+IHtcbiAgICAgICAgICBjb25zdCBmaWVsZCA9IGZpbHRlci5maWVsZFxuICAgICAgICAgIGNvbnN0IGtleSA9IGZpZWxkLmtleVxuICAgICAgICAgIGNvbnN0IHZhbHVlID0gZmlsdGVyW2tleV1cbiAgICAgICAgICBxdWVyeVtrZXldID0gZmlsdGVyW2tleV1cbiAgICAgICAgfSlcbiAgICAgIH1cbiAgICAgICovXG5cbiAgICAgIGNvbnN0IHF1ZXJ5RmlsdGVyID0gW11cbiAgICAgIGlmIChmaWx0ZXJzLmxlbmd0aCA+IDApIHtcbiAgICAgICAgY29uc29sZS5sb2coJ2ZpbHRlcmluZycsIGZpbHRlcnMpXG4gICAgICAgIGZpbHRlcnMuZm9yRWFjaChmaWx0ZXIgPT4ge1xuICAgICAgICAgIHF1ZXJ5RmlsdGVyLnB1c2goZmlsdGVyLm1hcChvcGVyYW5kID0+IHtcbiAgICAgICAgICAgIGNvbnN0IGZpZWxkID0gb3BlcmFuZC5maWVsZFxuICAgICAgICAgICAgY29uc3Qga2V5ID0gZmllbGQua2V5XG4gICAgICAgICAgICBjb25zdCBvcGVyYW5kVmFsdWVLZXlzID0gT2JqZWN0LmtleXMob3BlcmFuZCkuZmlsdGVyKGtleSA9PiAhWydmaWVsZCcsICdvcGVyYXRvciddLmluY2x1ZGVzKGtleSkpXG4gICAgICAgICAgICBjb25zdCBvcGVyYW5kVmFsdWVzID0gT2JqZWN0LmZyb21FbnRyaWVzKG9wZXJhbmRWYWx1ZUtleXMubWFwKGtleSA9PiBba2V5LCBvcGVyYW5kW2tleV1dKSlcbiAgICAgICAgICAgIHJldHVybiB7W2tleV06IG9wZXJhbmRWYWx1ZXN9XG4gICAgICAgICAgfSkpXG4gICAgICAgIH0pXG4gICAgICB9XG5cbiAgICAgIGNvbnNvbGUubG9nKCdRVUVSWScsIEpTT04uc3RyaW5naWZ5KHF1ZXJ5RmlsdGVyKSlcblxuICAgICAgcmV0dXJuIEFQSS5nZXQoJ3NxbGl0ZS91c2VycycsIHsgcGFyYW1zOiB7IGZpbHRlcjogSlNPTi5zdHJpbmdpZnkocXVlcnlGaWx0ZXIpIH0gfSkudGhlbihyZXNwb25zZSA9PiB7XG4gICAgICAgIHJlc3BvbnNlLmRhdGEuZm9yRWFjaChlbnRyeSA9PiB7XG4gICAgICAgICAgZW50cnkudHlwZSA9ICdVc2VyJ1xuICAgICAgICB9KVxuICAgICAgICByZXR1cm4gU2NoZW1lLnBvcHVsYXRlKHJlc3BvbnNlLmRhdGEpXG4gICAgICAgIC8vIGNvbnNvbGUuaW5mbygnU2F2ZWQnLCB7IGZvcm1hdGVkLCBzdHJpbmdpZmllZCB9KVxuICAgICAgfSlcblxuICAgICAgLypcbiAgICAgIFt7YTpbe2JldHdlZW46IFtdXX0sIHt9XVxuICAgICAgW1xuICAgICAgICB7YToge2VxdWFsOiAnQSd9LCBiOiB7bGlrZTonQid9LCBjOiB7YmV0d2VlbjogWzEsMTBdLCBkOiB7aW46IFsxLDIsM119fX0sXG4gICAgICAgIC8vIGEgPSAnQSdcbiAgICAgICAgLy8gQU5EIGIgTElLRSAnQidcbiAgICAgICAgLy8gQU5EIGMgQkVUV0VFTiAxIEFORCAxMFxuICAgICAgICAvLyBBTkQgZCBJTiAoMSwyLDMpXG4gICAgICAgIC8vIG5vdEVxdWFsICE9XG4gICAgICAgIC8vIGxlc3MgPFxuICAgICAgICAvLyBncmVhdGVyID5cbiAgICAgICAgLy8gbGVzc09yRXF1YWwgPD1cbiAgICAgICAgLy8gZ3JlYXRlck9yRXF1YWwgPj1cbiAgICAgICAge30gLy8gT1IuLi5cbiAgICAgIF1cbiAgICAgICovXG5cbiAgICAgIC8qXG4gICAgICByZXR1cm4gdGhpcy5saXN0LmZpbHRlcihlbnRpdHkgPT4ge1xuICAgICAgICByZXR1cm4gZmlsdGVycy5ldmVyeShmaWx0ZXIgPT4ge1xuICAgICAgICAgIGNvbnN0IGZpZWxkID0gZmlsdGVyLmZpZWxkXG4gICAgICAgICAgY29uc3QgdmFsdWUgPSBmaWx0ZXJbZmllbGQua2V5XVxuICAgICAgICAgIC8vIGNvbnNvbGUubG9nKCdmaWx0ZXIgdmFsdWUgaXMnLCBmaWVsZCwgZmlsdGVyLCB2YWx1ZSlcbiAgICAgICAgICBpZiAoZmllbGQudHlwZSA9PT0gTnVtYmVyIHx8IGZpZWxkLnR5cGUgPT09IERhdGUpIHtcbiAgICAgICAgICAgIGNvbnN0IGdyZWF0ZXJUaGFuID0gTnVtYmVyKGZpbHRlclsnPicgKyBmaWVsZC5rZXldKSB8fCB1bmRlZmluZWQgLy89IFt1bmRlZmluZWQsIG51bGxdLmluY2x1ZGVzKGVudGl0eVsnPicgKyBmaWVsZC5rZXldKSA/IHRydWUgOlxuICAgICAgICAgICAgY29uc3QgbGVzc1RoYW4gPSBOdW1iZXIoZmlsdGVyWyc8JyArIGZpZWxkLmtleV0pIHx8IHVuZGVmaW5lZFxuICAgICAgICAgICAgY29uc3QgaXNHcmVhdGVyVGhhbiA9IFt1bmRlZmluZWQsIG51bGxdLmluY2x1ZGVzKGdyZWF0ZXJUaGFuKSA/IHRydWUgOiAoZW50aXR5W2ZpZWxkLmtleV0gPj0gZ3JlYXRlclRoYW4pXG4gICAgICAgICAgICBjb25zdCBpc0xlc3NUaGFuID0gW3VuZGVmaW5lZCwgbnVsbF0uaW5jbHVkZXMobGVzc1RoYW4pID8gdHJ1ZSA6IChlbnRpdHlbZmllbGQua2V5XSA8PSBsZXNzVGhhbilcbiAgICAgICAgICAgIHJldHVybiBpc0dyZWF0ZXJUaGFuICYmIGlzTGVzc1RoYW5cbiAgICAgICAgICB9IGVsc2UgaWYgKGZpZWxkLmNsYXNzIHx8IGZpZWxkLm9wdGlvbnMpIHtcbiAgICAgICAgICAgIGlmIChmaWVsZC5tdWx0aXBsZSkge1xuICAgICAgICAgICAgICByZXR1cm4gZW50aXR5W2ZpZWxkLmtleV0uc29tZShlbnRpdHlWYWx1ZSA9PiB2YWx1ZS5pbmNsdWRlcyhlbnRpdHlWYWx1ZSkpXG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICByZXR1cm4gdmFsdWUuaW5jbHVkZXMoZW50aXR5W2ZpZWxkLmtleV0pXG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSBlbHNlIGlmICghdmFsdWUpIHtcbiAgICAgICAgICAgIHJldHVybiB0cnVlXG4gICAgICAgICAgfSBlbHNlIGlmICh0eXBlb2YgdmFsdWUgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgICAgICByZXR1cm4gZW50aXR5W2ZpZWxkLmtleV0udG9Mb3dlckNhc2UoKS5pbmNsdWRlcyh2YWx1ZS50b0xvd2VyQ2FzZSgpKVxuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAvLyBjb25zb2xlLmxvZygnY2hlY2sgaWYgZm9yJywgZmllbGQua2V5LCAnaXRlbScsIGVudGl0eSwgJ2hhcycsIGVudGl0eVtmaWVsZC5rZXldLCAnPT09JywgdmFsdWUpXG4gICAgICAgICAgICByZXR1cm4gZW50aXR5W2ZpZWxkLmtleV0gPT09IHZhbHVlXG4gICAgICAgICAgfVxuICAgICAgICB9KVxuICAgICAgfSlcbiAgICAgICovXG4gICAgfSxcbiAgICBzYXZlKCkge1xuICAgICAgU3RhdGljREIuc2F2ZSgpXG4gICAgICAvKlxuICAgICAgLnRoZW4oKCkgPT4ge1xuICAgICAgICBjb25zb2xlLmxvZygnc3RhdGljREIgc2F2ZWQnKVxuICAgICAgfSlcbiAgICAgICovXG4gICAgfVxuICB9XG59XG5cbjwvc2NyaXB0PlxuIiwiaW1wb3J0IG1vZCBmcm9tIFwiLSEuLi8uLi9ub2RlX21vZHVsZXMvYmFiZWwtbG9hZGVyL2xpYi9pbmRleC5qcyEuLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvaW5kZXguanM/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL1N0YXRpY0RCLnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qc1wiOyBleHBvcnQgZGVmYXVsdCBtb2Q7IGV4cG9ydCAqIGZyb20gXCItIS4uLy4uL25vZGVfbW9kdWxlcy9iYWJlbC1sb2FkZXIvbGliL2luZGV4LmpzIS4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9pbmRleC5qcz8/dnVlLWxvYWRlci1vcHRpb25zIS4vU3RhdGljREIudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzXCIiLCJpbXBvcnQgeyByZW5kZXIsIHN0YXRpY1JlbmRlckZucyB9IGZyb20gXCIuL1N0YXRpY0RCLnZ1ZT92dWUmdHlwZT10ZW1wbGF0ZSZpZD1lM2IwYTIwMlwiXG5pbXBvcnQgc2NyaXB0IGZyb20gXCIuL1N0YXRpY0RCLnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qc1wiXG5leHBvcnQgKiBmcm9tIFwiLi9TdGF0aWNEQi52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anNcIlxuXG5cbi8qIG5vcm1hbGl6ZSBjb21wb25lbnQgKi9cbmltcG9ydCBub3JtYWxpemVyIGZyb20gXCIhLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL3J1bnRpbWUvY29tcG9uZW50Tm9ybWFsaXplci5qc1wiXG52YXIgY29tcG9uZW50ID0gbm9ybWFsaXplcihcbiAgc2NyaXB0LFxuICByZW5kZXIsXG4gIHN0YXRpY1JlbmRlckZucyxcbiAgZmFsc2UsXG4gIG51bGwsXG4gIG51bGwsXG4gIG51bGxcbiAgXG4pXG5cbmV4cG9ydCBkZWZhdWx0IGNvbXBvbmVudC5leHBvcnRzIiwidmFyIHJlbmRlciA9IGZ1bmN0aW9uIHJlbmRlcigpe3ZhciBfdm09dGhpcyxfYz1fdm0uX3NlbGYuX2M7cmV0dXJuIChfdm0ucGFsZXR0ZS5hY3RpdmUpP19jKCdkaXYnLHtzdGF0aWNDbGFzczpcImMtcGFsZXR0ZVwifSxbKF92bS5jdXJyZW50VGFiID09PSAnQ1NTVmFycycpP19jKCdkaXYnLHtzdGF0aWNDbGFzczpcImMtcGFsZXR0ZV9fc2VjdGlvblwifSxbX3ZtLl9tKDApLF92bS5fdihcIiBcIiksX2MoJ2RyYWdnYWJsZScse3N0YXRpY0NsYXNzOlwiYy1maWVsZHNldCBjLXBhbGV0dGVfX3RhYmxlIGMtZHJhZ2FibGVcIixhdHRyczp7XCJ0YWdcIjpcImZpZWxkc2V0XCIsXCJkcmFnZ2FibGVcIjpcIi5jLWRyYWdnYWJsZV9faXRlbVwiLFwiaGFuZGxlXCI6XCIuYy1kcmFnZ2FibGVfX2hhbmRsZXJcIixcImxpc3RcIjpfdm0ucGFsZXR0ZS5iYXNlQ1NTVmFyc319LF92bS5fbCgoX3ZtLnBhbGV0dGUuYmFzZUNTU1ZhcnMpLGZ1bmN0aW9uKGNzc1Zhcil7cmV0dXJuIF9jKCdkaXYnLHtzdGF0aWNDbGFzczpcImMtZmllbGRzZXRfX2l0ZW0gYy1kcmFnZ2FibGVfX2l0ZW1cIn0sW19jKCdsYWJlbCcsW19jKCdzcGFuJyx7c3RhdGljQ2xhc3M6XCJjLWRyYWdnYWJsZV9faGFuZGxlciBjLWRyYWdnYWJsZV9faGFuZGxlci0tZ3JhYmJlclwifSksX3ZtLl92KF92bS5fcyhjc3NWYXIubmFtZS50b1NwYWNlcygpLmNhcGl0YWxpemUoKSkpXSksX3ZtLl92KFwiIFwiKSwoY3NzVmFyLmZvcm1hdCA9PT0gJ3B4Jyk/W19jKCdkaXYnLHtzdGF0aWNDbGFzczpcImMtZmllbGRcIn0sW19jKCdpbnB1dCcse2RpcmVjdGl2ZXM6W3tuYW1lOlwibW9kZWxcIixyYXdOYW1lOlwidi1tb2RlbFwiLHZhbHVlOihjc3NWYXIudmFsdWUpLGV4cHJlc3Npb246XCJjc3NWYXIudmFsdWVcIn1dLHN0YXRpY0NsYXNzOlwiYy1pbnB1dFwiLGF0dHJzOntcInR5cGVcIjpcIm51bWJlclwiLFwibWluXCI6XCIwXCIsXCJtYXhcIjpcIjUwXCJ9LGRvbVByb3BzOntcInZhbHVlXCI6KGNzc1Zhci52YWx1ZSl9LG9uOntcImlucHV0XCI6ZnVuY3Rpb24oJGV2ZW50KXtpZigkZXZlbnQudGFyZ2V0LmNvbXBvc2luZylyZXR1cm47X3ZtLiRzZXQoY3NzVmFyLCBcInZhbHVlXCIsICRldmVudC50YXJnZXQudmFsdWUpfX19KSxfdm0uX3YoXCIgXCIpLF9jKCdpbnB1dCcse2RpcmVjdGl2ZXM6W3tuYW1lOlwibW9kZWxcIixyYXdOYW1lOlwidi1tb2RlbFwiLHZhbHVlOihjc3NWYXIudmFsdWUpLGV4cHJlc3Npb246XCJjc3NWYXIudmFsdWVcIn1dLGF0dHJzOntcInR5cGVcIjpcInJhbmdlXCIsXCJtaW5cIjpcIjBcIixcIm1heFwiOlwiNTBcIn0sZG9tUHJvcHM6e1widmFsdWVcIjooY3NzVmFyLnZhbHVlKX0sb246e1wiX19yXCI6ZnVuY3Rpb24oJGV2ZW50KXtyZXR1cm4gX3ZtLiRzZXQoY3NzVmFyLCBcInZhbHVlXCIsICRldmVudC50YXJnZXQudmFsdWUpfX19KV0pXTooY3NzVmFyLmZvcm1hdCA9PT0gJ2NvbG9yJyk/W19jKCdkaXYnLHtzdGF0aWNDbGFzczpcImMtaW5wdXRcIn0sW19jKCdpbnB1dCcse2RpcmVjdGl2ZXM6W3tuYW1lOlwibW9kZWxcIixyYXdOYW1lOlwidi1tb2RlbFwiLHZhbHVlOihjc3NWYXIudmFsdWUpLGV4cHJlc3Npb246XCJjc3NWYXIudmFsdWVcIn1dLGF0dHJzOntcInR5cGVcIjpcImNvbG9yXCJ9LGRvbVByb3BzOntcInZhbHVlXCI6KGNzc1Zhci52YWx1ZSl9LG9uOntcImlucHV0XCI6ZnVuY3Rpb24oJGV2ZW50KXtpZigkZXZlbnQudGFyZ2V0LmNvbXBvc2luZylyZXR1cm47X3ZtLiRzZXQoY3NzVmFyLCBcInZhbHVlXCIsICRldmVudC50YXJnZXQudmFsdWUpfX19KV0pXTpbX2MoJ2Rpdicse3N0YXRpY0NsYXNzOlwiYy1pbnB1dFwifSxbX2MoJ2lucHV0Jyx7ZGlyZWN0aXZlczpbe25hbWU6XCJtb2RlbFwiLHJhd05hbWU6XCJ2LW1vZGVsXCIsdmFsdWU6KGNzc1Zhci52YWx1ZSksZXhwcmVzc2lvbjpcImNzc1Zhci52YWx1ZVwifV0sYXR0cnM6e1widHlwZVwiOlwidGV4dFwifSxkb21Qcm9wczp7XCJ2YWx1ZVwiOihjc3NWYXIudmFsdWUpfSxvbjp7XCJpbnB1dFwiOmZ1bmN0aW9uKCRldmVudCl7aWYoJGV2ZW50LnRhcmdldC5jb21wb3NpbmcpcmV0dXJuO192bS4kc2V0KGNzc1ZhciwgXCJ2YWx1ZVwiLCAkZXZlbnQudGFyZ2V0LnZhbHVlKX19fSldKV1dLDIpfSksMCldLDEpOihfdm0uY3VycmVudFRhYiA9PT0gJ0NvbG9ycycpP19jKCdkaXYnLHtzdGF0aWNDbGFzczpcImMtcGFsZXR0ZV9fc2VjdGlvblwifSxbX3ZtLl9tKDEpLF92bS5fdihcIiBcIiksX2MoJ2ZpZWxkc2V0Jyx7c3RhdGljQ2xhc3M6XCJjLWZpZWxkc2V0XCJ9LFtfYygnZHJhZ2dhYmxlJyx7c3RhdGljQ2xhc3M6XCJjLXBhbGV0dGVfX3RhYmxlIGMtZHJhZ2FibGVcIixhdHRyczp7XCJ0YWdcIjpcInRhYmxlXCIsXCJkcmFnZ2FibGVcIjpcIi5jLWRyYWdnYWJsZV9faXRlbVwiLFwiaGFuZGxlXCI6XCIuYy1kcmFnZ2FibGVfX2hhbmRsZXJcIixcImxpc3RcIjpfdm0ucGFsZXR0ZS5jb2xvcnN9fSxfdm0uX2woKF92bS5wYWxldHRlLmNvbG9ycyksZnVuY3Rpb24oY29sb3Ipe3JldHVybiBfYygndHInLHtrZXk6Y29sb3IudWlkLHN0YXRpY0NsYXNzOlwiYy1kcmFnZ2FibGVfX2l0ZW1cIn0sW19jKCd0ZCcse3N0YXRpY0NsYXNzOlwiYy1kcmFnZ2FibGVfX2hhbmRsZXIgYy1kcmFnZ2FibGVfX2hhbmRsZXItLWdyYWJiZXJcIn0pLF92bS5fdihcIiBcIiksX2MoJ3RkJyxbX2MoJ2Rpdicse3N0YXRpY0NsYXNzOlwiYy1maWVsZFwifSxbX2MoJ2lucHV0Jyx7ZGlyZWN0aXZlczpbe25hbWU6XCJtb2RlbFwiLHJhd05hbWU6XCJ2LW1vZGVsXCIsdmFsdWU6KGNvbG9yLm5hbWUpLGV4cHJlc3Npb246XCJjb2xvci5uYW1lXCJ9XSxzdGF0aWNDbGFzczpcImMtaW5wdXRcIixhdHRyczp7XCJ0eXBlXCI6XCJ0ZXh0XCJ9LGRvbVByb3BzOntcInZhbHVlXCI6KGNvbG9yLm5hbWUpfSxvbjp7XCJpbnB1dFwiOmZ1bmN0aW9uKCRldmVudCl7aWYoJGV2ZW50LnRhcmdldC5jb21wb3NpbmcpcmV0dXJuO192bS4kc2V0KGNvbG9yLCBcIm5hbWVcIiwgJGV2ZW50LnRhcmdldC52YWx1ZSl9fX0pLF92bS5fdihcIiBcIiksX2MoJ2lucHV0Jyx7ZGlyZWN0aXZlczpbe25hbWU6XCJtb2RlbFwiLHJhd05hbWU6XCJ2LW1vZGVsXCIsdmFsdWU6KGNvbG9yLmh1ZSksZXhwcmVzc2lvbjpcImNvbG9yLmh1ZVwifV0sc3RhdGljQ2xhc3M6XCJjLWlucHV0XCIsYXR0cnM6e1widHlwZVwiOlwibnVtYmVyXCIsXCJtaW5cIjpcIjBcIixcIm1heFwiOlwiMzYwXCJ9LGRvbVByb3BzOntcInZhbHVlXCI6KGNvbG9yLmh1ZSl9LG9uOntcImlucHV0XCI6ZnVuY3Rpb24oJGV2ZW50KXtpZigkZXZlbnQudGFyZ2V0LmNvbXBvc2luZylyZXR1cm47X3ZtLiRzZXQoY29sb3IsIFwiaHVlXCIsICRldmVudC50YXJnZXQudmFsdWUpfX19KSxfdm0uX3YoXCIgXCIpLF9jKCdpbnB1dCcse2RpcmVjdGl2ZXM6W3tuYW1lOlwibW9kZWxcIixyYXdOYW1lOlwidi1tb2RlbFwiLHZhbHVlOihjb2xvci5odWUpLGV4cHJlc3Npb246XCJjb2xvci5odWVcIn1dLGF0dHJzOntcInR5cGVcIjpcInJhbmdlXCIsXCJtaW5cIjpcIjBcIixcIm1heFwiOlwiMzYwXCJ9LGRvbVByb3BzOntcInZhbHVlXCI6KGNvbG9yLmh1ZSl9LG9uOntcIl9fclwiOmZ1bmN0aW9uKCRldmVudCl7cmV0dXJuIF92bS4kc2V0KGNvbG9yLCBcImh1ZVwiLCAkZXZlbnQudGFyZ2V0LnZhbHVlKX19fSksX3ZtLl92KFwiIFwiKSxfYygnaW5wdXQnLHtkaXJlY3RpdmVzOlt7bmFtZTpcIm1vZGVsXCIscmF3TmFtZTpcInYtbW9kZWxcIix2YWx1ZTooY29sb3Iuc2F0dXJhdGlvbiksZXhwcmVzc2lvbjpcImNvbG9yLnNhdHVyYXRpb25cIn1dLHN0YXRpY0NsYXNzOlwiYy1pbnB1dFwiLGF0dHJzOntcInR5cGVcIjpcIm51bWJlclwiLFwibWluXCI6XCIwXCIsXCJtYXhcIjpcIjEwMFwifSxkb21Qcm9wczp7XCJ2YWx1ZVwiOihjb2xvci5zYXR1cmF0aW9uKX0sb246e1wiaW5wdXRcIjpmdW5jdGlvbigkZXZlbnQpe2lmKCRldmVudC50YXJnZXQuY29tcG9zaW5nKXJldHVybjtfdm0uJHNldChjb2xvciwgXCJzYXR1cmF0aW9uXCIsICRldmVudC50YXJnZXQudmFsdWUpfX19KSxfdm0uX3YoXCIgXCIpLF9jKCdpbnB1dCcse2RpcmVjdGl2ZXM6W3tuYW1lOlwibW9kZWxcIixyYXdOYW1lOlwidi1tb2RlbFwiLHZhbHVlOihjb2xvci5zYXR1cmF0aW9uKSxleHByZXNzaW9uOlwiY29sb3Iuc2F0dXJhdGlvblwifV0sYXR0cnM6e1widHlwZVwiOlwicmFuZ2VcIixcIm1pblwiOlwiMFwiLFwibWF4XCI6XCIxMDBcIn0sZG9tUHJvcHM6e1widmFsdWVcIjooY29sb3Iuc2F0dXJhdGlvbil9LG9uOntcIl9fclwiOmZ1bmN0aW9uKCRldmVudCl7cmV0dXJuIF92bS4kc2V0KGNvbG9yLCBcInNhdHVyYXRpb25cIiwgJGV2ZW50LnRhcmdldC52YWx1ZSl9fX0pLF92bS5fdihcIiBcIiksX2MoJ2lucHV0Jyx7ZGlyZWN0aXZlczpbe25hbWU6XCJtb2RlbFwiLHJhd05hbWU6XCJ2LW1vZGVsXCIsdmFsdWU6KGNvbG9yLmxpZ2h0bmVzcyksZXhwcmVzc2lvbjpcImNvbG9yLmxpZ2h0bmVzc1wifV0sc3RhdGljQ2xhc3M6XCJjLWlucHV0XCIsYXR0cnM6e1widHlwZVwiOlwibnVtYmVyXCIsXCJtaW5cIjpcIjBcIixcIm1heFwiOlwiMTAwXCJ9LGRvbVByb3BzOntcInZhbHVlXCI6KGNvbG9yLmxpZ2h0bmVzcyl9LG9uOntcImlucHV0XCI6ZnVuY3Rpb24oJGV2ZW50KXtpZigkZXZlbnQudGFyZ2V0LmNvbXBvc2luZylyZXR1cm47X3ZtLiRzZXQoY29sb3IsIFwibGlnaHRuZXNzXCIsICRldmVudC50YXJnZXQudmFsdWUpfX19KSxfdm0uX3YoXCIgXCIpLF9jKCdpbnB1dCcse2RpcmVjdGl2ZXM6W3tuYW1lOlwibW9kZWxcIixyYXdOYW1lOlwidi1tb2RlbFwiLHZhbHVlOihjb2xvci5saWdodG5lc3MpLGV4cHJlc3Npb246XCJjb2xvci5saWdodG5lc3NcIn1dLGF0dHJzOntcInR5cGVcIjpcInJhbmdlXCIsXCJtaW5cIjpcIjBcIixcIm1heFwiOlwiMTAwXCJ9LGRvbVByb3BzOntcInZhbHVlXCI6KGNvbG9yLmxpZ2h0bmVzcyl9LG9uOntcIl9fclwiOmZ1bmN0aW9uKCRldmVudCl7cmV0dXJuIF92bS4kc2V0KGNvbG9yLCBcImxpZ2h0bmVzc1wiLCAkZXZlbnQudGFyZ2V0LnZhbHVlKX19fSldKV0pLF92bS5fdihcIiBcIiksX3ZtLl9sKChbOTAsODAsNzAsNjAsNTAsNDAsMzAsMjAsMTBdKSxmdW5jdGlvbihsZXZlbCl7cmV0dXJuIF9jKCd0ZCcse3N0eWxlOih7YmFja2dyb3VuZENvbG9yOiAnY29sb3ItbWl4KGluIHNyZ2IsIHZhcigtLWNvbG9yLScgKyBjb2xvci5uYW1lICsgJyksIGJsYWNrICcrIGxldmVsICsgJyUnfSl9KX0pLF92bS5fdihcIiBcIiksX2MoJ3RkJyksX3ZtLl92KFwiIFwiKSxfdm0uX2woKFswXSksZnVuY3Rpb24obGV2ZWwpe3JldHVybiBfYygndGQnLHtzdHlsZTooe2JhY2tncm91bmRDb2xvcjogJ2NvbG9yLW1peChpbiBzcmdiLCB2YXIoLS1jb2xvci0nICsgY29sb3IubmFtZSArICcpLCB3aGl0ZSAnKyBsZXZlbCArICclJ30pfSl9KSxfdm0uX3YoXCIgXCIpLF9jKCd0ZCcpLF92bS5fdihcIiBcIiksX3ZtLl9sKChbMTAsMjAsMzAsNDAsNTAsNjAsNzAsODAsOTAsOTVdKSxmdW5jdGlvbihsZXZlbCl7cmV0dXJuIF9jKCd0ZCcse3N0eWxlOih7YmFja2dyb3VuZENvbG9yOiAnY29sb3ItbWl4KGluIHNyZ2IsIHZhcigtLWNvbG9yLScgKyBjb2xvci5uYW1lICsgJyksIHdoaXRlICcrIGxldmVsICsgJyUnfSl9KX0pXSwyKX0pLDApLF92bS5fdihcIiBcIiksX2MoJ2J1dHRvbicse3N0YXRpY0NsYXNzOlwiYy1hY3Rpb24gdC1wcmltYXJ5XCIsYXR0cnM6e1widHlwZVwiOlwiYnV0dG9uXCJ9LG9uOntcImNsaWNrXCI6ZnVuY3Rpb24oJGV2ZW50KXtyZXR1cm4gX3ZtLnBhbGV0dGUuYWRkQ29sb3IoKX19fSxbX3ZtLl92KFwiQWRkIGNvbG9yXCIpXSksX3ZtLl92KFwiIFwiKSxfdm0uX20oMildLDEpXSk6KF92bS5jdXJyZW50VGFiID09PSAnVG9uZXMnKT9fYygnZGl2Jyx7c3RhdGljQ2xhc3M6XCJjLXBhbGV0dGVfX3NlY3Rpb25cIn0sW192bS5fbSgzKSxfdm0uX3YoXCIgXCIpLF9jKCdmaWVsZHNldCcse3N0YXRpY0NsYXNzOlwiYy1maWVsZHNldFwifSxbX2MoJ2RyYWdnYWJsZScse3N0YXRpY0NsYXNzOlwiYy1wYWxldHRlX190YWJsZSBjLWRyYWdhYmxlXCIsYXR0cnM6e1widGFnXCI6XCJ0YWJsZVwiLFwiZHJhZ2dhYmxlXCI6XCIuYy1kcmFnZ2FibGVfX2l0ZW1cIixcImhhbmRsZVwiOlwiLmMtZHJhZ2dhYmxlX19oYW5kbGVyXCIsXCJsaXN0XCI6X3ZtLnBhbGV0dGUuY29sb3JUb25lc319LFtfdm0uX2woKF92bS5wYWxldHRlLmNvbG9yVG9uZXMpLGZ1bmN0aW9uKGNvbG9yVG9uZSl7cmV0dXJuIF9jKCd0cicse2tleTpjb2xvclRvbmUudWlkLHN0YXRpY0NsYXNzOlwiYy1kcmFnZ2FibGVfX2l0ZW1cIn0sW19jKCd0ZCcse3N0YXRpY0NsYXNzOlwiYy1kcmFnZ2FibGVfX2hhbmRsZXIgYy1kcmFnZ2FibGVfX2hhbmRsZXItLWdyYWJiZXJcIn0pLF92bS5fdihcIiBcIiksX2MoJ3RkJyxbX2MoJ1NlbGVjdG9yJyx7YXR0cnM6e1widXNlT2JqZWN0XCI6XCJcIixcIm9wdGlvbnNcIjpfdm0ucGFsZXR0ZS5jb2xvcnMsXCJvcHRpb25WYWx1ZVwiOlwibmFtZVwiLFwib3B0aW9uVGV4dFwiOlwibmFtZVwifSxtb2RlbDp7dmFsdWU6KGNvbG9yVG9uZS5jb2xvciksY2FsbGJhY2s6ZnVuY3Rpb24gKCQkdikge192bS4kc2V0KGNvbG9yVG9uZSwgXCJjb2xvclwiLCAkJHYpfSxleHByZXNzaW9uOlwiY29sb3JUb25lLmNvbG9yXCJ9fSksX3ZtLl92KFwiIFwiKSxfYygnaW5wdXQnLHtkaXJlY3RpdmVzOlt7bmFtZTpcIm1vZGVsXCIscmF3TmFtZTpcInYtbW9kZWxcIix2YWx1ZTooY29sb3JUb25lLm5hbWUpLGV4cHJlc3Npb246XCJjb2xvclRvbmUubmFtZVwifV0sc3RhdGljQ2xhc3M6XCJjLWlucHV0XCIsYXR0cnM6e1widHlwZVwiOlwidGV4dFwifSxkb21Qcm9wczp7XCJ2YWx1ZVwiOihjb2xvclRvbmUubmFtZSl9LG9uOntcImlucHV0XCI6ZnVuY3Rpb24oJGV2ZW50KXtpZigkZXZlbnQudGFyZ2V0LmNvbXBvc2luZylyZXR1cm47X3ZtLiRzZXQoY29sb3JUb25lLCBcIm5hbWVcIiwgJGV2ZW50LnRhcmdldC52YWx1ZSl9fX0pXSwxKSxfdm0uX3YoXCIgXCIpLF92bS5fbCgoX3ZtLnBhbGV0dGUuY29sb3JTaGFkb3dzKSxmdW5jdGlvbihjb2xvclNoYWRvdyl7cmV0dXJuIF9jKCd0ZCcse3N0eWxlOihgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tY29sb3ItLSR7Y29sb3JUb25lfSR7Y29sb3JTaGFkb3cubmFtZSAhPT0gJ2RlZmF1bHQnID8gJy0tJyArIGNvbG9yU2hhZG93Lm5hbWUgOiAnJ30pYCl9KX0pXSwyKX0pLF92bS5fdihcIiBcIiksX2MoJ3RyJyx7YXR0cnM6e1wic2xvdFwiOlwiaGVhZGVyXCJ9LHNsb3Q6XCJoZWFkZXJcIn0sW19jKCd0ZCcpLF92bS5fdihcIiBcIiksX2MoJ3RkJyksX3ZtLl92KFwiIFwiKSxfdm0uX2woKF92bS5wYWxldHRlLmNvbG9yU2hhZG93cyksZnVuY3Rpb24oY29sb3JTaGFkb3cpe3JldHVybiBfYygndGQnLFtfdm0uX3YoX3ZtLl9zKGNvbG9yU2hhZG93Lm5hbWUpKV0pfSldLDIpXSwyKSxfdm0uX3YoXCIgXCIpLF9jKCdidXR0b24nLHtzdGF0aWNDbGFzczpcImMtYWN0aW9uIHQtcHJpbWFyeVwiLGF0dHJzOntcInR5cGVcIjpcImJ1dHRvblwifSxvbjp7XCJjbGlja1wiOmZ1bmN0aW9uKCRldmVudCl7cmV0dXJuIF92bS5wYWxldHRlLmFkZENvbG9yVG9uZSgpfX19LFtfdm0uX3YoXCJBZGQgdG9uZVwiKV0pXSwxKV0pOihfdm0uY3VycmVudFRhYiA9PT0gJ1NoYWRvd3MnKT9fYygnZGl2Jyx7c3RhdGljQ2xhc3M6XCJjLXBhbGV0dGVfX3NlY3Rpb25cIn0sW192bS5fbSg0KSxfdm0uX3YoXCIgXCIpLF9jKCdmaWVsZHNldCcse3N0YXRpY0NsYXNzOlwiYy1maWVsZHNldFwifSxbX2MoJ3RhYmxlJyx7c3RhdGljQ2xhc3M6XCJjLXBhbGV0dGVfX3RhYmxlXCJ9LFtfYygndHInLFtfYygndGQnKSxfdm0uX3YoXCIgXCIpLF92bS5fbCgoX3ZtLnBhbGV0dGUuY29sb3JUb25lcyksZnVuY3Rpb24oY29sb3JUb25lKXtyZXR1cm4gX2MoJ3RkJyxbX3ZtLl92KF92bS5fcyhjb2xvclRvbmUubmFtZSkpXSl9KV0sMiksX3ZtLl92KFwiIFwiKSxfdm0uX2woKF92bS5wYWxldHRlLmNvbG9yU2hhZG93cyksZnVuY3Rpb24oY29sb3JTaGFkb3cpe3JldHVybiBfYygndHInLFtfYygndGQnLFtfYygnZGl2Jyx7c3RhdGljQ2xhc3M6XCJjLWZpZWxkXCJ9LFtfYygnbGFiZWwnLFtfdm0uX3YoX3ZtLl9zKGNvbG9yU2hhZG93Lm5hbWUuY2FwaXRhbGl6ZSgpKSldKSxfdm0uX3YoXCIgXCIpLF9jKCdpbnB1dCcse2RpcmVjdGl2ZXM6W3tuYW1lOlwibW9kZWxcIixyYXdOYW1lOlwidi1tb2RlbFwiLHZhbHVlOihjb2xvclNoYWRvdy5odWUpLGV4cHJlc3Npb246XCJjb2xvclNoYWRvdy5odWVcIn1dLHN0YXRpY0NsYXNzOlwiYy1pbnB1dFwiLGF0dHJzOntcInR5cGVcIjpcIm51bWJlclwiLFwibWluXCI6XCItMzYwXCIsXCJtYXhcIjpcIjM2MFwifSxkb21Qcm9wczp7XCJ2YWx1ZVwiOihjb2xvclNoYWRvdy5odWUpfSxvbjp7XCJpbnB1dFwiOmZ1bmN0aW9uKCRldmVudCl7aWYoJGV2ZW50LnRhcmdldC5jb21wb3NpbmcpcmV0dXJuO192bS4kc2V0KGNvbG9yU2hhZG93LCBcImh1ZVwiLCAkZXZlbnQudGFyZ2V0LnZhbHVlKX19fSksX3ZtLl92KFwiIFwiKSxfYygnaW5wdXQnLHtkaXJlY3RpdmVzOlt7bmFtZTpcIm1vZGVsXCIscmF3TmFtZTpcInYtbW9kZWxcIix2YWx1ZTooY29sb3JTaGFkb3cuaHVlKSxleHByZXNzaW9uOlwiY29sb3JTaGFkb3cuaHVlXCJ9XSxhdHRyczp7XCJ0eXBlXCI6XCJyYW5nZVwiLFwibWluXCI6XCIwXCIsXCJtYXhcIjpcIjM2MFwifSxkb21Qcm9wczp7XCJ2YWx1ZVwiOihjb2xvclNoYWRvdy5odWUpfSxvbjp7XCJfX3JcIjpmdW5jdGlvbigkZXZlbnQpe3JldHVybiBfdm0uJHNldChjb2xvclNoYWRvdywgXCJodWVcIiwgJGV2ZW50LnRhcmdldC52YWx1ZSl9fX0pLF92bS5fdihcIiBcIiksX2MoJ2lucHV0Jyx7ZGlyZWN0aXZlczpbe25hbWU6XCJtb2RlbFwiLHJhd05hbWU6XCJ2LW1vZGVsXCIsdmFsdWU6KGNvbG9yU2hhZG93LnNhdHVyYXRpb24pLGV4cHJlc3Npb246XCJjb2xvclNoYWRvdy5zYXR1cmF0aW9uXCJ9XSxzdGF0aWNDbGFzczpcImMtaW5wdXRcIixhdHRyczp7XCJ0eXBlXCI6XCJudW1iZXJcIixcIm1pblwiOlwiLTEwMFwiLFwibWF4XCI6XCIxMDBcIn0sZG9tUHJvcHM6e1widmFsdWVcIjooY29sb3JTaGFkb3cuc2F0dXJhdGlvbil9LG9uOntcImlucHV0XCI6ZnVuY3Rpb24oJGV2ZW50KXtpZigkZXZlbnQudGFyZ2V0LmNvbXBvc2luZylyZXR1cm47X3ZtLiRzZXQoY29sb3JTaGFkb3csIFwic2F0dXJhdGlvblwiLCAkZXZlbnQudGFyZ2V0LnZhbHVlKX19fSksX3ZtLl92KFwiIFwiKSxfYygnaW5wdXQnLHtkaXJlY3RpdmVzOlt7bmFtZTpcIm1vZGVsXCIscmF3TmFtZTpcInYtbW9kZWxcIix2YWx1ZTooY29sb3JTaGFkb3cuc2F0dXJhdGlvbiksZXhwcmVzc2lvbjpcImNvbG9yU2hhZG93LnNhdHVyYXRpb25cIn1dLGF0dHJzOntcInR5cGVcIjpcInJhbmdlXCIsXCJtaW5cIjpcIi0xMDBcIixcIm1heFwiOlwiMTAwXCJ9LGRvbVByb3BzOntcInZhbHVlXCI6KGNvbG9yU2hhZG93LnNhdHVyYXRpb24pfSxvbjp7XCJfX3JcIjpmdW5jdGlvbigkZXZlbnQpe3JldHVybiBfdm0uJHNldChjb2xvclNoYWRvdywgXCJzYXR1cmF0aW9uXCIsICRldmVudC50YXJnZXQudmFsdWUpfX19KSxfdm0uX3YoXCIgXCIpLF9jKCdpbnB1dCcse2RpcmVjdGl2ZXM6W3tuYW1lOlwibW9kZWxcIixyYXdOYW1lOlwidi1tb2RlbFwiLHZhbHVlOihjb2xvclNoYWRvdy5saWdodG5lc3MpLGV4cHJlc3Npb246XCJjb2xvclNoYWRvdy5saWdodG5lc3NcIn1dLHN0YXRpY0NsYXNzOlwiYy1pbnB1dFwiLGF0dHJzOntcInR5cGVcIjpcIm51bWJlclwiLFwibWluXCI6XCItMTAwXCIsXCJtYXhcIjpcIjEwMFwifSxkb21Qcm9wczp7XCJ2YWx1ZVwiOihjb2xvclNoYWRvdy5saWdodG5lc3MpfSxvbjp7XCJpbnB1dFwiOmZ1bmN0aW9uKCRldmVudCl7aWYoJGV2ZW50LnRhcmdldC5jb21wb3NpbmcpcmV0dXJuO192bS4kc2V0KGNvbG9yU2hhZG93LCBcImxpZ2h0bmVzc1wiLCAkZXZlbnQudGFyZ2V0LnZhbHVlKX19fSksX3ZtLl92KFwiIFwiKSxfYygnaW5wdXQnLHtkaXJlY3RpdmVzOlt7bmFtZTpcIm1vZGVsXCIscmF3TmFtZTpcInYtbW9kZWxcIix2YWx1ZTooY29sb3JTaGFkb3cubGlnaHRuZXNzKSxleHByZXNzaW9uOlwiY29sb3JTaGFkb3cubGlnaHRuZXNzXCJ9XSxhdHRyczp7XCJ0eXBlXCI6XCJyYW5nZVwiLFwibWluXCI6XCItMTAwXCIsXCJtYXhcIjpcIjEwMFwifSxkb21Qcm9wczp7XCJ2YWx1ZVwiOihjb2xvclNoYWRvdy5saWdodG5lc3MpfSxvbjp7XCJfX3JcIjpmdW5jdGlvbigkZXZlbnQpe3JldHVybiBfdm0uJHNldChjb2xvclNoYWRvdywgXCJsaWdodG5lc3NcIiwgJGV2ZW50LnRhcmdldC52YWx1ZSl9fX0pXSldKSxfdm0uX3YoXCIgXCIpLF92bS5fbCgoX3ZtLnBhbGV0dGUuY29sb3JUb25lcyksZnVuY3Rpb24oY29sb3JUb25lKXtyZXR1cm4gX2MoJ3RkJyx7c3R5bGU6KGBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1jb2xvci0tJHtjb2xvclRvbmV9JHtjb2xvclNoYWRvdy5uYW1lICE9PSAnZGVmYXVsdCcgPyAnLS0nICsgY29sb3JTaGFkb3cubmFtZSA6ICcnfSlgKX0pfSldLDIpfSldLDIpXSldKTpfdm0uX2UoKSxfdm0uX3YoXCIgXCIpLF9jKCdtZW51Jyx7c3RhdGljQ2xhc3M6XCJjLXRhYnMgYy10YWJzLS1ib3R0b21cIn0sW19jKCdsaScsW19jKCdidXR0b24nLHtzdGF0aWNDbGFzczpcImMtYWN0aW9uXCIsYXR0cnM6e1widHlwZVwiOlwiYnV0dG9uXCIsXCJhY3RpdmVcIjpfdm0uY3VycmVudFRhYiA9PT0gJ0NTU1ZhcnMnfSxvbjp7XCJjbGlja1wiOmZ1bmN0aW9uKCRldmVudCl7X3ZtLmN1cnJlbnRUYWIgPSAnQ1NTVmFycyd9fX0sW192bS5fdihcIkNTUyB2YXJzXCIpXSldKSxfdm0uX3YoXCIgXCIpLF9jKCdsaScsW19jKCdidXR0b24nLHtzdGF0aWNDbGFzczpcImMtYWN0aW9uXCIsYXR0cnM6e1widHlwZVwiOlwiYnV0dG9uXCIsXCJhY3RpdmVcIjpfdm0uY3VycmVudFRhYiA9PT0gJ0NvbG9ycyd9LG9uOntcImNsaWNrXCI6ZnVuY3Rpb24oJGV2ZW50KXtfdm0uY3VycmVudFRhYiA9ICdDb2xvcnMnfX19LFtfdm0uX3YoXCJDb2xvcnNcIildKV0pLF92bS5fdihcIiBcIiksX2MoJ2xpJyxbX2MoJ2J1dHRvbicse3N0YXRpY0NsYXNzOlwiYy1hY3Rpb25cIixhdHRyczp7XCJ0eXBlXCI6XCJidXR0b25cIixcImFjdGl2ZVwiOl92bS5jdXJyZW50VGFiID09PSAnVG9uZXMnfSxvbjp7XCJjbGlja1wiOmZ1bmN0aW9uKCRldmVudCl7X3ZtLmN1cnJlbnRUYWIgPSAnVG9uZXMnfX19LFtfdm0uX3YoXCJUb25lc1wiKV0pXSksX3ZtLl92KFwiIFwiKSxfYygnbGknLFtfYygnYnV0dG9uJyx7c3RhdGljQ2xhc3M6XCJjLWFjdGlvblwiLGF0dHJzOntcInR5cGVcIjpcImJ1dHRvblwiLFwiYWN0aXZlXCI6X3ZtLmN1cnJlbnRUYWIgPT09ICdTaGFkb3dzJ30sb246e1wiY2xpY2tcIjpmdW5jdGlvbigkZXZlbnQpe192bS5jdXJyZW50VGFiID0gJ1NoYWRvd3MnfX19LFtfdm0uX3YoXCJTaGFkb3dzXCIpXSldKV0pXSk6X3ZtLl9lKClcbn1cbnZhciBzdGF0aWNSZW5kZXJGbnMgPSBbZnVuY3Rpb24gKCl7dmFyIF92bT10aGlzLF9jPV92bS5fc2VsZi5fYztyZXR1cm4gX2MoJ2Rpdicse3N0YXRpY0NsYXNzOlwiYy1zY2hlbWVfX2hlYWRlclwifSxbX2MoJ2Rpdicse3N0YXRpY0NsYXNzOlwiYy1zY2hlbWVfX3RpdGxlXCJ9LFtfYygnaDInLFtfdm0uX3YoXCJDU1MgdmFyaWFibGVzXCIpXSldKSxfdm0uX3YoXCIgXCIpLF9jKCdkaXYnLHtzdGF0aWNDbGFzczpcImMtc2NoZW1lX190b29sYmFyXCJ9KV0pXG59LGZ1bmN0aW9uICgpe3ZhciBfdm09dGhpcyxfYz1fdm0uX3NlbGYuX2M7cmV0dXJuIF9jKCdkaXYnLHtzdGF0aWNDbGFzczpcImMtc2NoZW1lX19oZWFkZXJcIn0sW19jKCdkaXYnLHtzdGF0aWNDbGFzczpcImMtc2NoZW1lX190aXRsZVwifSxbX2MoJ2gyJyxbX3ZtLl92KFwiQ29sb3JzXCIpXSldKSxfdm0uX3YoXCIgXCIpLF9jKCdkaXYnLHtzdGF0aWNDbGFzczpcImMtc2NoZW1lX190b29sYmFyXCJ9KV0pXG59LGZ1bmN0aW9uICgpe3ZhciBfdm09dGhpcyxfYz1fdm0uX3NlbGYuX2M7cmV0dXJuIF9jKCdkaXYnLHtzdGF0aWNDbGFzczpcImZsZXgtcm93XCJ9LFtfYygnZGl2Jyx7c3RhdGljQ2xhc3M6XCJjLXBhbGV0dGVfX3doZWVsLW93blwifSksX3ZtLl92KFwiIFwiKSxfYygnZGl2Jyx7c3RhdGljQ2xhc3M6XCJjLXBhbGV0dGVfX3doZWVsLWJhc2VcIn0pXSlcbn0sZnVuY3Rpb24gKCl7dmFyIF92bT10aGlzLF9jPV92bS5fc2VsZi5fYztyZXR1cm4gX2MoJ2Rpdicse3N0YXRpY0NsYXNzOlwiYy1zY2hlbWVfX2hlYWRlclwifSxbX2MoJ2Rpdicse3N0YXRpY0NsYXNzOlwiYy1zY2hlbWVfX3RpdGxlXCJ9LFtfYygnaDInLFtfdm0uX3YoXCJUb25lc1wiKV0pXSksX3ZtLl92KFwiIFwiKSxfYygnZGl2Jyx7c3RhdGljQ2xhc3M6XCJjLXNjaGVtZV9fdG9vbGJhclwifSldKVxufSxmdW5jdGlvbiAoKXt2YXIgX3ZtPXRoaXMsX2M9X3ZtLl9zZWxmLl9jO3JldHVybiBfYygnZGl2Jyx7c3RhdGljQ2xhc3M6XCJjLXNjaGVtZV9faGVhZGVyXCJ9LFtfYygnZGl2Jyx7c3RhdGljQ2xhc3M6XCJjLXNjaGVtZV9fdGl0bGVcIn0sW19jKCdoMicsW192bS5fdihcIlNoYWRvd3NcIildKV0pLF92bS5fdihcIiBcIiksX2MoJ2Rpdicse3N0YXRpY0NsYXNzOlwiYy1zY2hlbWVfX3Rvb2xiYXJcIn0pXSlcbn1dXG5cbmV4cG9ydCB7IHJlbmRlciwgc3RhdGljUmVuZGVyRm5zIH0iLCJleHBvcnQgKiBmcm9tIFwiLSEuLi8uLi9ub2RlX21vZHVsZXMvYmFiZWwtbG9hZGVyL2xpYi9pbmRleC5qcyEuLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvbG9hZGVycy90ZW1wbGF0ZUxvYWRlci5qcz8/cnVsZVNldFsxXS5ydWxlc1syXSEuLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvaW5kZXguanM/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL1BhbGV0dGUudnVlP3Z1ZSZ0eXBlPXRlbXBsYXRlJmlkPTE0ZjU1ZGE1XCIiLCI8dGVtcGxhdGU+XG4gIDwhLS0gYy1wYWxldHRlLS1mdWxsIC0tPlxuICA8ZGl2IHYtaWY9XCJwYWxldHRlLmFjdGl2ZVwiIGNsYXNzPVwiYy1wYWxldHRlXCI+XG4gICAgPGRpdiB2LWlmPVwiY3VycmVudFRhYiA9PT0gJ0NTU1ZhcnMnXCIgY2xhc3M9XCJjLXBhbGV0dGVfX3NlY3Rpb25cIj5cbiAgICAgIDxkaXYgY2xhc3M9XCJjLXNjaGVtZV9faGVhZGVyXCI+XG4gICAgICAgIDxkaXYgY2xhc3M9XCJjLXNjaGVtZV9fdGl0bGVcIj5cbiAgICAgICAgICA8aDI+Q1NTIHZhcmlhYmxlczwvaDI+XG4gICAgICAgIDwvZGl2PlxuICAgICAgICA8ZGl2IGNsYXNzPVwiYy1zY2hlbWVfX3Rvb2xiYXJcIj5cbiAgICAgICAgPC9kaXY+XG4gICAgICA8L2Rpdj5cblxuICAgICAgPGRyYWdnYWJsZSB0YWc9XCJmaWVsZHNldFwiIGNsYXNzPVwiYy1maWVsZHNldCBjLXBhbGV0dGVfX3RhYmxlIGMtZHJhZ2FibGVcIiBkcmFnZ2FibGU9XCIuYy1kcmFnZ2FibGVfX2l0ZW1cIiBoYW5kbGU9XCIuYy1kcmFnZ2FibGVfX2hhbmRsZXJcIiA6bGlzdD1cInBhbGV0dGUuYmFzZUNTU1ZhcnNcIj5cbiAgICAgICAgPGRpdiBjbGFzcz1cImMtZmllbGRzZXRfX2l0ZW0gYy1kcmFnZ2FibGVfX2l0ZW1cIiB2LWZvcj1cImNzc1ZhciBpbiBwYWxldHRlLmJhc2VDU1NWYXJzXCI+XG4gICAgICAgICAgPGxhYmVsPjxzcGFuIGNsYXNzPVwiYy1kcmFnZ2FibGVfX2hhbmRsZXIgYy1kcmFnZ2FibGVfX2hhbmRsZXItLWdyYWJiZXJcIj48L3NwYW4+e3sgY3NzVmFyLm5hbWUudG9TcGFjZXMoKS5jYXBpdGFsaXplKCkgfX08L2xhYmVsPlxuICAgICAgICAgIDx0ZW1wbGF0ZSB2LWlmPVwiY3NzVmFyLmZvcm1hdCA9PT0gJ3B4J1wiPlxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cImMtZmllbGRcIj5cbiAgICAgICAgICAgICAgPGlucHV0IHR5cGU9XCJudW1iZXJcIiBjbGFzcz1cImMtaW5wdXRcIiB2LW1vZGVsPVwiY3NzVmFyLnZhbHVlXCIgbWluPVwiMFwiIG1heD1cIjUwXCI+XG4gICAgICAgICAgICAgIDxpbnB1dCB0eXBlPVwicmFuZ2VcIiB2LW1vZGVsPVwiY3NzVmFyLnZhbHVlXCIgbWluPVwiMFwiIG1heD1cIjUwXCI+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICA8L3RlbXBsYXRlPlxuICAgICAgICAgIDx0ZW1wbGF0ZSB2LWVsc2UtaWY9XCJjc3NWYXIuZm9ybWF0ID09PSAnY29sb3InXCI+XG4gICAgICAgICAgICA8ZGl2IGNsYXNzPVwiYy1pbnB1dFwiPjxpbnB1dCB0eXBlPVwiY29sb3JcIiB2LW1vZGVsPVwiY3NzVmFyLnZhbHVlXCI+PC9kaXY+XG4gICAgICAgICAgPC90ZW1wbGF0ZT5cbiAgICAgICAgICA8dGVtcGxhdGUgdi1lbHNlPlxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cImMtaW5wdXRcIj48aW5wdXQgdHlwZT1cInRleHRcIiB2LW1vZGVsPVwiY3NzVmFyLnZhbHVlXCI+PC9kaXY+XG4gICAgICAgICAgPC90ZW1wbGF0ZT5cbiAgICAgICAgPC9kaXY+XG4gICAgICA8L2RyYWdnYWJsZT5cbiAgICA8L2Rpdj5cbiAgICA8ZGl2IHYtZWxzZS1pZj1cImN1cnJlbnRUYWIgPT09ICdDb2xvcnMnXCIgY2xhc3M9XCJjLXBhbGV0dGVfX3NlY3Rpb25cIj5cbiAgICAgIDxkaXYgY2xhc3M9XCJjLXNjaGVtZV9faGVhZGVyXCI+XG4gICAgICAgIDxkaXYgY2xhc3M9XCJjLXNjaGVtZV9fdGl0bGVcIj5cbiAgICAgICAgICA8aDI+Q29sb3JzPC9oMj5cbiAgICAgICAgPC9kaXY+XG4gICAgICAgIDxkaXYgY2xhc3M9XCJjLXNjaGVtZV9fdG9vbGJhclwiPlxuICAgICAgICA8L2Rpdj5cbiAgICAgIDwvZGl2PlxuXG4gICAgICA8ZmllbGRzZXQgY2xhc3M9XCJjLWZpZWxkc2V0XCI+XG4gICAgICAgIDwhLS0gPFNlbGVjdG9yIHVzZU9iamVjdCA6b3B0aW9ucz1cInBhbGV0dGUuY29sb3JzXCIgbXVsdGlwbGUgdi1tb2RlbD1cInBhbGV0dGUuY29sb3JzXCIgb3B0aW9uVmFsdWU9XCJuYW1lXCIgb3B0aW9uVGV4dD1cIm5hbWVcIiAvPiAtLT5cbiAgICAgICAgPGRyYWdnYWJsZSB0YWc9XCJ0YWJsZVwiIGNsYXNzPVwiYy1wYWxldHRlX190YWJsZSBjLWRyYWdhYmxlXCIgZHJhZ2dhYmxlPVwiLmMtZHJhZ2dhYmxlX19pdGVtXCIgaGFuZGxlPVwiLmMtZHJhZ2dhYmxlX19oYW5kbGVyXCIgOmxpc3Q9XCJwYWxldHRlLmNvbG9yc1wiPlxuICAgICAgICAgIDx0ciB2LWZvcj1cImNvbG9yIGluIHBhbGV0dGUuY29sb3JzXCIgOmtleT1cImNvbG9yLnVpZFwiIGNsYXNzPVwiYy1kcmFnZ2FibGVfX2l0ZW1cIj5cbiAgICAgICAgICAgIDx0ZCBjbGFzcz1cImMtZHJhZ2dhYmxlX19oYW5kbGVyIGMtZHJhZ2dhYmxlX19oYW5kbGVyLS1ncmFiYmVyXCI+PC90ZD5cbiAgICAgICAgICAgIDx0ZD5cbiAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImMtZmllbGRcIj5cbiAgICAgICAgICAgICAgICA8IS0tIDxsYWJlbD57eyBjb2xvci5uYW1lLmNhcGl0YWxpemUoKSB9fTwvbGFiZWw+IC0tPlxuICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPVwidGV4dFwiIGNsYXNzPVwiYy1pbnB1dFwiIHYtbW9kZWw9XCJjb2xvci5uYW1lXCI+XG4gICAgICAgICAgICAgICAgPCEtLSA8aW5wdXQgdHlwZT1cImNoZWNrYm94XCIgdi1tb2RlbD1cImNvbG9yLnRvbmVkXCI+IC0tPlxuICAgICAgICAgICAgICAgIDwhLS0gPGlucHV0IHR5cGU9XCJ0ZXh0XCIgY2xhc3M9XCJjLWlucHV0XCIgdi1tb2RlbD1cImNvbG9yLnRvbmVcIiA6cGxhY2Vob2xkZXI9XCJjb2xvci5uYW1lXCI+IC0tPlxuICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPVwibnVtYmVyXCIgY2xhc3M9XCJjLWlucHV0XCIgdi1tb2RlbD1cImNvbG9yLmh1ZVwiIG1pbj1cIjBcIiBtYXg9XCIzNjBcIj5cbiAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT1cInJhbmdlXCIgdi1tb2RlbD1cImNvbG9yLmh1ZVwiIG1pbj1cIjBcIiBtYXg9XCIzNjBcIj5cbiAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT1cIm51bWJlclwiY2xhc3M9XCJjLWlucHV0XCIgdi1tb2RlbD1cImNvbG9yLnNhdHVyYXRpb25cIiBtaW49XCIwXCIgbWF4PVwiMTAwXCI+XG4gICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9XCJyYW5nZVwiIHYtbW9kZWw9XCJjb2xvci5zYXR1cmF0aW9uXCIgbWluPVwiMFwiIG1heD1cIjEwMFwiPlxuICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPVwibnVtYmVyXCIgY2xhc3M9XCJjLWlucHV0XCIgdi1tb2RlbD1cImNvbG9yLmxpZ2h0bmVzc1wiIG1pbj1cIjBcIiBtYXg9XCIxMDBcIj5cbiAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT1cInJhbmdlXCIgdi1tb2RlbD1cImNvbG9yLmxpZ2h0bmVzc1wiIG1pbj1cIjBcIiBtYXg9XCIxMDBcIj5cbiAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICA8L3RkPlxuICAgICAgICAgICAgPHRkXG4gICAgICAgICAgICAgIHYtZm9yPVwibGV2ZWwgaW4gWzkwLDgwLDcwLDYwLDUwLDQwLDMwLDIwLDEwXVwiXG4gICAgICAgICAgICAgIDpzdHlsZT1cIntiYWNrZ3JvdW5kQ29sb3I6ICdjb2xvci1taXgoaW4gc3JnYiwgdmFyKC0tY29sb3ItJyArIGNvbG9yLm5hbWUgKyAnKSwgYmxhY2sgJysgbGV2ZWwgKyAnJSd9XCJcbiAgICAgICAgICAgID48L3RkPlxuICAgICAgICAgICAgPHRkPjwvdGQ+XG4gICAgICAgICAgICA8dGRcbiAgICAgICAgICAgICAgdi1mb3I9XCJsZXZlbCBpbiBbMF1cIlxuICAgICAgICAgICAgICA6c3R5bGU9XCJ7YmFja2dyb3VuZENvbG9yOiAnY29sb3ItbWl4KGluIHNyZ2IsIHZhcigtLWNvbG9yLScgKyBjb2xvci5uYW1lICsgJyksIHdoaXRlICcrIGxldmVsICsgJyUnfVwiXG4gICAgICAgICAgICA+PC90ZD5cbiAgICAgICAgICAgIDx0ZD48L3RkPlxuICAgICAgICAgICAgPHRkXG4gICAgICAgICAgICAgIHYtZm9yPVwibGV2ZWwgaW4gWzEwLDIwLDMwLDQwLDUwLDYwLDcwLDgwLDkwLDk1XVwiXG4gICAgICAgICAgICAgIDpzdHlsZT1cIntiYWNrZ3JvdW5kQ29sb3I6ICdjb2xvci1taXgoaW4gc3JnYiwgdmFyKC0tY29sb3ItJyArIGNvbG9yLm5hbWUgKyAnKSwgd2hpdGUgJysgbGV2ZWwgKyAnJSd9XCJcbiAgICAgICAgICAgID48L3RkPlxuICAgICAgICAgIDwvdHI+XG4gICAgICAgIDwvZHJhZ2dhYmxlPlxuICAgICAgICA8YnV0dG9uIHR5cGU9XCJidXR0b25cIiBjbGFzcz1cImMtYWN0aW9uIHQtcHJpbWFyeVwiIEBjbGljaz1cInBhbGV0dGUuYWRkQ29sb3IoKVwiPkFkZCBjb2xvcjwvYnV0dG9uPlxuICAgICAgICA8ZGl2IGNsYXNzPVwiZmxleC1yb3dcIj5cbiAgICAgICAgICA8ZGl2IGNsYXNzPVwiYy1wYWxldHRlX193aGVlbC1vd25cIj48L2Rpdj5cbiAgICAgICAgICA8ZGl2IGNsYXNzPVwiYy1wYWxldHRlX193aGVlbC1iYXNlXCI+PC9kaXY+XG4gICAgICAgIDwvZGl2PlxuICAgICAgPC9maWVsZHNldD5cbiAgICA8L2Rpdj5cbiAgICA8ZGl2IHYtZWxzZS1pZj1cImN1cnJlbnRUYWIgPT09ICdUb25lcydcIiBjbGFzcz1cImMtcGFsZXR0ZV9fc2VjdGlvblwiPlxuICAgICAgPGRpdiBjbGFzcz1cImMtc2NoZW1lX19oZWFkZXJcIj5cbiAgICAgICAgPGRpdiBjbGFzcz1cImMtc2NoZW1lX190aXRsZVwiPlxuICAgICAgICAgIDxoMj5Ub25lczwvaDI+XG4gICAgICAgIDwvZGl2PlxuICAgICAgICA8ZGl2IGNsYXNzPVwiYy1zY2hlbWVfX3Rvb2xiYXJcIj5cbiAgICAgICAgPC9kaXY+XG4gICAgICA8L2Rpdj5cbiAgICAgIDxmaWVsZHNldCBjbGFzcz1cImMtZmllbGRzZXRcIj5cbiAgICAgICAgPGRyYWdnYWJsZSB0YWc9XCJ0YWJsZVwiIGNsYXNzPVwiYy1wYWxldHRlX190YWJsZSBjLWRyYWdhYmxlXCIgZHJhZ2dhYmxlPVwiLmMtZHJhZ2dhYmxlX19pdGVtXCIgaGFuZGxlPVwiLmMtZHJhZ2dhYmxlX19oYW5kbGVyXCIgOmxpc3Q9XCJwYWxldHRlLmNvbG9yVG9uZXNcIj5cbiAgICAgICAgICA8dHIgdi1mb3I9XCJjb2xvclRvbmUgaW4gcGFsZXR0ZS5jb2xvclRvbmVzXCIgOmtleT1cImNvbG9yVG9uZS51aWRcIiBjbGFzcz1cImMtZHJhZ2dhYmxlX19pdGVtXCI+XG4gICAgICAgICAgICA8dGQgY2xhc3M9XCJjLWRyYWdnYWJsZV9faGFuZGxlciBjLWRyYWdnYWJsZV9faGFuZGxlci0tZ3JhYmJlclwiPjwvdGQ+XG4gICAgICAgICAgICA8dGQ+XG4gICAgICAgICAgICAgIDxTZWxlY3RvciB1c2VPYmplY3QgOm9wdGlvbnM9XCJwYWxldHRlLmNvbG9yc1wiIHYtbW9kZWw9XCJjb2xvclRvbmUuY29sb3JcIiBvcHRpb25WYWx1ZT1cIm5hbWVcIiBvcHRpb25UZXh0PVwibmFtZVwiLz5cbiAgICAgICAgICAgICAgPGlucHV0IHR5cGU9XCJ0ZXh0XCIgY2xhc3M9XCJjLWlucHV0XCIgdi1tb2RlbD1cImNvbG9yVG9uZS5uYW1lXCI+XG4gICAgICAgICAgICA8L3RkPlxuICAgICAgICAgICAgPHRkXG4gICAgICAgICAgICAgIHYtZm9yPVwiY29sb3JTaGFkb3cgaW4gcGFsZXR0ZS5jb2xvclNoYWRvd3NcIlxuICAgICAgICAgICAgICA6c3R5bGU9XCJgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tY29sb3ItLSR7Y29sb3JUb25lfSR7Y29sb3JTaGFkb3cubmFtZSAhPT0gJ2RlZmF1bHQnID8gJy0tJyArIGNvbG9yU2hhZG93Lm5hbWUgOiAnJ30pYFwiXG4gICAgICAgICAgICA+PC90ZD5cbiAgICAgICAgICA8L3RyPlxuICAgICAgICAgIDx0ciBzbG90PVwiaGVhZGVyXCI+XG4gICAgICAgICAgICA8dGQ+PC90ZD5cbiAgICAgICAgICAgIDx0ZD48L3RkPlxuICAgICAgICAgICAgPHRkIHYtZm9yPVwiY29sb3JTaGFkb3cgaW4gcGFsZXR0ZS5jb2xvclNoYWRvd3NcIj57eyBjb2xvclNoYWRvdy5uYW1lIH19PC90ZD5cbiAgICAgICAgICA8L3RyPlxuICAgICAgICA8L2RyYWdnYWJsZT5cbiAgICAgICAgPGJ1dHRvbiB0eXBlPVwiYnV0dG9uXCIgY2xhc3M9XCJjLWFjdGlvbiB0LXByaW1hcnlcIiBAY2xpY2s9XCJwYWxldHRlLmFkZENvbG9yVG9uZSgpXCI+QWRkIHRvbmU8L2J1dHRvbj5cbiAgICAgIDwvZmllbGRzZXQ+XG4gICAgPC9kaXY+XG4gICAgPGRpdiB2LWVsc2UtaWY9XCJjdXJyZW50VGFiID09PSAnU2hhZG93cydcIiBjbGFzcz1cImMtcGFsZXR0ZV9fc2VjdGlvblwiPlxuICAgICAgPGRpdiBjbGFzcz1cImMtc2NoZW1lX19oZWFkZXJcIj5cbiAgICAgICAgPGRpdiBjbGFzcz1cImMtc2NoZW1lX190aXRsZVwiPlxuICAgICAgICAgIDxoMj5TaGFkb3dzPC9oMj5cbiAgICAgICAgPC9kaXY+XG4gICAgICAgIDxkaXYgY2xhc3M9XCJjLXNjaGVtZV9fdG9vbGJhclwiPlxuICAgICAgICA8L2Rpdj5cbiAgICAgIDwvZGl2PlxuXG4gICAgICA8ZmllbGRzZXQgY2xhc3M9XCJjLWZpZWxkc2V0XCI+XG4gICAgICAgIDx0YWJsZSBjbGFzcz1cImMtcGFsZXR0ZV9fdGFibGVcIj5cbiAgICAgICAgICA8dHI+XG4gICAgICAgICAgICA8dGQ+PC90ZD5cbiAgICAgICAgICAgIDx0ZCB2LWZvcj1cImNvbG9yVG9uZSBpbiBwYWxldHRlLmNvbG9yVG9uZXNcIj57eyBjb2xvclRvbmUubmFtZSB9fTwvdGQ+XG4gICAgICAgICAgPC90cj5cbiAgICAgICAgICA8dHIgdi1mb3I9XCJjb2xvclNoYWRvdyBpbiBwYWxldHRlLmNvbG9yU2hhZG93c1wiPlxuICAgICAgICAgICAgPHRkPlxuICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiYy1maWVsZFwiPlxuICAgICAgICAgICAgICAgIDxsYWJlbD57eyBjb2xvclNoYWRvdy5uYW1lLmNhcGl0YWxpemUoKSB9fTwvbGFiZWw+XG4gICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9XCJudW1iZXJcIiBjbGFzcz1cImMtaW5wdXRcIiB2LW1vZGVsPVwiY29sb3JTaGFkb3cuaHVlXCIgbWluPVwiLTM2MFwiIG1heD1cIjM2MFwiPlxuICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPVwicmFuZ2VcIiB2LW1vZGVsPVwiY29sb3JTaGFkb3cuaHVlXCIgbWluPVwiMFwiIG1heD1cIjM2MFwiPlxuICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPVwibnVtYmVyXCJjbGFzcz1cImMtaW5wdXRcIiB2LW1vZGVsPVwiY29sb3JTaGFkb3cuc2F0dXJhdGlvblwiIG1pbj1cIi0xMDBcIiBtYXg9XCIxMDBcIj5cbiAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT1cInJhbmdlXCIgdi1tb2RlbD1cImNvbG9yU2hhZG93LnNhdHVyYXRpb25cIiBtaW49XCItMTAwXCIgbWF4PVwiMTAwXCI+XG4gICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9XCJudW1iZXJcIiBjbGFzcz1cImMtaW5wdXRcIiB2LW1vZGVsPVwiY29sb3JTaGFkb3cubGlnaHRuZXNzXCIgbWluPVwiLTEwMFwiIG1heD1cIjEwMFwiPlxuICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPVwicmFuZ2VcIiB2LW1vZGVsPVwiY29sb3JTaGFkb3cubGlnaHRuZXNzXCIgbWluPVwiLTEwMFwiIG1heD1cIjEwMFwiPlxuICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgIDwvdGQ+XG4gICAgICAgICAgICA8dGRcbiAgICAgICAgICAgICAgdi1mb3I9XCJjb2xvclRvbmUgaW4gcGFsZXR0ZS5jb2xvclRvbmVzXCJcbiAgICAgICAgICAgICAgOnN0eWxlPVwiYGJhY2tncm91bmQtY29sb3I6IHZhcigtLWNvbG9yLS0ke2NvbG9yVG9uZX0ke2NvbG9yU2hhZG93Lm5hbWUgIT09ICdkZWZhdWx0JyA/ICctLScgKyBjb2xvclNoYWRvdy5uYW1lIDogJyd9KWBcIlxuICAgICAgICAgICAgPjwvdGQ+XG4gICAgICAgICAgPC90cj5cbiAgICAgICAgPC90YWJsZT5cbiAgICAgIDwvZmllbGRzZXQ+XG4gICAgPC9kaXY+XG4gICAgPCEtLVxuICAgIDxkaXYgdi1lbHNlLWlmPVwiY3VycmVudFRhYiA9PT0gJ0NvbXBvbmVudHMnXCIgY2xhc3M9XCJjLXBhbGV0dGVfX3NlY3Rpb25cIj5cbiAgICAgIDxkaXYgY2xhc3M9XCJjLXNjaGVtZV9faGVhZGVyXCI+XG4gICAgICAgIDxkaXYgY2xhc3M9XCJjLXNjaGVtZV9fdGl0bGVcIj5cbiAgICAgICAgICA8aDI+Q29tcG9uZW50czwvaDI+XG4gICAgICAgIDwvZGl2PlxuICAgICAgICA8ZGl2IGNsYXNzPVwiYy1zY2hlbWVfX3Rvb2xiYXJcIj5cbiAgICAgICAgPC9kaXY+XG4gICAgICA8L2Rpdj5cbiAgICAgIDxmaWVsZHNldCBjbGFzcz1cImMtZmllbGRzZXRcIj5Db21wb25lbnRzPC9maWVsZHNldD5cbiAgICA8L2Rpdj5cbiAgICAtLT5cbiAgICA8bWVudSBjbGFzcz1cImMtdGFicyBjLXRhYnMtLWJvdHRvbVwiPlxuICAgICAgPGxpPjxidXR0b24gdHlwZT1cImJ1dHRvblwiIGNsYXNzPVwiYy1hY3Rpb25cIiBAY2xpY2s9XCJjdXJyZW50VGFiID0gJ0NTU1ZhcnMnXCIgOmFjdGl2ZT1cImN1cnJlbnRUYWIgPT09ICdDU1NWYXJzJ1wiPkNTUyB2YXJzPC9idXR0b24+PC9saT5cbiAgICAgIDxsaT48YnV0dG9uIHR5cGU9XCJidXR0b25cIiBjbGFzcz1cImMtYWN0aW9uXCIgQGNsaWNrPVwiY3VycmVudFRhYiA9ICdDb2xvcnMnXCIgOmFjdGl2ZT1cImN1cnJlbnRUYWIgPT09ICdDb2xvcnMnXCI+Q29sb3JzPC9idXR0b24+PC9saT5cbiAgICAgIDxsaT48YnV0dG9uIHR5cGU9XCJidXR0b25cIiBjbGFzcz1cImMtYWN0aW9uXCIgQGNsaWNrPVwiY3VycmVudFRhYiA9ICdUb25lcydcIiA6YWN0aXZlPVwiY3VycmVudFRhYiA9PT0gJ1RvbmVzJ1wiPlRvbmVzPC9idXR0b24+PC9saT5cbiAgICAgIDxsaT48YnV0dG9uIHR5cGU9XCJidXR0b25cIiBjbGFzcz1cImMtYWN0aW9uXCIgQGNsaWNrPVwiY3VycmVudFRhYiA9ICdTaGFkb3dzJ1wiIDphY3RpdmU9XCJjdXJyZW50VGFiID09PSAnU2hhZG93cydcIj5TaGFkb3dzPC9idXR0b24+PC9saT5cbiAgICAgIDwhLS0gPGxpPjxidXR0b24gdHlwZT1cImJ1dHRvblwiIGNsYXNzPVwiYy1hY3Rpb25cIiBAY2xpY2s9XCJjdXJyZW50VGFiID0gJ0NvbXBvbmVudHMnXCIgOmFjdGl2ZT1cImN1cnJlbnRUYWIgPT09ICdDb21wb25lbnRzJ1wiPkNvbXBvbmVudHM8L2J1dHRvbj48L2xpPiAtLT5cbiAgICA8L21lbnU+XG4gIDwvZGl2PlxuPC90ZW1wbGF0ZT5cblxuPHNjcmlwdD5cblxuaW1wb3J0IEFQUCBmcm9tICcjc2VydmljZXMvQVBQJ1xuaW1wb3J0IFN0YXRpY0RCIGZyb20gJyNzZXJ2aWNlcy9TdGF0aWNEQidcbmltcG9ydCBwYWxldHRlIGZyb20gJyNzZXJ2aWNlcy9wYWxldHRlJ1xuaW1wb3J0IGRyYWdnYWJsZSBmcm9tICd2dWVkcmFnZ2FibGUnXG5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgbmFtZTogJ1BhbGV0dGUnLFxuICBjb21wb25lbnRzOiB7XG4gICAgZHJhZ2dhYmxlXG4gIH0sXG4gIGRhdGE6ICgpID0+ICh7XG4gICAgQVBQLFxuICAgIHBhbGV0dGUsXG4gICAgY3VycmVudFRhYjogbG9jYWxTdG9yYWdlLmdldEl0ZW0oJ1BhbGV0dGU6Y3VycmVudFRhYicpXG4gIH0pLFxuICBjcmVhdGVkKCkge1xuICAgIHdpbmRvdy5QYWxldHRlID0gdGhpc1xuICB9LFxuICB3YXRjaDoge1xuICAgIGN1cnJlbnRUYWIodmFsdWUpIHtcbiAgICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKCdQYWxldHRlOmN1cnJlbnRUYWInLCB2YWx1ZSlcbiAgICB9XG4gIH1cbn1cblxuPC9zY3JpcHQ+XG4iLCJpbXBvcnQgbW9kIGZyb20gXCItIS4uLy4uL25vZGVfbW9kdWxlcy9iYWJlbC1sb2FkZXIvbGliL2luZGV4LmpzIS4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9pbmRleC5qcz8/dnVlLWxvYWRlci1vcHRpb25zIS4vUGFsZXR0ZS52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anNcIjsgZXhwb3J0IGRlZmF1bHQgbW9kOyBleHBvcnQgKiBmcm9tIFwiLSEuLi8uLi9ub2RlX21vZHVsZXMvYmFiZWwtbG9hZGVyL2xpYi9pbmRleC5qcyEuLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvaW5kZXguanM/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL1BhbGV0dGUudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzXCIiLCJpbXBvcnQgeyByZW5kZXIsIHN0YXRpY1JlbmRlckZucyB9IGZyb20gXCIuL1BhbGV0dGUudnVlP3Z1ZSZ0eXBlPXRlbXBsYXRlJmlkPTE0ZjU1ZGE1XCJcbmltcG9ydCBzY3JpcHQgZnJvbSBcIi4vUGFsZXR0ZS52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anNcIlxuZXhwb3J0ICogZnJvbSBcIi4vUGFsZXR0ZS52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anNcIlxuXG5cbi8qIG5vcm1hbGl6ZSBjb21wb25lbnQgKi9cbmltcG9ydCBub3JtYWxpemVyIGZyb20gXCIhLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL3J1bnRpbWUvY29tcG9uZW50Tm9ybWFsaXplci5qc1wiXG52YXIgY29tcG9uZW50ID0gbm9ybWFsaXplcihcbiAgc2NyaXB0LFxuICByZW5kZXIsXG4gIHN0YXRpY1JlbmRlckZucyxcbiAgZmFsc2UsXG4gIG51bGwsXG4gIG51bGwsXG4gIG51bGxcbiAgXG4pXG5cbmV4cG9ydCBkZWZhdWx0IGNvbXBvbmVudC5leHBvcnRzIiwiPHRlbXBsYXRlPlxuICA8ZGl2IHYtaWY9XCIhaXNIaWRkZW5cIiBjbGFzcz1cIi0tZHMgYy1mcm9udGJvYXJkXCIgOmNsYXNzPVwieyd2LWRhcmttb2RlJzogZGFya01vZGVBY3RpdmV9XCI+PCEtLSByZW1vdmUgLS1kYXJrbW9kZSBjbGFzcyAtLT5cbiAgICA8ZGl2IGNsYXNzPVwiYy1mcm9udGJvYXJkX190b29sYmFyXCI+XG4gICAgICA8ZGl2PlxuICAgICAgICA8c3BhbiBjbGFzcz1cImMtZnJvbnRib2FyZF9fbG9nb1wiPjxzcGFuPvCfpqY8L3NwYW4+IEZyb250Ym9hcmQgPGkgY2xhc3M9XCJmaSBmaS1yci1jaGVja1wiPjwvaT48L3NwYW4+XG4gICAgICAgIDxzcGFuIGNsYXNzPVwiYy1mcm9udGJvYXJkX190aXRsZVwiPnt7IHRpdGxlIH19PC9zcGFuPlxuICAgICAgPC9kaXY+XG4gICAgICA8ZGl2PlxuICAgICAgICA8ZGl2IGNsYXNzPVwiYy1mcm9udGJvYXJkX19kYXJrbW9kZVwiIEBjbGljaz1cImRhcmttb2RlVG9nZ2xlXCI+XG4gICAgICAgICAgPHNwYW4gdi1pZj1cImRhcmtNb2RlQWN0aXZlXCJjbGFzcz1cImZpIGZpLXJzLXRvZ2dsZS1vblwiPjwvc3Bhbj5cbiAgICAgICAgICA8c3BhbiB2LWVsc2UgY2xhc3M9XCJmaSBmaS1ycy10b2dnbGUtb2ZmXCI+PC9zcGFuPlxuICAgICAgICAgIERhcmsgbW9kZVxuICAgICAgICA8L2Rpdj5cbiAgICAgICAgPGRpdiBjbGFzcz1cImMtZnJvbnRib2FyZF9fZGFya21vZGVcIiBAY2xpY2s9XCJwYWxldHRlLnRvZ2dsZSgpXCI+XG4gICAgICAgICAgPHNwYW4gdi1pZj1cInBhbGV0dGUuYWN0aXZlXCJjbGFzcz1cImZpIGZpLXJzLXRvZ2dsZS1vblwiPjwvc3Bhbj5cbiAgICAgICAgICA8c3BhbiB2LWVsc2UgY2xhc3M9XCJmaSBmaS1ycy10b2dnbGUtb2ZmXCI+PC9zcGFuPlxuICAgICAgICAgIFBhbGV0dGVcbiAgICAgICAgPC9kaXY+XG4gICAgICAgIDxkaXYgY2xhc3M9XCJjLWZyb250Ym9hcmRfX2V4aXRcIiBAY2xpY2s9XCJleGl0XCI+RXhpdDwvZGl2PlxuICAgICAgPC9kaXY+XG4gICAgPC9kaXY+XG4gICAgPGRpdiBjbGFzcz1cImMtZnJvbnRib2FyZF9fbWFpblwiPlxuICAgICAgPGRpdiBjbGFzcz1cImMtZnJvbnRib2FyZF9fbWFpbi1jb250ZW50c1wiPlxuICAgICAgICA8ZGl2IGNsYXNzPVwiYy1mcm9udGJvYXJkX19tZW51XCI+XG4gICAgICAgICAgPGRpdiB2LWZvcj1cIm9wdGlvbiBpbiBvcHRpb25zXCI+XG4gICAgICAgICAgICA8ZGl2XG4gICAgICAgICAgICAgIGNsYXNzPVwiYy1mcm9udGJvYXJkX19vcHRpb25fX2hhbmRsZXJcIlxuICAgICAgICAgICAgICA6Y2xhc3M9XCJ7J2FjdGl2ZSc6ICFvcHRpb24ub3B0aW9ucyAmJiBjdXJyZW50Um91dGUgJiYgb3B0aW9uID09PSBjdXJyZW50Um91dGV9XCJcbiAgICAgICAgICAgICAgQGNsaWNrPVwib3B0aW9uLm9wdGlvbnMgPyBvcHRpb24ub3BlbmVkID0gIW9wdGlvbi5vcGVuZWQgOiBsb2FkKG9wdGlvbilcIlxuICAgICAgICAgICAgPnt7IG9wdGlvbi5uYW1lIH19PC9kaXY+XG4gICAgICAgICAgICA8ZGl2IGNsYXNzPVwiYy1mcm9udGJvYXJkX19vcHRpb25zXCIgdi1pZj1cIm9wdGlvbi5vcGVuZWRcIj5cbiAgICAgICAgICAgICAgPGRpdlxuICAgICAgICAgICAgICAgIHYtZm9yPVwic3Vib3B0aW9uIGluIG9wdGlvbi5vcHRpb25zXCJcbiAgICAgICAgICAgICAgICBjbGFzcz1cImMtZnJvbnRib2FyZF9fb3B0aW9uc19faXRlbVwiXG4gICAgICAgICAgICAgICAgOmNsYXNzPVwieydhY3RpdmUnOiBjdXJyZW50Um91dGUgJiYgc3Vib3B0aW9uID09PSBjdXJyZW50Um91dGV9XCJcbiAgICAgICAgICAgICAgICBAY2xpY2s9XCJsb2FkKHN1Ym9wdGlvbilcIlxuICAgICAgICAgICAgICA+e3sgc3Vib3B0aW9uLm5hbWUgfX08L2Rpdj5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICA8L2Rpdj5cbiAgICAgICAgPGRpdiBjbGFzcz1cImMtZnJvbnRib2FyZF9fYm9keVwiPjxjb21wb25lbnQgdi1pZj1cImN1cnJlbnRSb3V0ZVwiIDppcz1cImN1cnJlbnRSb3V0ZS5jb21wb25lbnRcIiB2LWJpbmQ9XCJjdXJyZW50Um91dGUuYXR0cnNcIiA6a2V5PVwiY3VycmVudFJvdXRlLnBhdGhcIi8+PC9kaXY+XG4gICAgICA8L2Rpdj5cbiAgICA8L2Rpdj5cbiAgICA8UGFsZXR0ZS8+XG4gIDwvZGl2PlxuPC90ZW1wbGF0ZT5cblxuPHNjcmlwdD5cblxuaW1wb3J0IEF4aW9zIGZyb20gJ2F4aW9zJ1xuaW1wb3J0IEZpbGVMb2FkZXIgZnJvbSAndmlld3MvcmljaEVkaXRvci9GaWxlTG9hZGVyJ1xuaW1wb3J0IENvbXBvbmVudFZpZXdlciBmcm9tICd2aWV3cy9Db21wb25lbnRWaWV3ZXInXG5pbXBvcnQgU3RhdGljREIgZnJvbSAndmlld3MvU3RhdGljREInXG5pbXBvcnQgUGFsZXR0ZSBmcm9tICd2aWV3cy9QYWxldHRlJ1xuaW1wb3J0IHBhbGV0dGUgZnJvbSAnI3NlcnZpY2VzL3BhbGV0dGUnXG5cbmNvbnN0IEFQSSA9IEF4aW9zLmNyZWF0ZSh7IGJhc2VVUkw6ICdodHRwOi8vbG9jYWxob3N0OjMwMzUvYXBpJyB9KVxuXG5mdW5jdGlvbiBnZXRDb250ZXh0Um91dGVzIChiYXNlLCBjb250ZXh0LCBjb21wb25lbnQpIHtcbiAgLy8gY29uc29sZS5sb2coJy0tLT4gY29udGV4dCBrZXknLCBiYXNlLCBjb250ZXh0LmtleXMoKSlcbiAgcmV0dXJuIGNvbnRleHQua2V5cygpLm1hcChjb250ZXh0UGF0aCA9PiB7XG4gICAgY29uc3QgcGF0aCA9IFtiYXNlLCBjb250ZXh0UGF0aF0ucGF0aEpvaW4oKVxuICAgIGNvbnN0IG5hbWUgPSBjb250ZXh0UGF0aC5zcGxpdCgnLycpLnNsaWNlKC0xKVswXS5yZXBsYWNlKC9cXC5bXi5dKiQvLCAnJykudG9TcGFjZXMoKVxuICAgIGNvbnN0IHJvdXRlID0ge1xuICAgICAgbmFtZSxcbiAgICAgIHBhdGgsXG4gICAgICBjb21wb25lbnQsXG4gICAgICBhdHRyczoge1xuICAgICAgICBmaWxlOiB7XG4gICAgICAgICAgbmFtZSxcbiAgICAgICAgICBwYXRoLFxuICAgICAgICAgIGltcG9ydDogYXN5bmMgKCkgPT4ge1xuICAgICAgICAgICAgLy8gY29uc29sZS5sb2coJy0tLS0+IGxvYWRpbmcgY29udGV4dFBhdGgnLCBjb250ZXh0UGF0aCwgcGF0aClcbiAgICAgICAgICAgIGNvbnN0IG1vZHVsZSA9IGF3YWl0IGNvbnRleHQoY29udGV4dFBhdGgpXG4gICAgICAgICAgICByZXR1cm4gdHlwZW9mIG1vZHVsZSA9PT0gJ3N0cmluZycgPyBtb2R1bGUgOiBtb2R1bGUuZGVmYXVsdFxuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgICByb3V0ZXMucHVzaChyb3V0ZSlcbiAgICByZXR1cm4gcm91dGVcbiAgfSlcbn1cblxuY29uc3Qgcm91dGVzID0gW11cbmNvbnN0IGRvY3NSb3V0ZXMgPSBnZXRDb250ZXh0Um91dGVzKCdkYXRhL21kJywgaW1wb3J0Lm1ldGEud2VicGFja0NvbnRleHQoJ0AvZGF0YS9tZCcsIHsgcmVjdXJzaXZlOiB0cnVlLCByZWdFeHA6IC9cXC5tZCQvLCBtb2RlOiAnbGF6eScgfSksIEZpbGVMb2FkZXIpXG4vLyBjb25zdCBjb21wb25lbnRzUm91dGVzID0gZ2V0Q29udGV4dFJvdXRlcygnc3JjL2NvbXBvbmVudHMnLCBpbXBvcnQubWV0YS53ZWJwYWNrQ29udGV4dCgnQC9zcmMvY29tcG9uZW50cz9yYXcnLCB7IHJlY3Vyc2l2ZTogdHJ1ZSwgcmVnRXhwOiAvXFwudnVlJC8sIG1vZGU6ICdsYXp5JyB9KSwgQ29tcG9uZW50Vmlld2VyKVxuLy8gY29uc3Qgc25hcHNob3RzUm91dGVzID0gZ2V0Q29udGV4dFJvdXRlcygndGVzdHMnLCByZXF1aXJlLmNvbnRleHQoJ0AvdGVzdHMnLCB0cnVlLCAvXFwuc25hcCQvLCAnbGF6eScpLCBGaWxlTG9hZGVyKVxuXG5jb25zdCBzdGF0aWNEQlJvdXRlID0ge1xuICBuYW1lOiAnQXBwZmxvdycsXG4gIHBhdGg6ICdkYXRhJyxcbiAgY29tcG9uZW50OiBTdGF0aWNEQlxufVxucm91dGVzLnB1c2goc3RhdGljREJSb3V0ZSlcblxuY29uc3Qgd2hpdGVCb2FyZFJvdXRlID0ge1xuICBuYW1lOiAnV2hpdGVib2FyZCcsXG4gIHBhdGg6ICcud2hpdGVib2FyZC5tZCcsXG4gIGNvbXBvbmVudDogRmlsZUxvYWRlcixcbiAgYXR0cnM6IHtcbiAgICBmaWxlOiB7XG4gICAgICBuYW1lOiAnV2hpdGVib2FyZCcsXG4gICAgICBwYXRoOiAnLndoaXRlYm9hcmQubWQnLFxuICAgICAgaW1wb3J0OiBhc3luYyAoKSA9PiBhd2FpdCBpbXBvcnQoJ0Avc3JjL3ZpZXdzL1JpY2hFZGl0b3IvbGliL3doaXRlYm9hcmQubWQuZXhhbXBsZScpLnRoZW4obW9kdWxlID0+IG1vZHVsZS5kZWZhdWx0KVxuICAgIH1cbiAgfVxufVxucm91dGVzLnB1c2god2hpdGVCb2FyZFJvdXRlKVxuXG5jb25zdCBvcHRpb25zID0gW1xuICBzdGF0aWNEQlJvdXRlLFxuICB7XG4gICAgbmFtZTogJ0RvY3MnLFxuICAgIG9wZW5lZDogZmFsc2UsXG4gICAgb3B0aW9uczogZG9jc1JvdXRlc1xuICB9LFxuICAvKlxuICB7XG4gICAgbmFtZTogJ0NvbXBvbmVudHMnLFxuICAgIG9wZW5lZDogZmFsc2UsXG4gICAgb3B0aW9uczogY29tcG9uZW50c1JvdXRlc1xuICB9LFxuICAqL1xuICB3aGl0ZUJvYXJkUm91dGVcbl1cblxuZXhwb3J0IGRlZmF1bHQge1xuICBuYW1lOiAnRnJvbnRib2FyZCcsXG4gIGNvbXBvbmVudHM6IHtcbiAgICBQYWxldHRlLFxuICAgIEZpbGVMb2FkZXJcbiAgfSxcbiAgcHJvcHM6IHtcbiAgICBwYXRoOiB7IHR5cGU6IFN0cmluZywgZGVmYXVsdDogJy53aGl0ZWJvYXJkLm1kJyB9XG4gIH0sXG4gIGRhdGE6ICgpID0+ICh7XG4gICAgcGFsZXR0ZSxcbiAgICByb3V0ZXMsXG4gICAgb3B0aW9ucyxcbiAgICBpc0hpZGRlbjogZmFsc2UsXG4gICAgY3VycmVudFJvdXRlOiB1bmRlZmluZWQsXG4gICAgZGFya01vZGVBY3RpdmU6IGxvY2FsU3RvcmFnZS5nZXRJdGVtKCdkYXJrbW9kZScpID09PSAndHJ1ZSdcbiAgfSksXG4gIGNyZWF0ZWQgKCkge1xuICAgIHBhbGV0dGUuZGFya21vZGUgPSB0aGlzLmRhcmtNb2RlQWN0aXZlXG4gIH0sXG4gIG1vdW50ZWQgKCkge1xuICAgIGNvbnN0IHJvdXRlID0gdGhpcy5yb3V0ZXMuZmluZChyb3V0ZSA9PiByb3V0ZS5wYXRoID09PSB0aGlzLnBhdGgpXG4gICAgaWYgKHJvdXRlKSB7XG4gICAgICB0aGlzLmxvYWQocm91dGUpXG4gICAgfSBlbHNlIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcignRmlsZSBub3QgZXhpc3QnLCB0aGlzLnBhdGgpXG4gICAgfVxuICB9LFxuICBjb21wdXRlZDoge1xuICAgIHRpdGxlICgpIHtcbiAgICAgIHJldHVybiB0aGlzLmN1cnJlbnRSb3V0ZSA/IHRoaXMuY3VycmVudFJvdXRlLnBhdGggOiAnJ1xuICAgIH1cbiAgfSxcbiAgbWV0aG9kczoge1xuICAgIGRhcmttb2RlVG9nZ2xlICgpIHtcbiAgICAgIHRoaXMuZGFya01vZGVBY3RpdmUgPSAhdGhpcy5kYXJrTW9kZUFjdGl2ZVxuICAgICAgcGFsZXR0ZS5kYXJrbW9kZSA9IHRoaXMuZGFya01vZGVBY3RpdmVcbiAgICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKCdkYXJrbW9kZScsIHRoaXMuZGFya01vZGVBY3RpdmUpXG4gICAgfSxcbiAgICBsb2FkIChyb3V0ZSkge1xuICAgICAgY29uc3QgZ3JvdXAgPSB0aGlzLm9wdGlvbnMuZmluZChvcHRpb24gPT4gb3B0aW9uLm9wdGlvbnMgJiYgb3B0aW9uLm9wdGlvbnMuaW5jbHVkZXMocm91dGUpKVxuICAgICAgaWYgKGdyb3VwKSB7XG4gICAgICAgIGdyb3VwLm9wZW5lZCA9IHRydWVcbiAgICAgIH1cbiAgICAgIGlmICh3aW5kb3cuaGlzdG9yeS5wdXNoU3RhdGUpIHtcbiAgICAgICAgY29uc3QgbmV3dXJsID0gd2luZG93LmxvY2F0aW9uLnByb3RvY29sICsgJy8vJyArIHdpbmRvdy5sb2NhdGlvbi5ob3N0ICsgd2luZG93LmxvY2F0aW9uLnBhdGhuYW1lICsgJz9mcm9udGJvYXJkPScgKyByb3V0ZS5wYXRoXG4gICAgICAgIHdpbmRvdy5oaXN0b3J5LnB1c2hTdGF0ZSh7IHBhdGg6IG5ld3VybCB9LCAnJywgbmV3dXJsKVxuICAgICAgfVxuICAgICAgdGhpcy5jdXJyZW50Um91dGUgPSByb3V0ZVxuICAgIH0sXG4gICAgdG9nZ2xlICgpIHtcbiAgICAgIHRoaXMuaXNIaWRkZW4gPSAhdGhpcy5pc0hpZGRlblxuICAgIH0sXG4gICAgZXhpdCAoKSB7XG4gICAgICB0aGlzLmlzSGlkZGVuID0gdHJ1ZVxuICAgICAgaWYgKGhpc3RvcnkucHVzaFN0YXRlKSB7XG4gICAgICAgIGNvbnN0IG5ld3VybCA9IHdpbmRvdy5sb2NhdGlvbi5wcm90b2NvbCArICcvLycgKyB3aW5kb3cubG9jYXRpb24uaG9zdCArIHdpbmRvdy5sb2NhdGlvbi5wYXRobmFtZVxuICAgICAgICB3aW5kb3cuaGlzdG9yeS5wdXNoU3RhdGUoeyBwYXRoOiBuZXd1cmwgfSwgJycsIG5ld3VybClcbiAgICAgIH1cbiAgICB9XG4gIH1cbn1cblxuPC9zY3JpcHQ+XG4iLCJpbXBvcnQgbW9kIGZyb20gXCItIS4uLy4uL25vZGVfbW9kdWxlcy9iYWJlbC1sb2FkZXIvbGliL2luZGV4LmpzIS4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9pbmRleC5qcz8/dnVlLWxvYWRlci1vcHRpb25zIS4vRnJvbnRib2FyZC52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anNcIjsgZXhwb3J0IGRlZmF1bHQgbW9kOyBleHBvcnQgKiBmcm9tIFwiLSEuLi8uLi9ub2RlX21vZHVsZXMvYmFiZWwtbG9hZGVyL2xpYi9pbmRleC5qcyEuLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvaW5kZXguanM/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL0Zyb250Ym9hcmQudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzXCIiLCJpbXBvcnQgeyByZW5kZXIsIHN0YXRpY1JlbmRlckZucyB9IGZyb20gXCIuL0Zyb250Ym9hcmQudnVlP3Z1ZSZ0eXBlPXRlbXBsYXRlJmlkPTA3OGU1NGY0XCJcbmltcG9ydCBzY3JpcHQgZnJvbSBcIi4vRnJvbnRib2FyZC52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anNcIlxuZXhwb3J0ICogZnJvbSBcIi4vRnJvbnRib2FyZC52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anNcIlxuXG5cbi8qIG5vcm1hbGl6ZSBjb21wb25lbnQgKi9cbmltcG9ydCBub3JtYWxpemVyIGZyb20gXCIhLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL3J1bnRpbWUvY29tcG9uZW50Tm9ybWFsaXplci5qc1wiXG52YXIgY29tcG9uZW50ID0gbm9ybWFsaXplcihcbiAgc2NyaXB0LFxuICByZW5kZXIsXG4gIHN0YXRpY1JlbmRlckZucyxcbiAgZmFsc2UsXG4gIG51bGwsXG4gIG51bGwsXG4gIG51bGxcbiAgXG4pXG5cbmV4cG9ydCBkZWZhdWx0IGNvbXBvbmVudC5leHBvcnRzIl0sIm5hbWVzIjpbInJlbmRlciIsIl92bSIsIl9jIiwiX3NlbGYiLCJpc0hpZGRlbiIsInN0YXRpY0NsYXNzIiwiY2xhc3MiLCJkYXJrTW9kZUFjdGl2ZSIsIl9tIiwiX3YiLCJfcyIsInRpdGxlIiwib24iLCJkYXJrbW9kZVRvZ2dsZSIsImNsaWNrIiwiJGV2ZW50IiwicGFsZXR0ZSIsInRvZ2dsZSIsImFjdGl2ZSIsImV4aXQiLCJfbCIsIm9wdGlvbnMiLCJvcHRpb24iLCJjdXJyZW50Um91dGUiLCJvcGVuZWQiLCJsb2FkIiwibmFtZSIsInN1Ym9wdGlvbiIsIl9lIiwiY29tcG9uZW50IiwiX2IiLCJrZXkiLCJwYXRoIiwidGFnIiwiYXR0cnMiLCJzdGF0aWNSZW5kZXJGbnMiLCJjb250ZW50cyIsInVuZGVmaW5lZCIsImV4dCIsImZpbGUiLCJmcm9tTWVtb3J5Iiwic2F2ZSIsIm9uQ2xlYXJNZW1vcnkiLCJtb2RlbCIsInZhbHVlIiwiY2FsbGJhY2siLCIkJHYiLCJleHByZXNzaW9uIiwiX3NldHVwIiwiX3NldHVwUHJveHkiLCJlZGl0b3IiLCJpc0FjdGl2ZSIsImFjdGl2ZUNsYXNzIiwibW91c2Vkb3duIiwicHJldmVudERlZmF1bHQiLCJzdG9wUHJvcGFnYXRpb24iLCJjb21tYW5kcyIsInRvZ2dsZUJvbGQiLCJ0b2dnbGVJdGFsaWMiLCJ0b2dnbGVTdHJpa2UiLCJ0b2dnbGVVbmRlcmxpbmUiLCJ0b2dnbGVIaWdobGlnaHQiLCJ0b2dnbGVDb2RlIiwidG9nZ2xlTGlua1VybCIsImFwcGx5IiwiYXJndW1lbnRzIiwidG9nZ2xlQ29kZUJsb2NrIiwic2V0UGFyYWdyYXBoIiwibGV2ZWwiLCJ0b2dnbGVIZWFkaW5nIiwidG9nZ2xlQmxvY2txdW90ZSIsInNldEhvcml6b250YWxSdWxlIiwidG9nZ2xlQnVsbGV0TGlzdCIsInRvZ2dsZU9yZGVyZWRMaXN0IiwidG9nZ2xlVGFza0xpc3QiLCJ1bmRvIiwicmVkbyIsIm1kVmlldyIsImh0bWxWaWV3IiwiYXV0b3NhdmUiLCJwcmlzdGluZSIsInRvZ2dsZUF1dG9zYXZlIiwibGlua1VybFZpc2libGUiLCJkaXJlY3RpdmVzIiwicmF3TmFtZSIsImxpbmtVcmwiLCJyZWYiLCJkb21Qcm9wcyIsInR5cGUiLCJpbmRleE9mIiwiX2siLCJrZXlDb2RlIiwic2V0TGlua1VybCIsImJsdXIiLCJpbnB1dCIsInRhcmdldCIsImNvbXBvc2luZyIsIiRlbWl0Iiwic2VjdGlvbnMiLCJvblNlY3Rpb25zQ2hhbmdlIiwic2VjdGlvbiIsInNlY3Rpb25JbmRleCIsImxvYWRTZWN0aW9uIiwicmVtb3ZlU2VjdGlvbiIsInNsb3QiLCJhZGRTZWN0aW9uIiwiJGF0dHJzIiwiY3VycmVudFNlY3Rpb25JbmRleCIsImh0bWwiLCJtZCIsIkV4dGVuc2lvbiIsIlRleHRTZWxlY3Rpb24iLCJjcmVhdGUiLCJhZGRDb21tYW5kcyIsImFwcGx5SW5kZW50IiwiZGlyZWN0aW9uIiwiX3JlZiIsImNoYWluIiwidHIiLCJzdGF0ZSIsImRpc3BhdGNoIiwic2VsZWN0aW9uIiwiZG9jIiwiZnJvbSIsInRvIiwiJGZyb20iLCJwYXJlbnQiLCJwb3NpdGlvbiIsInRlc3QiLCJ0ZXh0QmV0d2VlbiIsIm5vZGVTaXplIiwic2VsZWN0aW9uVGV4dCIsInNwbGl0IiwibWFwIiwibGluZSIsInJlcGxhY2UiLCJqb2luIiwibmV3VHIiLCJpbnNlcnRUZXh0IiwibmV3RnJvbSIsInJlc29sdmUiLCJuZXdUbyIsImxlbmd0aCIsIm5ld1NlbGVjdGlvbiIsInNldFNlbGVjdGlvbiIsImluZGVudCIsIm91dGRlbnQiLCJhZGRLZXlib2FyZFNob3J0Y3V0cyIsIlRhYiIsIlNoaWZ0LVRhYiIsImZ1bGxTY3JlZW4iLCJuYXRpdmVPbiIsInNlbGVjdGVkTGFuZ3VhZ2UiLCJpc1J1bmFibGUiLCJ0b2dnbGVDb2RlVmlldyIsInNob3dDb2RlVmlldyIsImVycm9ycyIsImVycm9yIiwid2FybmluZ3MiLCJ3YXJuIiwiaGxqcyIsInN1Ykxhbmd1YWdlIiwiY29udGFpbnMiLCJDT01NRU5UIiwicmVsZXZhbmNlIiwiYmVnaW4iLCJlbmQiLCJleGNsdWRlQmVnaW4iLCJleGNsdWRlRW5kIiwiVHVybmRvd25TZXJ2aWNlIiwidHVybmRvd25TZXJ2aWNlIiwiaGVhZGluZ1N0eWxlIiwiaHIiLCJidWxsZXRMaXN0TWFya2VyIiwiY29kZUJsb2NrU3R5bGUiLCJmZW5jZSIsImVtRGVsaW1pdGVyIiwic3Ryb25nRGVsaW1pdGVyIiwibGlua1N0eWxlIiwiYWRkUnVsZSIsImZpbHRlciIsInJlcGxhY2VtZW50IiwiY29udGVudCIsImNvbmNhdCIsIm5vZGUiLCJfbm9kZSRwYXJlbnRFbGVtZW50IiwicGFyZW50RWxlbWVudCIsIm5vZGVOYW1lIiwiaGFzQXR0cmlidXRlIiwibGlzdEl0ZW1QcmVmaXgiLCJwYXJlbnROb2RlIiwic3RhcnQiLCJnZXRBdHRyaWJ1dGUiLCJpbmRleCIsIkFycmF5IiwicHJvdG90eXBlIiwiY2FsbCIsImNoaWxkcmVuIiwiTnVtYmVyIiwibmV4dFNpYmxpbmciLCJjaGVja2VkIiwiaHRtbFRvTWFya2Rvd24iLCJ0dXJuZG93biIsIkRPTVB1cmlmeSIsIm1hcmtlZCIsInVzZSIsImdmbSIsImV4dGVuc2lvbnMiLCJzcmMiLCJfc3JjJG1hdGNoIiwibWF0Y2giLCJ0b2tlbml6ZXIiLCJ0b2tlbnMiLCJydWxlIiwiZXhlYyIsInRva2VuIiwicmF3IiwidGV4dCIsImxleGVyIiwiaW5saW5lVG9rZW5zIiwidHJpbSIsInJlbmRlcmVyIiwicGFyc2VyIiwicGFyc2VJbmxpbmUiLCJfc3JjJG1hdGNoMiIsIl9zcmMkbWF0Y2gzIiwiX3NyYyRtYXRjaDQiLCJpbmxpbmUiLCJjaGlsZFRva2VucyIsIl9zcmMkbWF0Y2g1IiwiaXRlbSIsInRvU3RyaW5nIiwid2Fsa1Rva2VucyIsIkxleGVyIiwibGV4SW5saW5lIiwibWFya2Rvd25Ub0h0bWwiLCJtYXJrZG93biIsInNhbml0aXplIiwicGFyc2UiLCJVU0VfUFJPRklMRVMiLCJWdWUiLCJOb2RlIiwiRWRpdG9yIiwiRWRpdG9yQ29udGVudCIsIlZ1ZU5vZGVWaWV3UmVuZGVyZXIiLCJTdGFydGVyS2l0IiwiVHlwb2dyYXBoeSIsIkxpbmsiLCJVbmRlcmxpbmUiLCJUYXNrTGlzdCIsIlRhc2tJdGVtIiwiSW1hZ2UiLCJIaWdobGlnaHQiLCJDb2RlQmxvY2tMb3dsaWdodCIsIkluZGVudCIsIkhpZ2hsaWdodGVyIiwibG93bGlnaHQiLCJ3ZWJjb21wb25lbnQiLCJkcmFnZ2FibGUiLCJyZWdpc3Rlckxhbmd1YWdlIiwicmVnaXN0ZXJBbGlhcyIsInNlY3Rpb25IYXNoIiwiY29tcG9uZW50cyIsInByb3BzIiwiU3RyaW5nIiwiZGVmYXVsdCIsIkJvb2xlYW4iLCJkYXRhIiwibG9jYWxTdG9yYWdlIiwiZ2V0SXRlbSIsIndhdGNoIiwiaGFuZGxlciIsIm9sZFZhbHVlIiwicmVmcmVzaCIsImNyZWF0ZWQiLCJ3aW5kb3ciLCJSaWNoRWRpdG9yIiwiZW5hYmxlQ29yZUV4dGVuc2lvbnMiLCJjb25maWd1cmUiLCJoZWFkaW5nIiwibGV2ZWxzIiwibGluayIsIm9wZW5PbkNsaWNrIiwiY29kZUJsb2NrIiwiSFRNTEF0dHJpYnV0ZXMiLCJhbGxvd0Jhc2U2NCIsImV4dGVuZCIsImFkZE5vZGVWaWV3IiwiZGVmYXVsdExhbmd1YWdlIiwib25VcGRhdGUiLCJtb3VudGVkIiwiJGVsIiwiYWRkRXZlbnRMaXN0ZW5lciIsIm9uS2V5ZG93biIsImJlZm9yZURlc3Ryb3kiLCJyZW1vdmVFdmVudExpc3RlbmVyIiwiZGVzdHJveSIsIm1ldGhvZHMiLCJzZXRDb250ZW50IiwicHVzaCIsInNwbGljZSIsInNldEl0ZW0iLCJldmVudCIsIm1ldGFLZXkiLCJjdXJyZW50RWRpdG9ySFRNTCIsImdldEhUTUwiLCJjdXJyZW50U2VjdGlvbiIsInBhcnNlU2VjdGlvbnMiLCJmaWxlQ29udGVudHMiLCJzZWN0aW9uQ29udGVudCIsIl9leGVjIiwiJG5leHRUaWNrIiwiJHJlZnMiLCJsaW5rQWN0aXZhdG9yIiwiZm9jdXMiLCJnZXRBdHRyaWJ1dGVzIiwiaHJlZiIsInRvZ2dsZUVkaXRhYmxlIiwic2V0RWRpdGFibGUiLCJpc0VkaXRhYmxlIiwiY2FuY2VsIiwic2V0TGluayIsImNsZWFyTGlua1VybCIsImluZm8iLCJBUFAiLCJPYmplY3QiLCJzbG90UmVnZXgiLCJldmVudHNSZWdleCIsIkNvbXBvbmVudFZpZXdlciIsImltcG9ydCIsInRoZW4iLCJwb3AiLCJjb21wb25lbnROYW1lIiwic2xvdHMiLCJleGVjQmF0Y2giLCJldmVudHMiLCIkZm9yY2VVcGRhdGUiLCJTbmFwVmlld2VyIiwiQVBJIiwicmVxdWlyZWQiLCJvZmZsaW5lIiwiaXNXZWJwYWNrU2VydmUiLCJjb25zb2xlIiwibG9nIiwib3BlbiIsIkZpbGVMb2FkZXIiLCJyZW1vdmVJdGVtIiwibG9jYWxTYXZlZCIsImdldCIsInJlc3BvbnNlIiwicHV0IiwiaGVhZGVycyIsImNvbGxlY3Rpb25zIiwic2NvcGVkU2xvdHMiLCJfdSIsImZuIiwiaGlkZGVuIiwiY3VycmVudENvbGxlY3Rpb24iLCJsYW5ndWFnZSIsIiRzZXQiLCJzaG93Qm90aCIsImlzQXJyYXkiLCJfaSIsImNoYW5nZSIsIiQkYSIsIiQkZWwiLCIkJGMiLCIkJGkiLCJzbGljZSIsIkNsYXNzIiwibW9kZWxzIiwiVXNlciIsImZpbHRlckhhbmRsZXIiLCJTY2hlbWUiLCJTdGF0aWNEQiIsInZhbHVlcyIsImRhdGFiYXNlcyIsImRhdGFiYXNlIiwiZmxhdCIsImZpbmQiLCJjb2xsZWN0aW9uIiwiaWQiLCJjb21wdXRlZCIsInRvU29ydGVkIiwiY2F0ZWdvcnkiLCJjTWVudSIsImZpbHRlcnMiLCJxdWVyeUZpbHRlciIsImZvckVhY2giLCJvcGVyYW5kIiwiZmllbGQiLCJvcGVyYW5kVmFsdWVLZXlzIiwia2V5cyIsImluY2x1ZGVzIiwib3BlcmFuZFZhbHVlcyIsImZyb21FbnRyaWVzIiwiSlNPTiIsInN0cmluZ2lmeSIsInBhcmFtcyIsImVudHJ5IiwicG9wdWxhdGUiLCJjdXJyZW50VGFiIiwiYmFzZUNTU1ZhcnMiLCJjc3NWYXIiLCJ0b1NwYWNlcyIsImNhcGl0YWxpemUiLCJmb3JtYXQiLCJfX3IiLCJjb2xvcnMiLCJjb2xvciIsInVpZCIsImh1ZSIsInNhdHVyYXRpb24iLCJsaWdodG5lc3MiLCJzdHlsZSIsImJhY2tncm91bmRDb2xvciIsImFkZENvbG9yIiwiY29sb3JUb25lcyIsImNvbG9yVG9uZSIsImNvbG9yU2hhZG93cyIsImNvbG9yU2hhZG93IiwiYWRkQ29sb3JUb25lIiwiUGFsZXR0ZSIsIkF4aW9zIiwiYmFzZVVSTCIsImdldENvbnRleHRSb3V0ZXMiLCJiYXNlIiwiY29udGV4dCIsImNvbnRleHRQYXRoIiwicGF0aEpvaW4iLCJyb3V0ZSIsIm1vZHVsZSIsInJvdXRlcyIsImRvY3NSb3V0ZXMiLCJtZXRhIiwid2VicGFja0NvbnRleHQiLCJyZWN1cnNpdmUiLCJyZWdFeHAiLCJtb2RlIiwic3RhdGljREJSb3V0ZSIsIndoaXRlQm9hcmRSb3V0ZSIsImRhcmttb2RlIiwiRXJyb3IiLCJncm91cCIsImhpc3RvcnkiLCJwdXNoU3RhdGUiLCJuZXd1cmwiLCJsb2NhdGlvbiIsInByb3RvY29sIiwiaG9zdCIsInBhdGhuYW1lIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///9267\n')}}]);