(self.webpackChunkfrontboard=self.webpackChunkfrontboard||[]).push([[300],{3214:(Q,F,U)=>{var B={"./Actions.md":[2758,758],"./Chips.md":[862,862],"./Datagrid.md":[8917,917],"./DateField.md":[5637,637],"./Example.md":[7719,719],"./Fields.md":[2780,780],"./Inputs.md":[2524,524],"./Scheme.md":[7858,858],"./Selector.md":[5420,420],"./Tabs.md":[2081,81],"./TextFormat.md":[5237,237]};function n(Q){if(!U.o(B,Q))return Promise.resolve().then((()=>{var F=new Error("Cannot find module '"+Q+"'");throw F.code="MODULE_NOT_FOUND",F}));var F=B[Q],n=F[0];return U.e(F[1]).then((()=>U(n)))}n.keys=()=>Object.keys(B),n.id=3214,Q.exports=n},8950:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   A: () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var services_APP__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(6929);\n/* harmony import */ var vue__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(9840);\n/* harmony import */ var _tiptap_vue_2__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(4642);\n/* harmony import */ var components_selector_Selector__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(6613);\n\n\n\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  name: 'Highligther',\n  components: {\n    NodeViewWrapper: _tiptap_vue_2__WEBPACK_IMPORTED_MODULE_2__/* .NodeViewWrapper */ .VR,\n    NodeViewContent: _tiptap_vue_2__WEBPACK_IMPORTED_MODULE_2__/* .NodeViewContent */ .$p,\n    Selector: components_selector_Selector__WEBPACK_IMPORTED_MODULE_1__/* [\"default\"] */ .A\n  },\n  props: _tiptap_vue_2__WEBPACK_IMPORTED_MODULE_2__/* .nodeViewProps */ .en,\n  data() {\n    return {\n      showCodeView: undefined,\n      errors: [],\n      warnings: [],\n      fullScreen: false,\n      languages: this.extension.options.lowlight.listLanguages()\n    };\n  },\n  created() {\n    this.lastContent = this.node.textContent;\n    document.addEventListener('vue:error', this.onError);\n    document.addEventListener('vue:warn', this.onWarn);\n    // document.addEventListener('showCodeView', this.onShowCodeView)\n  },\n  mounted() {\n    this.editor.on('update', this.run);\n    // this.onShowCodeView()\n    this.run(true);\n  },\n  beforeDestroy() {\n    this.editor.off('update', this.run);\n    document.removeEventListener('vue:error', this.onError);\n    document.removeEventListener('vue:warn', this.onWarn);\n    // document.removeEventListener('showCodeView', this.onShowCodeView)\n  },\n  computed: {\n    options() {\n      return [{\n        text: 'auto',\n        value: null\n      }, {\n        text: 'html',\n        value: 'html'\n      }, {\n        text: 'ruby',\n        value: 'ruby'\n      }, {\n        text: 'javascript',\n        value: 'javascript'\n      }, {\n        text: 'json',\n        value: 'json'\n      }, {\n        text: 'vue',\n        value: 'vue'\n      }, {\n        text: 'bash',\n        value: 'bash'\n      }\n      // ...this.languages.map(language => ({text: language, value: language}))\n      ];\n    },\n    selectedLanguage: {\n      get() {\n        return this.node.attrs.language;\n      },\n      set(language) {\n        this.updateAttributes({\n          language\n        });\n        this.run(true);\n      }\n    },\n    isHTML() {\n      return this.selectedLanguage === 'html';\n    },\n    isWebcomponent() {\n      return this.selectedLanguage === 'vue' || this.selectedLanguage === 'webcomponent'; // Review\n    },\n    isRunable() {\n      return this.isHTML || this.isWebcomponent;\n    }\n  },\n  methods: {\n    /*\n    onShowCodeView () {\n      this.showCodeView = localStorage.getItem('showCodeView') === 'true'\n    },\n    */\n    toggleCodeView() {\n      // localStorage.setItem('showCodeView', !this.showCodeView)\n      // document.dispatchEvent(new Event('showCodeView'))\n      this.showCodeView = !this.showCodeView;\n    },\n    onError(event) {\n      const {\n        error,\n        vm,\n        info\n      } = event.detail;\n      if (vm && vm.closestComponent('Runner') === this.lastRunner) {\n        this.destroyRunner();\n        this.errors.push(error.toString());\n      }\n    },\n    onWarn(event) {\n      const {\n        message,\n        vm,\n        trace\n      } = event.detail;\n      if (vm && vm.closestComponent('Runner') === this.lastRunner) {\n        this.destroyRunner();\n        this.warnings.push(message.toString());\n      }\n    },\n    click() {\n      window.Highligther = this;\n    },\n    async run(force) {\n      const content = this.node.textContent;\n      if (force !== true && content === this.lastContent) return;\n      this.destroyRunner();\n      this.errors = [];\n      this.warnings = [];\n      await this.$nextTick();\n      if (this.isHTML) {\n        return this.runWebcomponent();\n      } else if (this.isWebcomponent) {\n        return this.runWebcomponent();\n      }\n    },\n    /*\n    runHTML () {\n      const self = this\n      const content = this.node.textContent\n      const template = this.lastContent = content\n      const base = document.createElement('div')\n      this.$refs.mounter.appendChild(base)\n      const lastRunner = new Vue({\n        name: 'Runner',\n        template: '<div>' + template + '</div>',\n        data: {},\n        created () {\n          self.lastRunner = this\n        },\n        el: base\n      })\n    },\n    */\n    destroyRunner() {\n      if (this.lastRunner) {\n        // this.lastRunner.$destroy() // TODO: REview weird error\n        this.$refs.mounter.textContent = '';\n      }\n    },\n    parseWebcomponent(webcomponent) {\n      try {\n        const webcomponentRegex = /(?:<template>\\s*((?:.|\\n)*)\\s*<\\/template>)\\s*(?:<script>\\s*((?:.|\\n)*)\\s*<\\/script>)?\\s*(?:<style>\\s*((?:.|\\n)*)\\s*<\\/style>)?\\s*/gm;\n        const [, template, js, css] = webcomponentRegex.exec(webcomponent);\n        return {\n          template,\n          js,\n          css\n        };\n      } catch (error) {\n        throw new Error('Invalid Webcomponent format');\n      }\n    },\n    runWebcomponent() {\n      const self = this;\n      const content = this.node.textContent;\n      try {\n        const webcomponent = this.lastContent = content;\n        const {\n          template,\n          js,\n          css\n        } = this.parseWebcomponent(webcomponent);\n        const base = document.createElement('div');\n        const style = document.createElement('style');\n        style.type = 'text/css';\n        style.textContent = css;\n        const component = document.createElement('component');\n        base.appendChild(style);\n        base.appendChild(component);\n        this.$refs.mounter.appendChild(base);\n        const evalConfig = js ? eval(js) : {}; // eslint-disable-line no-eval\n        const config = evalConfig.data ? evalConfig : {\n          data: evalConfig\n        };\n        Object.assign(config.data, {\n          APP: services_APP__WEBPACK_IMPORTED_MODULE_0__/* [\"default\"] */ .A,\n          window\n        });\n        const lastRunner = new vue__WEBPACK_IMPORTED_MODULE_3__[\"default\"](Object.assign({}, config, {\n          name: 'Runner',\n          template: '<div>' + template + '</div>',\n          created() {\n            self.lastRunner = this;\n            if (typeof config.created === 'function') config.created.call(this);\n          },\n          el: component\n        }));\n      } catch (error) {\n        error.message = 'Highligther Error creating runner: ' + error.message;\n        this.errors.push(error.toString());\n        console.error(error);\n      }\n    }\n  }\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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LENBQUFLLFdBQUEsQ0FBQUgsS0FBQTtRQUNBRixJQUFBLENBQUFLLFdBQUEsQ0FBQUQsU0FBQTtRQUNBLEtBQUFmLEtBQUEsQ0FBQUMsT0FBQSxDQUFBZSxXQUFBLENBQUFMLElBQUE7UUFFQSxNQUFBTSxVQUFBLEdBQUFYLEVBQUEsR0FBQVksSUFBQSxDQUFBWixFQUFBO1FBQ0EsTUFBQWEsTUFBQSxHQUFBRixVQUFBLENBQUE1RSxJQUFBLEdBQUE0RSxVQUFBO1VBQUE1RSxJQUFBLEVBQUE0RTtRQUFBO1FBQ0FHLE1BQUEsQ0FBQUMsTUFBQSxDQUFBRixNQUFBLENBQUE5RSxJQUFBO1VBQ0FULEdBQUE7VUFDQThEO1FBQ0E7UUFFQSxNQUFBUCxVQUFBLE9BQUF0RCwyQ0FBQSxDQUFBdUYsTUFBQSxDQUFBQyxNQUFBLEtBQUFGLE1BQUE7VUFDQWpGLElBQUE7VUFDQW1FLFFBQUEsWUFBQUEsUUFBQTtVQUNBckQsUUFBQTtZQUNBMEQsSUFBQSxDQUFBdkIsVUFBQTtZQUNBLFdBQUFnQyxNQUFBLENBQUFuRSxPQUFBLGlCQUFBbUUsTUFBQSxDQUFBbkUsT0FBQSxDQUFBc0UsSUFBQTtVQUNBO1VBQ0FDLEVBQUEsRUFBQVI7UUFDQTtNQUNBLFNBQUFqQyxLQUFBO1FBQ0FBLEtBQUEsQ0FBQVMsT0FBQSwyQ0FBQVQsS0FBQSxDQUFBUyxPQUFBO1FBQ0EsS0FBQS9DLE1BQUEsQ0FBQTZDLElBQUEsQ0FBQVAsS0FBQSxDQUFBUSxRQUFBO1FBQ0FrQyxPQUFBLENBQUExQyxLQUFBLENBQUFBLEtBQUE7TUFDQTtJQUNBO0VBQ0E7QUFDQSxDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZnJvbnRib2FyZC9zcmMvY29tcG9uZW50cy9ib2FyZC9IaWdobGlnaHRlci52dWU/NjhiYyJdLCJzb3VyY2VzQ29udGVudCI6WyI8dGVtcGxhdGU+XG4gIDxub2RlLXZpZXctd3JhcHBlciBjbGFzcz1cImMtaGlnaHRsaWdodGVyXCIgOmNsYXNzPVwieydjLWhpZ2h0bGlnaHRlci0tZnVsbHNjcmVlbic6IGZ1bGxTY3JlZW59XCIgQGNsaWNrLm5hdGl2ZT1cImNsaWNrXCI+XG4gICAgPGRpdiBjb250ZW50ZWRpdGFibGU9XCJmYWxzZVwiIGNsYXNzPVwiYy1oaWdodGxpZ2h0ZXJfX3Rvb2xiYXJcIj5cbiAgICAgIDxkaXYgY2xhc3M9XCJjLWZpZWxkIHYtcmFkaXVzLWJvdHRvbS1ub25lXCI+XG4gICAgICAgIDxTZWxlY3RvciA6b3B0aW9ucz1cIm9wdGlvbnNcIiB2LW1vZGVsPVwic2VsZWN0ZWRMYW5ndWFnZVwiIGNsYXNzPVwiYy1oaWdodGxpZ2h0ZXJfX3NlbGVjdG9yXCIgLz5cbiAgICAgICAgPGJ1dHRvbiBjbGFzcz1cImMtaGlnaHRsaWdodGVyX19idXR0b24gYy1hY3Rpb25cIiBAY2xpY2s9XCJ0b2dnbGVDb2RlVmlld1wiIHYtaWY9XCJpc1J1bmFibGVcIj57eyBzaG93Q29kZVZpZXcgPyAnSGlkZSBjb2RlJyA6ICdTaG93IGNvZGUnIH19PC9idXR0b24+XG4gICAgICAgIDxidXR0b24gY2xhc3M9XCJjLWhpZ2h0bGlnaHRlcl9fYnV0dG9uIGMtYWN0aW9uXCIgQGNsaWNrPVwiZnVsbFNjcmVlbiA9ICFmdWxsU2NyZWVuXCI+e3sgZnVsbFNjcmVlbiA/ICdGdWxsIHNjcmVlbiBleGl0JyA6ICdGdWxsIHNjcmVlbicgfX08L2J1dHRvbj5cbiAgICAgIDwvZGl2PlxuICAgIDwvZGl2PlxuICAgIDxwcmUgdi1zaG93PVwiIWlzUnVuYWJsZSB8fCBzaG93Q29kZVZpZXdcIiBjbGFzcz1cImMtaGlnaHRsaWdodGVyX19obGpzIGhsanNcIiA6Y2xhc3M9XCJ7J2MtaGlnaHRsaWdodGVyX19obGpzLS1ydW5uYWJsZSc6IGlzUnVuYWJsZSB9XCI+PGNvZGU+PG5vZGUtdmlldy1jb250ZW50IC8+PC9jb2RlPjwvcHJlPlxuICAgIDwhLS0gVE9ETzogUmVmYWN0b3Igbm9kZS12aWV3LWNvbnRlbnQgYXMgY3VzdG9tIHRvIGZpeCB0aGUgbm93cmFwIHRpcHRhcCBsaW1pdGF0aW9uIGZvciBjb2RlYmxvY2tzLS0+XG4gICAgPGRpdiByZWY9XCJydW5uZXJcIiB2LXNob3c9XCJpc1J1bmFibGVcIiBjbGFzcz1cImMtaGlnaHRsaWdodGVyX19ydW5uZXJcIiBjb250ZW50ZWRpdGFibGU9XCJmYWxzZVwiPlxuICAgICAgPGRpdiB2LWlmPVwiZXJyb3JzLmxlbmd0aCA+IDBcIj48cHJlIGNsYXNzPVwiYy1oaWdodGxpZ2h0ZXJfX2Vycm9yXCIgdi1mb3I9XCJlcnJvciBpbiBlcnJvcnNcIj48Y29kZT57eyBlcnJvciB9fTwvY29kZT48L3ByZT48L2Rpdj5cbiAgICAgIDxkaXYgdi1pZj1cIndhcm5pbmdzLmxlbmd0aCA+IDBcIj48cHJlIGNsYXNzPVwiYy1oaWdodGxpZ2h0ZXJfX3dhcm5pbmdcIiB2LWZvcj1cIndhcm4gaW4gd2FybmluZ3NcIj48Y29kZT57eyB3YXJuIH19PC9jb2RlPjwvcHJlPjwvZGl2PlxuICAgICAgPGRpdiBjbGFzcz1cImMtaGlnaHRsaWdodGVyX19ydW5uZXJfX2NvbnRlbnRzXCIgcmVmPVwibW91bnRlclwiLz5cbiAgICA8L2Rpdj5cblxuICA8L25vZGUtdmlldy13cmFwcGVyPlxuPC90ZW1wbGF0ZT5cblxuPHNjcmlwdD5cbmltcG9ydCBBUFAgZnJvbSAnc2VydmljZXMvQVBQJ1xuaW1wb3J0IFZ1ZSBmcm9tICd2dWUnXG5pbXBvcnQgeyBOb2RlVmlld0NvbnRlbnQsIG5vZGVWaWV3UHJvcHMsIE5vZGVWaWV3V3JhcHBlciB9IGZyb20gJ0B0aXB0YXAvdnVlLTInXG5pbXBvcnQgU2VsZWN0b3IgZnJvbSAnY29tcG9uZW50cy9zZWxlY3Rvci9TZWxlY3RvcidcblxuZXhwb3J0IGRlZmF1bHQge1xuICBuYW1lOiAnSGlnaGxpZ3RoZXInLFxuICBjb21wb25lbnRzOiB7XG4gICAgTm9kZVZpZXdXcmFwcGVyLFxuICAgIE5vZGVWaWV3Q29udGVudCxcbiAgICBTZWxlY3RvclxuICB9LFxuXG4gIHByb3BzOiBub2RlVmlld1Byb3BzLFxuXG4gIGRhdGEgKCkge1xuICAgIHJldHVybiB7XG4gICAgICBzaG93Q29kZVZpZXc6IHVuZGVmaW5lZCxcbiAgICAgIGVycm9yczogW10sXG4gICAgICB3YXJuaW5nczogW10sXG4gICAgICBmdWxsU2NyZWVuOiBmYWxzZSxcbiAgICAgIGxhbmd1YWdlczogdGhpcy5leHRlbnNpb24ub3B0aW9ucy5sb3dsaWdodC5saXN0TGFuZ3VhZ2VzKClcbiAgICB9XG4gIH0sXG5cbiAgY3JlYXRlZCAoKSB7XG4gICAgdGhpcy5sYXN0Q29udGVudCA9IHRoaXMubm9kZS50ZXh0Q29udGVudFxuICAgIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ3Z1ZTplcnJvcicsIHRoaXMub25FcnJvcilcbiAgICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCd2dWU6d2FybicsIHRoaXMub25XYXJuKVxuICAgIC8vIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ3Nob3dDb2RlVmlldycsIHRoaXMub25TaG93Q29kZVZpZXcpXG4gIH0sXG5cbiAgbW91bnRlZCAoKSB7XG4gICAgdGhpcy5lZGl0b3Iub24oJ3VwZGF0ZScsIHRoaXMucnVuKVxuICAgIC8vIHRoaXMub25TaG93Q29kZVZpZXcoKVxuICAgIHRoaXMucnVuKHRydWUpXG4gIH0sXG5cbiAgYmVmb3JlRGVzdHJveSAoKSB7XG4gICAgdGhpcy5lZGl0b3Iub2ZmKCd1cGRhdGUnLCB0aGlzLnJ1bilcbiAgICBkb2N1bWVudC5yZW1vdmVFdmVudExpc3RlbmVyKCd2dWU6ZXJyb3InLCB0aGlzLm9uRXJyb3IpXG4gICAgZG9jdW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcigndnVlOndhcm4nLCB0aGlzLm9uV2FybilcbiAgICAvLyBkb2N1bWVudC5yZW1vdmVFdmVudExpc3RlbmVyKCdzaG93Q29kZVZpZXcnLCB0aGlzLm9uU2hvd0NvZGVWaWV3KVxuICB9LFxuXG4gIGNvbXB1dGVkOiB7XG4gICAgb3B0aW9ucyAoKSB7XG4gICAgICByZXR1cm4gW1xuICAgICAgICB7IHRleHQ6ICdhdXRvJywgdmFsdWU6IG51bGwgfSxcbiAgICAgICAgeyB0ZXh0OiAnaHRtbCcsIHZhbHVlOiAnaHRtbCcgfSxcbiAgICAgICAgeyB0ZXh0OiAncnVieScsIHZhbHVlOiAncnVieScgfSxcbiAgICAgICAgeyB0ZXh0OiAnamF2YXNjcmlwdCcsIHZhbHVlOiAnamF2YXNjcmlwdCcgfSxcbiAgICAgICAgeyB0ZXh0OiAnanNvbicsIHZhbHVlOiAnanNvbicgfSxcbiAgICAgICAgeyB0ZXh0OiAndnVlJywgdmFsdWU6ICd2dWUnIH0sXG4gICAgICAgIHsgdGV4dDogJ2Jhc2gnLCB2YWx1ZTogJ2Jhc2gnIH1cbiAgICAgICAgLy8gLi4udGhpcy5sYW5ndWFnZXMubWFwKGxhbmd1YWdlID0+ICh7dGV4dDogbGFuZ3VhZ2UsIHZhbHVlOiBsYW5ndWFnZX0pKVxuICAgICAgXVxuICAgIH0sXG4gICAgc2VsZWN0ZWRMYW5ndWFnZToge1xuICAgICAgZ2V0ICgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMubm9kZS5hdHRycy5sYW5ndWFnZVxuICAgICAgfSxcbiAgICAgIHNldCAobGFuZ3VhZ2UpIHtcbiAgICAgICAgdGhpcy51cGRhdGVBdHRyaWJ1dGVzKHsgbGFuZ3VhZ2UgfSlcbiAgICAgICAgdGhpcy5ydW4odHJ1ZSlcbiAgICAgIH1cbiAgICB9LFxuICAgIGlzSFRNTCAoKSB7XG4gICAgICByZXR1cm4gdGhpcy5zZWxlY3RlZExhbmd1YWdlID09PSAnaHRtbCdcbiAgICB9LFxuICAgIGlzV2ViY29tcG9uZW50ICgpIHtcbiAgICAgIHJldHVybiB0aGlzLnNlbGVjdGVkTGFuZ3VhZ2UgPT09ICd2dWUnIHx8IHRoaXMuc2VsZWN0ZWRMYW5ndWFnZSA9PT0gJ3dlYmNvbXBvbmVudCcgLy8gUmV2aWV3XG4gICAgfSxcbiAgICBpc1J1bmFibGUgKCkge1xuICAgICAgcmV0dXJuIHRoaXMuaXNIVE1MIHx8IHRoaXMuaXNXZWJjb21wb25lbnRcbiAgICB9XG4gIH0sXG5cbiAgbWV0aG9kczoge1xuICAgIC8qXG4gICAgb25TaG93Q29kZVZpZXcgKCkge1xuICAgICAgdGhpcy5zaG93Q29kZVZpZXcgPSBsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgnc2hvd0NvZGVWaWV3JykgPT09ICd0cnVlJ1xuICAgIH0sXG4gICAgKi9cbiAgICB0b2dnbGVDb2RlVmlldyAoKSB7XG4gICAgICAvLyBsb2NhbFN0b3JhZ2Uuc2V0SXRlbSgnc2hvd0NvZGVWaWV3JywgIXRoaXMuc2hvd0NvZGVWaWV3KVxuICAgICAgLy8gZG9jdW1lbnQuZGlzcGF0Y2hFdmVudChuZXcgRXZlbnQoJ3Nob3dDb2RlVmlldycpKVxuICAgICAgdGhpcy5zaG93Q29kZVZpZXcgPSAhdGhpcy5zaG93Q29kZVZpZXdcbiAgICB9LFxuICAgIG9uRXJyb3IgKGV2ZW50KSB7XG4gICAgICBjb25zdCB7IGVycm9yLCB2bSwgaW5mbyB9ID0gZXZlbnQuZGV0YWlsXG4gICAgICBpZiAodm0gJiYgdm0uY2xvc2VzdENvbXBvbmVudCgnUnVubmVyJykgPT09IHRoaXMubGFzdFJ1bm5lcikge1xuICAgICAgICB0aGlzLmRlc3Ryb3lSdW5uZXIoKVxuICAgICAgICB0aGlzLmVycm9ycy5wdXNoKGVycm9yLnRvU3RyaW5nKCkpXG4gICAgICB9XG4gICAgfSxcbiAgICBvbldhcm4gKGV2ZW50KSB7XG4gICAgICBjb25zdCB7IG1lc3NhZ2UsIHZtLCB0cmFjZSB9ID0gZXZlbnQuZGV0YWlsXG4gICAgICBpZiAodm0gJiYgdm0uY2xvc2VzdENvbXBvbmVudCgnUnVubmVyJykgPT09IHRoaXMubGFzdFJ1bm5lcikge1xuICAgICAgICB0aGlzLmRlc3Ryb3lSdW5uZXIoKVxuICAgICAgICB0aGlzLndhcm5pbmdzLnB1c2gobWVzc2FnZS50b1N0cmluZygpKVxuICAgICAgfVxuICAgIH0sXG4gICAgY2xpY2sgKCkge1xuICAgICAgd2luZG93LkhpZ2hsaWd0aGVyID0gdGhpc1xuICAgIH0sXG4gICAgYXN5bmMgcnVuIChmb3JjZSkge1xuICAgICAgY29uc3QgY29udGVudCA9IHRoaXMubm9kZS50ZXh0Q29udGVudFxuICAgICAgaWYgKGZvcmNlICE9PSB0cnVlICYmIGNvbnRlbnQgPT09IHRoaXMubGFzdENvbnRlbnQpIHJldHVyblxuICAgICAgdGhpcy5kZXN0cm95UnVubmVyKClcbiAgICAgIHRoaXMuZXJyb3JzID0gW11cbiAgICAgIHRoaXMud2FybmluZ3MgPSBbXVxuICAgICAgYXdhaXQgdGhpcy4kbmV4dFRpY2soKVxuICAgICAgaWYgKHRoaXMuaXNIVE1MKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnJ1bldlYmNvbXBvbmVudCgpXG4gICAgICB9IGVsc2UgaWYgKHRoaXMuaXNXZWJjb21wb25lbnQpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMucnVuV2ViY29tcG9uZW50KClcbiAgICAgIH1cbiAgICB9LFxuICAgIC8qXG4gICAgcnVuSFRNTCAoKSB7XG4gICAgICBjb25zdCBzZWxmID0gdGhpc1xuICAgICAgY29uc3QgY29udGVudCA9IHRoaXMubm9kZS50ZXh0Q29udGVudFxuICAgICAgY29uc3QgdGVtcGxhdGUgPSB0aGlzLmxhc3RDb250ZW50ID0gY29udGVudFxuICAgICAgY29uc3QgYmFzZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpXG4gICAgICB0aGlzLiRyZWZzLm1vdW50ZXIuYXBwZW5kQ2hpbGQoYmFzZSlcbiAgICAgIGNvbnN0IGxhc3RSdW5uZXIgPSBuZXcgVnVlKHtcbiAgICAgICAgbmFtZTogJ1J1bm5lcicsXG4gICAgICAgIHRlbXBsYXRlOiAnPGRpdj4nICsgdGVtcGxhdGUgKyAnPC9kaXY+JyxcbiAgICAgICAgZGF0YToge30sXG4gICAgICAgIGNyZWF0ZWQgKCkge1xuICAgICAgICAgIHNlbGYubGFzdFJ1bm5lciA9IHRoaXNcbiAgICAgICAgfSxcbiAgICAgICAgZWw6IGJhc2VcbiAgICAgIH0pXG4gICAgfSxcbiAgICAqL1xuICAgIGRlc3Ryb3lSdW5uZXIgKCkge1xuICAgICAgaWYgKHRoaXMubGFzdFJ1bm5lcikge1xuICAgICAgICAvLyB0aGlzLmxhc3RSdW5uZXIuJGRlc3Ryb3koKSAvLyBUT0RPOiBSRXZpZXcgd2VpcmQgZXJyb3JcbiAgICAgICAgdGhpcy4kcmVmcy5tb3VudGVyLnRleHRDb250ZW50ID0gJydcbiAgICAgIH1cbiAgICB9LFxuICAgIHBhcnNlV2ViY29tcG9uZW50ICh3ZWJjb21wb25lbnQpIHtcbiAgICAgIHRyeSB7XG4gICAgICAgIGNvbnN0IHdlYmNvbXBvbmVudFJlZ2V4ID0gLyg/Ojx0ZW1wbGF0ZT5cXHMqKCg/Oi58XFxuKSopXFxzKjxcXC90ZW1wbGF0ZT4pXFxzKig/OjxzY3JpcHQ+XFxzKigoPzoufFxcbikqKVxccyo8XFwvc2NyaXB0Pik/XFxzKig/OjxzdHlsZT5cXHMqKCg/Oi58XFxuKSopXFxzKjxcXC9zdHlsZT4pP1xccyovZ21cbiAgICAgICAgY29uc3QgWywgdGVtcGxhdGUsIGpzLCBjc3NdID0gd2ViY29tcG9uZW50UmVnZXguZXhlYyh3ZWJjb21wb25lbnQpXG4gICAgICAgIHJldHVybiB7IHRlbXBsYXRlLCBqcywgY3NzIH1cbiAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcignSW52YWxpZCBXZWJjb21wb25lbnQgZm9ybWF0JylcbiAgICAgIH1cbiAgICB9LFxuICAgIHJ1bldlYmNvbXBvbmVudCAoKSB7XG4gICAgICBjb25zdCBzZWxmID0gdGhpc1xuICAgICAgY29uc3QgY29udGVudCA9IHRoaXMubm9kZS50ZXh0Q29udGVudFxuXG4gICAgICB0cnkge1xuICAgICAgICBjb25zdCB3ZWJjb21wb25lbnQgPSB0aGlzLmxhc3RDb250ZW50ID0gY29udGVudFxuICAgICAgICBjb25zdCB7IHRlbXBsYXRlLCBqcywgY3NzIH0gPSB0aGlzLnBhcnNlV2ViY29tcG9uZW50KHdlYmNvbXBvbmVudClcbiAgICAgICAgY29uc3QgYmFzZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpXG4gICAgICAgIGNvbnN0IHN0eWxlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc3R5bGUnKVxuICAgICAgICBzdHlsZS50eXBlID0gJ3RleHQvY3NzJ1xuICAgICAgICBzdHlsZS50ZXh0Q29udGVudCA9IGNzc1xuICAgICAgICBjb25zdCBjb21wb25lbnQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdjb21wb25lbnQnKVxuICAgICAgICBiYXNlLmFwcGVuZENoaWxkKHN0eWxlKVxuICAgICAgICBiYXNlLmFwcGVuZENoaWxkKGNvbXBvbmVudClcbiAgICAgICAgdGhpcy4kcmVmcy5tb3VudGVyLmFwcGVuZENoaWxkKGJhc2UpXG5cbiAgICAgICAgY29uc3QgZXZhbENvbmZpZyA9IGpzID8gZXZhbChqcykgOiB7fSAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLWV2YWxcbiAgICAgICAgY29uc3QgY29uZmlnID0gZXZhbENvbmZpZy5kYXRhID8gZXZhbENvbmZpZyA6IHsgZGF0YTogZXZhbENvbmZpZyB9XG4gICAgICAgIE9iamVjdC5hc3NpZ24oY29uZmlnLmRhdGEsIHtcbiAgICAgICAgICBBUFAsXG4gICAgICAgICAgd2luZG93XG4gICAgICAgIH0pXG5cbiAgICAgICAgY29uc3QgbGFzdFJ1bm5lciA9IG5ldyBWdWUoT2JqZWN0LmFzc2lnbih7fSwgY29uZmlnLCB7XG4gICAgICAgICAgbmFtZTogJ1J1bm5lcicsXG4gICAgICAgICAgdGVtcGxhdGU6ICc8ZGl2PicgKyB0ZW1wbGF0ZSArICc8L2Rpdj4nLFxuICAgICAgICAgIGNyZWF0ZWQgKCkge1xuICAgICAgICAgICAgc2VsZi5sYXN0UnVubmVyID0gdGhpc1xuICAgICAgICAgICAgaWYgKHR5cGVvZiBjb25maWcuY3JlYXRlZCA9PT0gJ2Z1bmN0aW9uJykgY29uZmlnLmNyZWF0ZWQuY2FsbCh0aGlzKVxuICAgICAgICAgIH0sXG4gICAgICAgICAgZWw6IGNvbXBvbmVudFxuICAgICAgICB9KSlcbiAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgIGVycm9yLm1lc3NhZ2UgPSAnSGlnaGxpZ3RoZXIgRXJyb3IgY3JlYXRpbmcgcnVubmVyOiAnICsgZXJyb3IubWVzc2FnZVxuICAgICAgICB0aGlzLmVycm9ycy5wdXNoKGVycm9yLnRvU3RyaW5nKCkpXG4gICAgICAgIGNvbnNvbGUuZXJyb3IoZXJyb3IpXG4gICAgICB9XG4gICAgfVxuICB9XG59XG48L3NjcmlwdD5cbiJdLCJuYW1lcyI6WyJBUFAiLCJWdWUiLCJOb2RlVmlld0NvbnRlbnQiLCJub2RlVmlld1Byb3BzIiwiTm9kZVZpZXdXcmFwcGVyIiwiU2VsZWN0b3IiLCJuYW1lIiwiY29tcG9uZW50cyIsInByb3BzIiwiZGF0YSIsInNob3dDb2RlVmlldyIsInVuZGVmaW5lZCIsImVycm9ycyIsIndhcm5pbmdzIiwiZnVsbFNjcmVlbiIsImxhbmd1YWdlcyIsImV4dGVuc2lvbiIsIm9wdGlvbnMiLCJsb3dsaWdodCIsImxpc3RMYW5ndWFnZXMiLCJjcmVhdGVkIiwibGFzdENvbnRlbnQiLCJub2RlIiwidGV4dENvbnRlbnQiLCJkb2N1bWVudCIsImFkZEV2ZW50TGlzdGVuZXIiLCJvbkVycm9yIiwib25XYXJuIiwibW91bnRlZCIsImVkaXRvciIsIm9uIiwicnVuIiwiYmVmb3JlRGVzdHJveSIsIm9mZiIsInJlbW92ZUV2ZW50TGlzdGVuZXIiLCJjb21wdXRlZCIsInRleHQiLCJ2YWx1ZSIsInNlbGVjdGVkTGFuZ3VhZ2UiLCJnZXQiLCJhdHRycyIsImxhbmd1YWdlIiwic2V0IiwidXBkYXRlQXR0cmlidXRlcyIsImlzSFRNTCIsImlzV2ViY29tcG9uZW50IiwiaXNSdW5hYmxlIiwibWV0aG9kcyIsInRvZ2dsZUNvZGVWaWV3IiwiZXZlbnQiLCJlcnJvciIsInZtIiwiaW5mbyIsImRldGFpbCIsImNsb3Nlc3RDb21wb25lbnQiLCJsYXN0UnVubmVyIiwiZGVzdHJveVJ1bm5lciIsInB1c2giLCJ0b1N0cmluZyIsIm1lc3NhZ2UiLCJ0cmFjZSIsImNsaWNrIiwid2luZG93IiwiSGlnaGxpZ3RoZXIiLCJmb3JjZSIsImNvbnRlbnQiLCIkbmV4dFRpY2siLCJydW5XZWJjb21wb25lbnQiLCIkcmVmcyIsIm1vdW50ZXIiLCJwYXJzZVdlYmNvbXBvbmVudCIsIndlYmNvbXBvbmVudCIsIndlYmNvbXBvbmVudFJlZ2V4IiwidGVtcGxhdGUiLCJqcyIsImNzcyIsImV4ZWMiLCJFcnJvciIsInNlbGYiLCJiYXNlIiwiY3JlYXRlRWxlbWVudCIsInN0eWxlIiwidHlwZSIsImNvbXBvbmVudCIsImFwcGVuZENoaWxkIiwiZXZhbENvbmZpZyIsImV2YWwiLCJjb25maWciLCJPYmplY3QiLCJhc3NpZ24iLCJjYWxsIiwiZWwiLCJjb25zb2xlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///8950\n")},3737:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   A: () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var vue__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(9840);\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (vue__WEBPACK_IMPORTED_MODULE_0__[\"default\"].component('SnapViewer', {\n  components: {},\n  props: {\n    value: {\n      type: String,\n      default: null\n    }\n  },\n  data: () => ({\n    html: undefined\n  }),\n  watch: {},\n  created() {\n    const exports = {};\n    eval(this.value); // eslint-disable-line no-eval\n    const snaps = exports;\n    const sanitizer = /(<div\\n(?:\\s*.*[^/][^>]\\n)*\\s*)(\\/>)/gm;\n    const blocks = Object.entries(snaps).map(_ref => {\n      let [snapId, snapHtml] = _ref;\n      const sanitized = snapHtml.replace(sanitizer, '$1></div>');\n      return '<div class=\"c-snap-viewer__block\"><h1 class=\"c-snap-viewer__title\">' + snapId + '</h1><div class=\"c-snap-viewer__snap\">' + sanitized + '</div></div>';\n    });\n    const html = '<body>' + blocks.join('') + '</body>';\n    const parser = new DOMParser();\n    const serializer = new XMLSerializer();\n    const domObject = parser.parseFromString(html || '', 'text/html');\n    const sanitized = serializer.serializeToString(domObject);\n    this.html = sanitized;\n  },\n  beforeDestroy() {},\n  methods: {}\n}));//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzczNy5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBT0E7QUFDQSxpRUFBQUEsMkNBQUEsQ0FBQUMsU0FBQTtFQUNBQyxVQUFBLEdBQ0E7RUFDQUMsS0FBQTtJQUNBQyxLQUFBO01BQUFDLElBQUEsRUFBQUMsTUFBQTtNQUFBQyxPQUFBO0lBQUE7RUFDQTtFQUNBQyxJQUFBLEVBQUFBLENBQUE7SUFDQUMsSUFBQSxFQUFBQztFQUNBO0VBQ0FDLEtBQUEsR0FDQTtFQUNBQyxRQUFBO0lBQ0EsTUFBQUMsT0FBQTtJQUNBQyxJQUFBLE1BQUFWLEtBQUE7SUFDQSxNQUFBVyxLQUFBLEdBQUFGLE9BQUE7SUFFQSxNQUFBRyxTQUFBO0lBQ0EsTUFBQUMsTUFBQSxHQUFBQyxNQUFBLENBQUFDLE9BQUEsQ0FBQUosS0FBQSxFQUFBSyxHQUFBLENBQUFDLElBQUE7TUFBQSxLQUFBQyxNQUFBLEVBQUFDLFFBQUEsSUFBQUYsSUFBQTtNQUNBLE1BQUFHLFNBQUEsR0FBQUQsUUFBQSxDQUFBRSxPQUFBLENBQUFULFNBQUE7TUFDQSwrRUFBQU0sTUFBQSw4Q0FBQUUsU0FBQTtJQUNBO0lBQ0EsTUFBQWYsSUFBQSxjQUFBUSxNQUFBLENBQUFTLElBQUE7SUFFQSxNQUFBQyxNQUFBLE9BQUFDLFNBQUE7SUFDQSxNQUFBQyxVQUFBLE9BQUFDLGFBQUE7SUFDQSxNQUFBQyxTQUFBLEdBQUFKLE1BQUEsQ0FBQUssZUFBQSxDQUFBdkIsSUFBQTtJQUNBLE1BQUFlLFNBQUEsR0FBQUssVUFBQSxDQUFBSSxpQkFBQSxDQUFBRixTQUFBO0lBRUEsS0FBQXRCLElBQUEsR0FBQWUsU0FBQTtFQUNBO0VBQ0FVLGNBQUEsR0FDQTtFQUNBQyxPQUFBLEdBQ0E7QUFDQSxFQUFFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZnJvbnRib2FyZC9zcmMvY29tcG9uZW50cy9ib2FyZC9TbmFwVmlld2VyLnZ1ZT82M2YyIl0sInNvdXJjZXNDb250ZW50IjpbIjx0ZW1wbGF0ZT5cbiAgPGRpdiBjbGFzcz1cImMtc25hcC12aWV3ZXJcIj5cbiAgICA8ZGl2IGNsYXNzPVwiYy1zbmFwLXZpZXdlcl9fcGFnZVwiIHYtaHRtbD1cImh0bWxcIj48L2Rpdj5cbiAgPC9kaXY+XG48L3RlbXBsYXRlPlxuXG48c2NyaXB0PlxuaW1wb3J0IFZ1ZSBmcm9tICd2dWUnXG5leHBvcnQgZGVmYXVsdCBWdWUuY29tcG9uZW50KCdTbmFwVmlld2VyJywge1xuICBjb21wb25lbnRzOiB7XG4gIH0sXG4gIHByb3BzOiB7XG4gICAgdmFsdWU6IHsgdHlwZTogU3RyaW5nLCBkZWZhdWx0OiBudWxsIH1cbiAgfSxcbiAgZGF0YTogKCkgPT4gKHtcbiAgICBodG1sOiB1bmRlZmluZWRcbiAgfSksXG4gIHdhdGNoOiB7XG4gIH0sXG4gIGNyZWF0ZWQgKCkge1xuICAgIGNvbnN0IGV4cG9ydHMgPSB7fVxuICAgIGV2YWwodGhpcy52YWx1ZSkgLy8gZXNsaW50LWRpc2FibGUtbGluZSBuby1ldmFsXG4gICAgY29uc3Qgc25hcHMgPSBleHBvcnRzXG5cbiAgICBjb25zdCBzYW5pdGl6ZXIgPSAvKDxkaXZcXG4oPzpcXHMqLipbXi9dW14+XVxcbikqXFxzKikoXFwvPikvZ21cbiAgICBjb25zdCBibG9ja3MgPSBPYmplY3QuZW50cmllcyhzbmFwcykubWFwKChbc25hcElkLCBzbmFwSHRtbF0pID0+IHtcbiAgICAgIGNvbnN0IHNhbml0aXplZCA9IHNuYXBIdG1sLnJlcGxhY2Uoc2FuaXRpemVyLCAnJDE+PC9kaXY+JylcbiAgICAgIHJldHVybiAnPGRpdiBjbGFzcz1cImMtc25hcC12aWV3ZXJfX2Jsb2NrXCI+PGgxIGNsYXNzPVwiYy1zbmFwLXZpZXdlcl9fdGl0bGVcIj4nICsgc25hcElkICsgJzwvaDE+PGRpdiBjbGFzcz1cImMtc25hcC12aWV3ZXJfX3NuYXBcIj4nICsgc2FuaXRpemVkICsgJzwvZGl2PjwvZGl2PidcbiAgICB9KVxuICAgIGNvbnN0IGh0bWwgPSAnPGJvZHk+JyArIGJsb2Nrcy5qb2luKCcnKSArICc8L2JvZHk+J1xuXG4gICAgY29uc3QgcGFyc2VyID0gbmV3IERPTVBhcnNlcigpXG4gICAgY29uc3Qgc2VyaWFsaXplciA9IG5ldyBYTUxTZXJpYWxpemVyKClcbiAgICBjb25zdCBkb21PYmplY3QgPSBwYXJzZXIucGFyc2VGcm9tU3RyaW5nKGh0bWwgfHwgJycsICd0ZXh0L2h0bWwnKVxuICAgIGNvbnN0IHNhbml0aXplZCA9IHNlcmlhbGl6ZXIuc2VyaWFsaXplVG9TdHJpbmcoZG9tT2JqZWN0KVxuXG4gICAgdGhpcy5odG1sID0gc2FuaXRpemVkXG4gIH0sXG4gIGJlZm9yZURlc3Ryb3kgKCkge1xuICB9LFxuICBtZXRob2RzOiB7XG4gIH1cbn0pXG48L3NjcmlwdD5cbiJdLCJuYW1lcyI6WyJWdWUiLCJjb21wb25lbnQiLCJjb21wb25lbnRzIiwicHJvcHMiLCJ2YWx1ZSIsInR5cGUiLCJTdHJpbmciLCJkZWZhdWx0IiwiZGF0YSIsImh0bWwiLCJ1bmRlZmluZWQiLCJ3YXRjaCIsImNyZWF0ZWQiLCJleHBvcnRzIiwiZXZhbCIsInNuYXBzIiwic2FuaXRpemVyIiwiYmxvY2tzIiwiT2JqZWN0IiwiZW50cmllcyIsIm1hcCIsIl9yZWYiLCJzbmFwSWQiLCJzbmFwSHRtbCIsInNhbml0aXplZCIsInJlcGxhY2UiLCJqb2luIiwicGFyc2VyIiwiRE9NUGFyc2VyIiwic2VyaWFsaXplciIsIlhNTFNlcmlhbGl6ZXIiLCJkb21PYmplY3QiLCJwYXJzZUZyb21TdHJpbmciLCJzZXJpYWxpemVUb1N0cmluZyIsImJlZm9yZURlc3Ryb3kiLCJtZXRob2RzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///3737\n")},1938:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  \"default\": () => (/* binding */ Frontboard)\n});\n\n;// CONCATENATED MODULE: ./node_modules/babel-loader/lib/index.js!./node_modules/vue-loader/lib/loaders/templateLoader.js??ruleSet[1].rules[2]!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/components/board/Frontboard.vue?vue&type=template&id=063b7023\nvar render = function render() {\n  var _vm = this,\n    _c = _vm._self._c;\n  return !_vm.isHidden ? _c('div', {\n    staticClass: \"--ds c-frontboard\",\n    class: {\n      'v-darkmode': _vm.darkModeActive\n    }\n  }, [_c('div', {\n    staticClass: \"c-frontboard__toolbar\"\n  }, [_c('div', [_vm._m(0), _vm._v(\" \"), _c('span', {\n    staticClass: \"c-frontboard__title\"\n  }, [_vm._v(_vm._s(_vm.title))])]), _vm._v(\" \"), _c('div', [_c('div', {\n    staticClass: \"c-frontboard__darkmode\",\n    on: {\n      \"click\": _vm.darkmodeToggle\n    }\n  }, [_vm.darkModeActive ? _c('span', {\n    staticClass: \"fi fi-rs-toggle-on\"\n  }) : _c('span', {\n    staticClass: \"fi fi-rs-toggle-off\"\n  }), _vm._v(\"\\n        Dark mode\\n      \")]), _vm._v(\" \"), _c('div', {\n    staticClass: \"c-frontboard__darkmode\",\n    on: {\n      \"click\": function ($event) {\n        return _vm.palette.toggle();\n      }\n    }\n  }, [_vm.palette.active ? _c('span', {\n    staticClass: \"fi fi-rs-toggle-on\"\n  }) : _c('span', {\n    staticClass: \"fi fi-rs-toggle-off\"\n  }), _vm._v(\"\\n        Palette\\n      \")]), _vm._v(\" \"), _c('div', {\n    staticClass: \"c-frontboard__exit\",\n    on: {\n      \"click\": _vm.exit\n    }\n  }, [_vm._v(\"Exit\")])])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"c-frontboard__main\"\n  }, [_c('div', {\n    staticClass: \"c-frontboard__main-contents\"\n  }, [_c('div', {\n    staticClass: \"c-frontboard__menu\"\n  }, _vm._l(_vm.options, function (option) {\n    return _c('div', [_c('div', {\n      staticClass: \"c-frontboard__option__handler\",\n      class: {\n        'active': !option.options && _vm.current && option.loader.attrs.path === _vm.current.attrs.path\n      },\n      on: {\n        \"click\": function ($event) {\n          option.options ? option.opened = !option.opened : _vm.current = option.loader;\n        }\n      }\n    }, [_vm._v(_vm._s(option.text))]), _vm._v(\" \"), option.opened ? _c('div', {\n      staticClass: \"c-frontboard__options\"\n    }, _vm._l(option.options, function (suboption) {\n      return _c('div', {\n        staticClass: \"c-frontboard__options__item\",\n        class: {\n          'active': _vm.current && suboption.loader.attrs.path === _vm.current.attrs.path\n        },\n        on: {\n          \"click\": function ($event) {\n            return _vm.load(suboption.loader);\n          }\n        }\n      }, [_vm._v(_vm._s(suboption.text))]);\n    }), 0) : _vm._e()]);\n  }), 0), _vm._v(\" \"), _c('div', {\n    staticClass: \"c-frontboard__body\"\n  }, [_vm.current ? _c(_vm.current.component, _vm._b({\n    key: _vm.current.attrs.path,\n    tag: \"component\"\n  }, 'component', _vm.current.attrs, false)) : _vm._e()], 1)])]), _vm._v(\" \"), _c('Palette')], 1) : _vm._e();\n};\nvar staticRenderFns = [function () {\n  var _vm = this,\n    _c = _vm._self._c;\n  return _c('span', {\n    staticClass: \"c-frontboard__logo\"\n  }, [_c('span', [_vm._v(\"🦦\")]), _vm._v(\" Frontboard\")]);\n}];\n\n;// CONCATENATED MODULE: ./src/components/board/Frontboard.vue?vue&type=template&id=063b7023\n\n;// CONCATENATED MODULE: ./node_modules/babel-loader/lib/index.js!./node_modules/vue-loader/lib/loaders/templateLoader.js??ruleSet[1].rules[2]!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/components/board/FileLoader.vue?vue&type=template&id=0d1a9901\nvar FileLoadervue_type_template_id_0d1a9901_render = function render() {\n  var _vm = this,\n    _c = _vm._self._c;\n  return _c('div', {\n    staticClass: \"c-file-loader\"\n  }, [_vm.md !== undefined ? _c('RichEditor', {\n    staticClass: \"c-file-loader__content\",\n    attrs: {\n      \"from-memory\": !!_vm.fromMemory\n    },\n    on: {\n      \"input\": _vm.save,\n      \"clearMemory\": _vm.onClearMemory\n    },\n    model: {\n      value: _vm.md,\n      callback: function ($$v) {\n        _vm.md = $$v;\n      },\n      expression: \"md\"\n    }\n  }) : _vm.snap ? _c('SnapViewer', {\n    staticClass: \"c-file-loader__content\",\n    model: {\n      value: _vm.snap,\n      callback: function ($$v) {\n        _vm.snap = $$v;\n      },\n      expression: \"snap\"\n    }\n  }) : _c('div', {\n    staticClass: \"c-file-loader__content\"\n  })], 1);\n};\nvar FileLoadervue_type_template_id_0d1a9901_staticRenderFns = [];\n\n// EXTERNAL MODULE: ./src/services/APP.js\nvar APP = __webpack_require__(6929);\n// EXTERNAL MODULE: ./src/components/selector/Selector.vue + 11 modules\nvar Selector = __webpack_require__(6613);\n;// CONCATENATED MODULE: ./node_modules/babel-loader/lib/index.js!./node_modules/vue-loader/lib/loaders/templateLoader.js??ruleSet[1].rules[2]!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/components/board/RichEditor.vue?vue&type=template&id=32921ccc\nvar RichEditorvue_type_template_id_32921ccc_render = function render() {\n  var _vm = this,\n    _c = _vm._self._c,\n    _setup = _vm._self._setupProxy;\n  return _c('div', {\n    staticClass: \"c-rich-editor\"\n  }, [_c('div', {\n    staticClass: \"c-rich-editor__top\"\n  }, [_c('div', {\n    staticClass: \"c-rich-editor__toolbar\"\n  }, [_c('span', {\n    staticClass: \"c-rich-editor__btn-group\"\n  }, [_c('button', {\n    class: _vm.editor.isActive('bold') ? _vm.activeClass : null,\n    attrs: {\n      \"title\": \"Bold\"\n    },\n    on: {\n      \"mousedown\": function ($event) {\n        $event.preventDefault();\n        $event.stopPropagation();\n        return _vm.editor.commands.toggleBold();\n      }\n    }\n  }, [_c('span', {\n    staticClass: \"fi fi-rs-bold\"\n  })]), _vm._v(\" \"), _c('button', {\n    class: _vm.editor.isActive('italic') ? _vm.activeClass : null,\n    attrs: {\n      \"title\": \"Italic\"\n    },\n    on: {\n      \"mousedown\": function ($event) {\n        $event.preventDefault();\n        $event.stopPropagation();\n        return _vm.editor.commands.toggleItalic();\n      }\n    }\n  }, [_c('span', {\n    staticClass: \"fi fi-rs-italic\"\n  })]), _vm._v(\" \"), _c('button', {\n    class: _vm.editor.isActive('strike') ? _vm.activeClass : null,\n    attrs: {\n      \"title\": \"Strike\"\n    },\n    on: {\n      \"mousedown\": function ($event) {\n        $event.preventDefault();\n        $event.stopPropagation();\n        return _vm.editor.commands.toggleStrike();\n      }\n    }\n  }, [_c('span', {\n    staticClass: \"fi fi-rs-strikethrough\"\n  })]), _vm._v(\" \"), _c('button', {\n    class: _vm.editor.isActive('underline') ? _vm.activeClass : null,\n    attrs: {\n      \"title\": \"Underline\"\n    },\n    on: {\n      \"mousedown\": function ($event) {\n        $event.preventDefault();\n        $event.stopPropagation();\n        return _vm.editor.commands.toggleUnderline();\n      }\n    }\n  }, [_c('span', {\n    staticClass: \"fi fi-rs-underline\"\n  })]), _vm._v(\" \"), _c('button', {\n    class: _vm.editor.isActive('highlight') ? _vm.activeClass : null,\n    attrs: {\n      \"title\": \"Highlight\"\n    },\n    on: {\n      \"mousedown\": function ($event) {\n        $event.preventDefault();\n        $event.stopPropagation();\n        return _vm.editor.commands.toggleHighlight();\n      }\n    }\n  }, [_c('span', {\n    staticClass: \"fi fi-rs-highlighter-line\"\n  })]), _vm._v(\" \"), _c('button', {\n    class: _vm.editor.isActive('code') ? _vm.activeClass : null,\n    attrs: {\n      \"title\": \"code\"\n    },\n    on: {\n      \"mousedown\": function ($event) {\n        $event.preventDefault();\n        $event.stopPropagation();\n        return _vm.editor.commands.toggleCode();\n      }\n    }\n  }, [_c('span', {\n    staticClass: \"fi fi-rs-code-simple\"\n  })]), _vm._v(\" \"), _c('button', {\n    class: _vm.editor.isActive('link') ? _vm.activeClass : null,\n    attrs: {\n      \"title\": \"link\"\n    },\n    on: {\n      \"mousedown\": function ($event) {\n        $event.preventDefault();\n        $event.stopPropagation();\n        return _vm.toggleLinkUrl.apply(null, arguments);\n      }\n    }\n  }, [_c('span', {\n    staticClass: \"fi fi-rs-link\"\n  })])]), _vm._v(\" \"), _c('span', {\n    staticClass: \"c-rich-editor__btn-group\"\n  }, [_c('button', {\n    class: _vm.editor.isActive('codeBlock') ? _vm.activeClass : null,\n    attrs: {\n      \"title\": \"Code block\"\n    },\n    on: {\n      \"mousedown\": function ($event) {\n        $event.preventDefault();\n        $event.stopPropagation();\n        return _vm.editor.commands.toggleCodeBlock();\n      }\n    }\n  }, [_c('span', {\n    staticClass: \"fi fi-rs-rectangle-code\"\n  })]), _vm._v(\" \"), _c('button', {\n    class: _vm.editor.isActive('paragraph') ? _vm.activeClass : null,\n    attrs: {\n      \"title\": \"Paragraph\"\n    },\n    on: {\n      \"mousedown\": function ($event) {\n        $event.preventDefault();\n        $event.stopPropagation();\n        return _vm.editor.commands.setParagraph();\n      }\n    }\n  }, [_c('span', {\n    staticClass: \"fi fi-rs-paragraph\"\n  })]), _vm._v(\" \"), _c('button', {\n    class: _vm.editor.isActive('heading', {\n      level: 1\n    }) ? _vm.activeClass : null,\n    attrs: {\n      \"title\": \"H1\"\n    },\n    on: {\n      \"mousedown\": function ($event) {\n        $event.preventDefault();\n        $event.stopPropagation();\n        return _vm.editor.commands.toggleHeading({\n          level: 1\n        });\n      }\n    }\n  }, [_c('span', {\n    staticClass: \"fi fi-rs-h1\"\n  })]), _vm._v(\" \"), _c('button', {\n    class: _vm.editor.isActive('heading', {\n      level: 2\n    }) ? _vm.activeClass : null,\n    attrs: {\n      \"title\": \"H2\"\n    },\n    on: {\n      \"mousedown\": function ($event) {\n        $event.preventDefault();\n        $event.stopPropagation();\n        return _vm.editor.commands.toggleHeading({\n          level: 2\n        });\n      }\n    }\n  }, [_c('span', {\n    staticClass: \"fi fi-rs-h2\"\n  })]), _vm._v(\" \"), _c('button', {\n    class: _vm.editor.isActive('heading', {\n      level: 3\n    }) ? _vm.activeClass : null,\n    attrs: {\n      \"title\": \"H3\"\n    },\n    on: {\n      \"mousedown\": function ($event) {\n        $event.preventDefault();\n        $event.stopPropagation();\n        return _vm.editor.commands.toggleHeading({\n          level: 3\n        });\n      }\n    }\n  }, [_c('span', {\n    staticClass: \"fi fi-rs-h3\"\n  })]), _vm._v(\" \"), _c('button', {\n    class: _vm.editor.isActive('heading', {\n      level: 4\n    }) ? _vm.activeClass : null,\n    attrs: {\n      \"title\": \"H4\"\n    },\n    on: {\n      \"mousedown\": function ($event) {\n        $event.preventDefault();\n        $event.stopPropagation();\n        return _vm.editor.commands.toggleHeading({\n          level: 4\n        });\n      }\n    }\n  }, [_c('span', {\n    staticClass: \"fi fi-rs-h4\"\n  })]), _vm._v(\" \"), _c('button', {\n    class: _vm.editor.isActive('blockquote') ? _vm.activeClass : null,\n    attrs: {\n      \"title\": \"Blockquote\"\n    },\n    on: {\n      \"mousedown\": function ($event) {\n        $event.preventDefault();\n        $event.stopPropagation();\n        return _vm.editor.commands.toggleBlockquote();\n      }\n    }\n  }, [_c('span', {\n    staticClass: \"fi fi-rs-block-quote\"\n  })])]), _vm._v(\" \"), _c('span', {\n    staticClass: \"c-rich-editor__btn-group\"\n  }, [_c('button', {\n    attrs: {\n      \"title\": \"Horizontal rule\"\n    },\n    on: {\n      \"click\": function ($event) {\n        return _vm.editor.commands.setHorizontalRule();\n      }\n    }\n  }, [_c('span', {\n    staticClass: \"fi fi-rs-horizontal-rule\"\n  })]), _vm._v(\" \"), _c('button', {\n    class: _vm.editor.isActive('bulletList') ? _vm.activeClass : null,\n    attrs: {\n      \"title\": \"Bullet list\"\n    },\n    on: {\n      \"mousedown\": function ($event) {\n        $event.preventDefault();\n        $event.stopPropagation();\n        return _vm.editor.commands.toggleBulletList();\n      }\n    }\n  }, [_c('span', {\n    staticClass: \"fi fi-rs-list\"\n  })]), _vm._v(\" \"), _c('button', {\n    class: _vm.editor.isActive('orderedList') ? _vm.activeClass : null,\n    attrs: {\n      \"title\": \"Ordered list\"\n    },\n    on: {\n      \"mousedown\": function ($event) {\n        $event.preventDefault();\n        $event.stopPropagation();\n        return _vm.editor.commands.toggleOrderedList();\n      }\n    }\n  }, [_c('span', {\n    staticClass: \"fi fi-rs-bars-sort\"\n  })]), _vm._v(\" \"), _c('button', {\n    class: _vm.editor.isActive('taskList') ? _vm.activeClass : null,\n    attrs: {\n      \"title\": \"Task list\"\n    },\n    on: {\n      \"mousedown\": function ($event) {\n        $event.preventDefault();\n        $event.stopPropagation();\n        return _vm.editor.commands.toggleTaskList();\n      }\n    }\n  }, [_c('span', {\n    staticClass: \"fi fi-rs-list-check\"\n  })])]), _vm._v(\" \"), _c('span', {\n    staticClass: \"c-rich-editor__btn-group\"\n  }, [_c('button', {\n    attrs: {\n      \"title\": \"Undo\"\n    },\n    on: {\n      \"click\": function ($event) {\n        return _vm.editor.commands.undo();\n      }\n    }\n  }, [_c('span', {\n    staticClass: \"fi fi-rs-undo\"\n  })]), _vm._v(\" \"), _c('button', {\n    attrs: {\n      \"title\": \"Redo\"\n    },\n    on: {\n      \"click\": function ($event) {\n        return _vm.editor.commands.redo();\n      }\n    }\n  }, [_c('span', {\n    staticClass: \"fi fi-rs-redo\"\n  })]), _vm._v(\" \"), _c('button', {\n    class: _vm.mdView ? _vm.activeClass : null,\n    attrs: {\n      \"title\": \"Markdown view\"\n    },\n    on: {\n      \"click\": function ($event) {\n        (_vm.mdView = !_vm.mdView) && (_vm.htmlView = false);\n      }\n    }\n  }, [_c('span', {\n    staticClass: \"fi fi-rs-file-code\"\n  })]), _vm._v(\" \"), !_vm.autosave ? [_c('button', {\n    class: !_vm.pristine ? _vm.activeClass : null,\n    attrs: {\n      \"title\": !_vm.pristine ? 'Saved' : 'Unsaved'\n    },\n    on: {\n      \"click\": _vm.save\n    }\n  }, [_c('span', {\n    staticClass: \"fi fi-rs-disk\"\n  })])] : _vm._e(), _vm._v(\" \"), _c('div', {\n    staticClass: \"c-rich-editor__autosave c-rich-editor__flag\",\n    class: _vm.autosave ? _vm.activeClass : null,\n    on: {\n      \"click\": _vm.toggleAutosave\n    }\n  }, [_vm.autosave ? _c('span', {\n    staticClass: \"fi fi-rs-toggle-on\"\n  }) : _c('span', {\n    staticClass: \"fi fi-rs-toggle-off\"\n  }), _vm._v(\" \"), _c('span', [_vm._v(\"Autosave\")])])], 2), _vm._v(\" \"), _vm.linkUrlVisible ? _c('input', {\n    directives: [{\n      name: \"model\",\n      rawName: \"v-model\",\n      value: _vm.linkUrl,\n      expression: \"linkUrl\"\n    }],\n    ref: \"linkActivator\",\n    attrs: {\n      \"type\": \"text\",\n      \"placeholder\": \"http://\"\n    },\n    domProps: {\n      \"value\": _vm.linkUrl\n    },\n    on: {\n      \"keydown\": [function ($event) {\n        if (!$event.type.indexOf('key') && _vm._k($event.keyCode, \"enter\", 13, $event.key, \"Enter\")) return null;\n        $event.preventDefault();\n        return _vm.setLinkUrl(false);\n      }, function ($event) {\n        if (!$event.type.indexOf('key') && _vm._k($event.keyCode, \"esc\", 27, $event.key, [\"Esc\", \"Escape\"])) return null;\n        return _vm.setLinkUrl(true);\n      }],\n      \"blur\": function ($event) {\n        return _vm.setLinkUrl(false);\n      },\n      \"input\": function ($event) {\n        if ($event.target.composing) return;\n        _vm.linkUrl = $event.target.value;\n      }\n    }\n  }) : _vm._e()]), _vm._v(\" \"), _vm.fromMemory ? _c('div', {\n    staticClass: \"c-rich-editor__memory\"\n  }, [_vm._v(\"Saved on local memory \"), _c('span', {\n    on: {\n      \"click\": function ($event) {\n        return _vm.$emit('clearMemory');\n      }\n    }\n  }, [_vm._v(\"click here\")]), _vm._v(\" to restore original content.\")]) : _vm._e()]), _vm._v(\" \"), !_vm.htmlView && !_vm.mdView ? _c('div', _vm._b({\n    staticClass: \"c-rich-editor__document\"\n  }, 'div', _vm.$attrs, false), [_c('editor-content', {\n    staticClass: \"c-rich-editor__page\",\n    attrs: {\n      \"editor\": _vm.editor\n    }\n  })], 1) : _vm.htmlView ? _c('textarea', _vm._b({\n    staticClass: \"c-rich-editor__textarea\",\n    domProps: {\n      \"value\": _vm.html\n    },\n    on: {\n      \"input\": function ($event) {\n        return _vm.$emit('input', $event);\n      }\n    }\n  }, 'textarea', _vm.$attrs, false)) : _vm.mdView ? _c('textarea', _vm._b({\n    staticClass: \"c-rich-editor__textarea\",\n    domProps: {\n      \"value\": _vm.md\n    },\n    on: {\n      \"input\": function ($event) {\n        return _vm.$emit('input', $event);\n      }\n    }\n  }, 'textarea', _vm.$attrs, false)) : _vm._e()]);\n};\nvar RichEditorvue_type_template_id_32921ccc_staticRenderFns = [];\n\n// EXTERNAL MODULE: ./node_modules/vue/dist/vue.esm.js\nvar vue_esm = __webpack_require__(9840);\n// EXTERNAL MODULE: ./node_modules/@tiptap/vue-2/dist/index.js + 57 modules\nvar dist = __webpack_require__(4642);\n// EXTERNAL MODULE: ./node_modules/@tiptap/starter-kit/dist/index.js + 21 modules\nvar starter_kit_dist = __webpack_require__(5846);\n// EXTERNAL MODULE: ./node_modules/@tiptap/extension-typography/dist/index.js\nvar extension_typography_dist = __webpack_require__(646);\n// EXTERNAL MODULE: ./node_modules/@tiptap/extension-link/dist/index.js + 1 modules\nvar extension_link_dist = __webpack_require__(2127);\n// EXTERNAL MODULE: ./node_modules/@tiptap/extension-underline/dist/index.js\nvar extension_underline_dist = __webpack_require__(8557);\n// EXTERNAL MODULE: ./node_modules/@tiptap/extension-task-list/dist/index.js\nvar extension_task_list_dist = __webpack_require__(4049);\n// EXTERNAL MODULE: ./node_modules/@tiptap/extension-task-item/dist/index.js\nvar extension_task_item_dist = __webpack_require__(3968);\n// EXTERNAL MODULE: ./node_modules/@tiptap/extension-image/dist/index.js\nvar extension_image_dist = __webpack_require__(9622);\n// EXTERNAL MODULE: ./node_modules/@tiptap/extension-highlight/dist/index.js\nvar extension_highlight_dist = __webpack_require__(4225);\n// EXTERNAL MODULE: ./node_modules/@tiptap/extension-code-block-lowlight/dist/index.js\nvar extension_code_block_lowlight_dist = __webpack_require__(907);\n// EXTERNAL MODULE: ./node_modules/@tiptap/core/dist/index.js + 2 modules\nvar core_dist = __webpack_require__(8923);\n// EXTERNAL MODULE: ./node_modules/prosemirror-state/dist/index.js\nvar prosemirror_state_dist = __webpack_require__(5118);\n;// CONCATENATED MODULE: ./src/components/board/lib/tiptapIndent.js\n\n\n/* harmony default export */ const tiptapIndent = (core_dist/* Extension */.YY.create({\n  name: 'indent',\n  addCommands() {\n    const applyIndent = direction => () => _ref => {\n      let {\n        chain,\n        tr,\n        state,\n        dispatch,\n        editor\n      } = _ref;\n      const selection = state.selection;\n      const doc = state.doc;\n      const from = selection.from;\n      const to = selection.to;\n      if (from && to && selection.$from.parent.type.name === 'codeBlock') {\n        const position = {\n          from,\n          to\n        };\n        while (position.from > 0 && !/\\n/.test(doc.textBetween(position.from - 1, position.from))) {\n          position.from -= 1;\n        }\n        while (position.to < doc.nodeSize && !/\\n/.test(doc.textBetween(position.to, position.to + 1))) {\n          position.to += 1;\n        }\n        const selectionText = doc.textBetween(position.from, position.to).split('\\n').map(line => {\n          if (direction > 0) {\n            return '  ' + line;\n          } else {\n            return line.replace(/^( {2}|\\t)/, '');\n          }\n        }).join('\\n');\n\n        /* *\n        console.log('>>>', {\n          state,\n          selection,\n          from,\n          to,\n          selectionText\n        })\n        /* */\n\n        const newTr = state.tr.insertText(selectionText, position.from, position.to);\n        const newFrom = newTr.doc.resolve(position.from);\n        const newTo = newTr.doc.resolve(position.from + selectionText.length);\n        const newSelection = new prosemirror_state_dist/* TextSelection */.U3(newFrom, newTo);\n        dispatch(newTr.setSelection(newSelection));\n        return true;\n      }\n    };\n    return {\n      indent: applyIndent(1),\n      outdent: applyIndent(-1)\n    };\n  },\n  addKeyboardShortcuts() {\n    return {\n      Tab: () => {\n        return this.editor.commands.indent();\n      },\n      'Shift-Tab': () => {\n        return this.editor.commands.outdent();\n      }\n    };\n  }\n}));\n;// CONCATENATED MODULE: ./node_modules/babel-loader/lib/index.js!./node_modules/vue-loader/lib/loaders/templateLoader.js??ruleSet[1].rules[2]!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/components/board/Highlighter.vue?vue&type=template&id=f650695c\nvar Highlightervue_type_template_id_f650695c_render = function render() {\n  var _vm = this,\n    _c = _vm._self._c;\n  return _c('node-view-wrapper', {\n    staticClass: \"c-hightlighter\",\n    class: {\n      'c-hightlighter--fullscreen': _vm.fullScreen\n    },\n    nativeOn: {\n      \"click\": function ($event) {\n        return _vm.click.apply(null, arguments);\n      }\n    }\n  }, [_c('div', {\n    staticClass: \"c-hightlighter__toolbar\",\n    attrs: {\n      \"contenteditable\": \"false\"\n    }\n  }, [_c('div', {\n    staticClass: \"c-field v-radius-bottom-none\"\n  }, [_c('Selector', {\n    staticClass: \"c-hightlighter__selector\",\n    attrs: {\n      \"options\": _vm.options\n    },\n    model: {\n      value: _vm.selectedLanguage,\n      callback: function ($$v) {\n        _vm.selectedLanguage = $$v;\n      },\n      expression: \"selectedLanguage\"\n    }\n  }), _vm._v(\" \"), _vm.isRunable ? _c('button', {\n    staticClass: \"c-hightlighter__button c-action\",\n    on: {\n      \"click\": _vm.toggleCodeView\n    }\n  }, [_vm._v(_vm._s(_vm.showCodeView ? 'Hide code' : 'Show code'))]) : _vm._e(), _vm._v(\" \"), _c('button', {\n    staticClass: \"c-hightlighter__button c-action\",\n    on: {\n      \"click\": function ($event) {\n        _vm.fullScreen = !_vm.fullScreen;\n      }\n    }\n  }, [_vm._v(_vm._s(_vm.fullScreen ? 'Full screen exit' : 'Full screen'))])], 1)]), _vm._v(\" \"), _c('pre', {\n    directives: [{\n      name: \"show\",\n      rawName: \"v-show\",\n      value: !_vm.isRunable || _vm.showCodeView,\n      expression: \"!isRunable || showCodeView\"\n    }],\n    staticClass: \"c-hightlighter__hljs hljs\",\n    class: {\n      'c-hightlighter__hljs--runnable': _vm.isRunable\n    }\n  }, [_c('code', [_c('node-view-content')], 1)]), _vm._v(\" \"), _c('div', {\n    directives: [{\n      name: \"show\",\n      rawName: \"v-show\",\n      value: _vm.isRunable,\n      expression: \"isRunable\"\n    }],\n    ref: \"runner\",\n    staticClass: \"c-hightlighter__runner\",\n    attrs: {\n      \"contenteditable\": \"false\"\n    }\n  }, [_vm.errors.length > 0 ? _c('div', _vm._l(_vm.errors, function (error) {\n    return _c('pre', {\n      staticClass: \"c-hightlighter__error\"\n    }, [_c('code', [_vm._v(_vm._s(error))])]);\n  }), 0) : _vm._e(), _vm._v(\" \"), _vm.warnings.length > 0 ? _c('div', _vm._l(_vm.warnings, function (warn) {\n    return _c('pre', {\n      staticClass: \"c-hightlighter__warning\"\n    }, [_c('code', [_vm._v(_vm._s(warn))])]);\n  }), 0) : _vm._e(), _vm._v(\" \"), _c('div', {\n    ref: \"mounter\",\n    staticClass: \"c-hightlighter__runner__contents\"\n  })])]);\n};\nvar Highlightervue_type_template_id_f650695c_staticRenderFns = [];\n\n// EXTERNAL MODULE: ./node_modules/babel-loader/lib/index.js!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/components/board/Highlighter.vue?vue&type=script&lang=js\nvar Highlightervue_type_script_lang_js = __webpack_require__(8950);\n;// CONCATENATED MODULE: ./src/components/board/Highlighter.vue?vue&type=script&lang=js\n /* harmony default export */ const board_Highlightervue_type_script_lang_js = (Highlightervue_type_script_lang_js/* default */.A); \n// EXTERNAL MODULE: ./node_modules/vue-loader/lib/runtime/componentNormalizer.js\nvar componentNormalizer = __webpack_require__(4486);\n;// CONCATENATED MODULE: ./src/components/board/Highlighter.vue\n\n\n\n\n\n/* normalize component */\n;\nvar component = (0,componentNormalizer/* default */.A)(\n  board_Highlightervue_type_script_lang_js,\n  Highlightervue_type_template_id_f650695c_render,\n  Highlightervue_type_template_id_f650695c_staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* harmony default export */ const Highlighter = (component.exports);\n// EXTERNAL MODULE: ./node_modules/lowlight/index.js + 41 modules\nvar lowlight = __webpack_require__(2027);\n;// CONCATENATED MODULE: ./src/components/board/lib/webcomponent.highlight.js\n/* harmony default export */ function webcomponent_highlight(hljs) {\n  return {\n    subLanguage: 'xml',\n    contains: [hljs.COMMENT('\x3c!--', '--\x3e', {\n      relevance: 10\n    }), {\n      begin: /^(\\s*)(<script>)/gm,\n      end: /^(\\s*)(<\\/script>)/gm,\n      subLanguage: 'javascript',\n      excludeBegin: true,\n      excludeEnd: true\n    }, {\n      begin: /^(?:\\s*)(?:<script\\s+lang=([\"'])ts\\1>)/gm,\n      end: /^(\\s*)(<\\/script>)/gm,\n      subLanguage: 'typescript',\n      excludeBegin: true,\n      excludeEnd: true\n    }, {\n      begin: /^(\\s*)(<style(\\s+scoped)?>)/gm,\n      end: /^(\\s*)(<\\/style>)/gm,\n      subLanguage: 'css',\n      excludeBegin: true,\n      excludeEnd: true\n    }, {\n      begin: /^(?:\\s*)(?:<style(?:\\s+scoped)?\\s+lang=([\"'])(?:s[ca]ss)\\1(?:\\s+scoped)?>)/gm,\n      end: /^(\\s*)(<\\/style>)/gm,\n      subLanguage: 'scss',\n      excludeBegin: true,\n      excludeEnd: true\n    }, {\n      begin: /^(?:\\s*)(?:<style(?:\\s+scoped)?\\s+lang=([\"'])stylus\\1(?:\\s+scoped)?>)/gm,\n      end: /^(\\s*)(<\\/style>)/gm,\n      subLanguage: 'stylus',\n      excludeBegin: true,\n      excludeEnd: true\n    }]\n  };\n}\n// EXTERNAL MODULE: ./node_modules/turndown/lib/turndown.browser.es.js\nvar turndown_browser_es = __webpack_require__(4142);\n;// CONCATENATED MODULE: ./src/components/board/lib/htmlToMarkdown.js\n\nconst turndownService = new turndown_browser_es/* default */.A({\n  headingStyle: 'atx',\n  hr: '---',\n  bulletListMarker: '*',\n  codeBlockStyle: 'fenced',\n  fence: '```',\n  emDelimiter: '_',\n  strongDelimiter: '**',\n  linkStyle: 'inlined'\n});\nturndownService.addRule('strikethrough', {\n  filter: ['s'],\n  replacement: content => {\n    return \"~~\".concat(content, \"~~\");\n  }\n});\nturndownService.addRule('underline', {\n  filter: ['u'],\n  replacement: content => {\n    return \"\\xB7\\xB7\".concat(content, \"\\xB7\\xB7\");\n  }\n});\nturndownService.addRule('mark', {\n  filter: ['mark'],\n  replacement: content => {\n    return \"!!!\".concat(content, \"!!!\");\n  }\n});\nturndownService.addRule('paragraph', {\n  filter: ['p'],\n  replacement: (content, node) => {\n    var _node$parentElement;\n    if (((_node$parentElement = node.parentElement) === null || _node$parentElement === void 0 ? void 0 : _node$parentElement.nodeName) === 'LI') {\n      return content;\n    }\n    return \"\\n\\n\".concat(content, \"\\n\\n\");\n  }\n});\nturndownService.addRule('listItem', {\n  filter: node => {\n    return node.nodeName === 'LI' && !node.hasAttribute('data-type');\n  },\n  replacement: function (content, node, options) {\n    let listItemPrefix = \"\".concat(options.bulletListMarker, \" \");\n    const parentNode = node.parentNode;\n    content = content.replace(/^\\s*\\n+/, '').replace(/\\s*\\n+$/, '\\n').replace(/\\s*\\n/gm, '\\n  ');\n    if ((parentNode === null || parentNode === void 0 ? void 0 : parentNode.nodeName) === 'OL') {\n      const start = parentNode === null || parentNode === void 0 ? void 0 : parentNode.getAttribute('start');\n      const index = Array.prototype.indexOf.call(parentNode.children, node);\n      listItemPrefix = \"\".concat(start ? Number(start) + index : index + 1, \". \");\n    }\n    return \"\".concat(listItemPrefix).concat(content).concat(node.nextSibling && !/\\n$/.test(content) ? '\\n' : '');\n  }\n});\nturndownService.addRule('taskListItem', {\n  filter: node => {\n    return node.nodeName === 'LI' && node.getAttribute('data-type') === 'taskItem';\n  },\n  replacement: function (content, node, options) {\n    let listItemPrefix = \"\".concat(options.bulletListMarker, \" \");\n    const parentNode = node.parentNode;\n    content = content.replace(/^\\s*\\n+/, '').replace(/\\s*\\n+$/, '').replace(/\\s*\\n/gm, '\\n  ');\n    if ((parentNode === null || parentNode === void 0 ? void 0 : parentNode.nodeName) === 'UL') {\n      const checked = node.getAttribute('data-checked');\n      listItemPrefix = \"\".concat(listItemPrefix).concat(checked === 'true' ? '[x]' : '[ ]', \" \");\n    }\n    return \"\".concat(listItemPrefix).concat(content).concat(node.nextSibling && !/\\n$/.test(content) ? '\\n' : '');\n  }\n});\nfunction htmlToMarkdown(html) {\n  return turndownService.turndown(html);\n}\n/* harmony default export */ const lib_htmlToMarkdown = (htmlToMarkdown);\n// EXTERNAL MODULE: ./node_modules/dompurify/dist/purify.js\nvar purify = __webpack_require__(1897);\nvar purify_default = /*#__PURE__*/__webpack_require__.n(purify);\n// EXTERNAL MODULE: ./node_modules/marked/lib/marked.esm.js\nvar marked_esm = __webpack_require__(5990);\n;// CONCATENATED MODULE: ./src/components/board/lib/markdownToHtml.js\n\n\nmarked_esm/* marked */.xI.use({\n  gfm: true,\n  extensions: [{\n    name: 'underline',\n    level: 'inline',\n    start(src) {\n      var _src$match;\n      const start = (_src$match = src.match(/··[^··\\n]/)) === null || _src$match === void 0 ? void 0 : _src$match.index;\n      return start;\n    },\n    tokenizer(src, tokens) {\n      const rule = /^··([^··\\n]+)··/;\n      const match = rule.exec(src);\n      if (match) {\n        const token = {\n          type: 'underline',\n          raw: match[0],\n          text: this.lexer.inlineTokens(match[1].trim()),\n          tokens: []\n        };\n        return token;\n      }\n    },\n    renderer(token) {\n      return \"<u>\".concat(this.parser.parseInline(token.text), \"</u>\");\n    }\n  }, {\n    name: 'strike',\n    level: 'inline',\n    start(src) {\n      var _src$match2;\n      const start = (_src$match2 = src.match(/~~[^~~\\n]/)) === null || _src$match2 === void 0 ? void 0 : _src$match2.index;\n      return start;\n    },\n    tokenizer(src, tokens) {\n      const rule = /^~~([^~~\\n]+)~~/;\n      const match = rule.exec(src);\n      if (match) {\n        const token = {\n          type: 'strike',\n          raw: match[0],\n          text: this.lexer.inlineTokens(match[1].trim()),\n          tokens: []\n        };\n        return token;\n      }\n    },\n    renderer(token) {\n      return \"<s>\".concat(this.parser.parseInline(token.text), \"</s>\");\n    }\n  }, {\n    name: 'mark',\n    level: 'inline',\n    start(src) {\n      var _src$match3;\n      const start = (_src$match3 = src.match(/!!![^!!!\\n]/)) === null || _src$match3 === void 0 ? void 0 : _src$match3.index;\n      return start;\n    },\n    tokenizer(src, tokens) {\n      const rule = /^!!!([^!!!\\n]+)!!!/;\n      const match = rule.exec(src);\n      if (match) {\n        const token = {\n          type: 'mark',\n          raw: match[0],\n          text: this.lexer.inlineTokens(match[1].trim()),\n          tokens: []\n        };\n        return token;\n      }\n    },\n    renderer(token) {\n      return \"<mark>\".concat(this.parser.parseInline(token.text), \"</mark>\");\n    }\n  }, {\n    name: 'tasklist',\n    level: 'block',\n    start(src) {\n      var _src$match4;\n      const start = (_src$match4 = src.match(/\\* \\[( |x)\\] /)) === null || _src$match4 === void 0 ? void 0 : _src$match4.index;\n      return start;\n    },\n    tokenizer(src, tokens) {\n      const rule = /^(?:\\* \\[( |x)\\] ([^\\n]*)(?:\\n|$))+/;\n      const match = rule.exec(src);\n      if (match) {\n        const token = {\n          type: 'tasklist',\n          raw: match[0],\n          text: match[0].trim(),\n          tokens: []\n        };\n        this.lexer.inline(token.text, token.tokens);\n        return token;\n      }\n    },\n    renderer(token) {\n      return \"<ul data-type=\\\"taskList\\\">\".concat(this.parser.parseInline(token.tokens), \"\\n</ul>\\n\");\n    }\n  }, {\n    name: 'tasklistitem',\n    level: 'inline',\n    childTokens: ['item'],\n    start(src) {\n      var _src$match5;\n      const start = (_src$match5 = src.match(/^\\* \\[( |x)\\] /)) === null || _src$match5 === void 0 ? void 0 : _src$match5.index;\n      return start;\n    },\n    tokenizer(src, tokens) {\n      const rule = /^(?:\\* \\[( |x)\\] ([^\\n]*)(?:\\n|$))/;\n      const match = rule.exec(src);\n      if (match) {\n        return {\n          type: 'tasklistitem',\n          raw: match[0],\n          checked: !!match[1].trim(),\n          item: this.lexer.inlineTokens(match[2].trim())\n        };\n      }\n    },\n    renderer(token) {\n      return \"\\n<li data-checked=\\\"\".concat(token.checked.toString(), \"\\\" data-type=\\\"taskItem\\\"><p>\").concat(this.parser.parseInline(token.item), \"</p></li>\");\n    }\n  }],\n  walkTokens(token) {\n    if (token.type === 'strong') {\n      token.tokens = this.Lexer.lexInline(token.text);\n    }\n  }\n});\nfunction markdownToHtml(markdown) {\n  return purify_default().sanitize(marked_esm/* marked */.xI.parse(markdown), {\n    USE_PROFILES: {\n      html: true\n    }\n  });\n}\n/* harmony default export */ const lib_markdownToHtml = (markdownToHtml);\n// EXTERNAL MODULE: ./node_modules/highlight.js/styles/atom-one-dark-reasonable.css\nvar atom_one_dark_reasonable = __webpack_require__(7856);\n;// CONCATENATED MODULE: ./node_modules/babel-loader/lib/index.js!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/components/board/RichEditor.vue?vue&type=script&lang=js\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// import Section from './tiptapSection'\n// import Keymap from './tiptapKeymap'\n// import Iframe from './tiptapIframe'\n\n\n\n// const coreExtensions = Object.keys(extensions).filter(key => key !== 'Keymap' ).map(key => extensions[key])\n// coreExtensions.push(Keymap)\n\n/*\nconst Document = Node.create({\n  name: 'doc',\n  topNode: true,\n  content: 'section+'\n})\n*/\n\nlowlight/* lowlight */.l.registerLanguage('webcomponent', webcomponent_highlight);\nlowlight/* lowlight */.l.registerLanguage('html', webcomponent_highlight);\nlowlight/* lowlight */.l.registerAlias('webcomponent', 'vue');\n// lowlight.registerAlias('xml', 'html')\n\n/* harmony default export */ const RichEditorvue_type_script_lang_js = (vue_esm[\"default\"].component('RichEditor', {\n  components: {\n    EditorContent: dist/* EditorContent */.$Z\n  },\n  props: {\n    value: {\n      type: String,\n      default: null\n    },\n    fromMemory: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data: () => ({\n    pristine: true,\n    autosave: localStorage.getItem('autosave') === 'true',\n    html: undefined,\n    editor: null,\n    htmlView: false,\n    mdView: false,\n    linkUrl: null,\n    linkUrlVisible: false,\n    activeClass: 'active',\n    md: undefined\n  }),\n  watch: {\n    value: {\n      handler(value, oldValue) {\n        this.refresh(value);\n        this.pristine = true;\n      }\n    }\n  },\n  created() {\n    window.RichEditor = this;\n    this.editor = new dist/* Editor */.KE({\n      content: this.html,\n      enableCoreExtensions: true,\n      extensions: [\n      // ...coreExtensions,\n      starter_kit_dist/* default */.A.configure({\n        // document: false,\n        heading: {\n          levels: [1, 2, 3, 4]\n        },\n        link: {\n          openOnClick: false\n        },\n        codeBlock: false\n      }), extension_typography_dist/* default */.Ay, extension_link_dist/* default */.Ay.configure({\n        openOnClick: false\n      }), extension_underline_dist/* default */.A, extension_task_list_dist/* default */.A.configure({\n        HTMLAttributes: {\n          class: 'c-rich-editor__task-list'\n        }\n      }), extension_task_item_dist/* default */.Ay.configure({\n        HTMLAttributes: {\n          class: 'c-rich-editor__task-item'\n        }\n      }),\n      // Document,\n      tiptapIndent, extension_highlight_dist/* default */.Ay,\n      // Iframe,\n      // Section,\n      extension_image_dist/* default */.Ay.configure({\n        allowBase64: true,\n        inline: true\n      }), extension_code_block_lowlight_dist/* default */.A.extend({\n        addNodeView() {\n          return (0,dist/* VueNodeViewRenderer */.$7)(Highlighter);\n        }\n      }).configure({\n        defaultLanguage: 'auto',\n        lowlight: lowlight/* lowlight */.l\n      })],\n      onUpdate: this.onUpdate\n    });\n    this.refresh(this.value);\n  },\n  mounted() {\n    this.$el.addEventListener('keydown', this.onKeydown);\n  },\n  beforeDestroy() {\n    this.$el.removeEventListener('keydown', this.onKeydown);\n    this.editor.destroy();\n  },\n  methods: {\n    /*\n    addIframe() {\n      const url = window.prompt('URL')\n      if (url) {\n        this.editor.chain().focus().setIframe({ src: url }).run()\n      }\n    },\n    */\n    toggleAutosave() {\n      this.autosave = !this.autosave;\n      localStorage.setItem('autosave', this.autosave);\n    },\n    onKeydown(event) {\n      if (event.key === 's' && event.metaKey) {\n        event.preventDefault();\n        this.save();\n      }\n    },\n    onUpdate() {\n      const html = this.editor.getHTML();\n      this.html = html;\n      this.md = lib_htmlToMarkdown(html);\n      this.pristine = false;\n      if (this.autosave) this.save();\n    },\n    refresh(value) {\n      if (this.md !== value) {\n        this.html = lib_markdownToHtml(value);\n        this.md = value;\n        if (this.editor.getHTML() !== this.html) {\n          /*\n          const parser = new DOMParser()\n          const serializer = new XMLSerializer()\n          const domObject = parser.parseFromString( this.html || '', 'text/html')\n          const sections = domObject.body.childNodes\n          sections.forEach(child => {\n            if (!child.textContent.trim()) return\n            const section = document.createElement('section')\n            section.append(child.cloneNode(true))\n            child.replaceWith(section)\n          })\n          const sectioned = serializer.serializeToString(domObject)\n          this.editor.commands.setContent(sectioned)\n          */\n          this.editor.commands.setContent(this.html);\n        }\n      }\n    },\n    save() {\n      this.pristine = true;\n      this.$emit('input', this.md);\n    },\n    toggleLinkUrl() {\n      this.linkUrl = null;\n      this.linkUrlVisible = !this.linkUrlVisible;\n      if (this.linkUrlVisible) {\n        this.$nextTick(() => {\n          if (this.$refs.linkActivator) {\n            this.$refs.linkActivator.focus();\n          }\n        });\n      }\n      if (this.editor.isActive('link')) {\n        this.linkUrl = this.editor.getAttributes('link').href;\n      }\n    },\n    toggleEditable() {\n      this.editor.setEditable(!this.editor.isEditable);\n    },\n    setLinkUrl(cancel) {\n      if (!cancel) {\n        this.editor.commands.focus();\n        this.editor.commands.setLink({\n          href: this.linkUrl\n        });\n      }\n      this.toggleLinkUrl();\n    },\n    clearLinkUrl() {\n      this.editor.commands.setLink({\n        href: null\n      });\n      this.toggleLinkUrl();\n    }\n  }\n}));\n;// CONCATENATED MODULE: ./src/components/board/RichEditor.vue?vue&type=script&lang=js\n /* harmony default export */ const board_RichEditorvue_type_script_lang_js = (RichEditorvue_type_script_lang_js); \n;// CONCATENATED MODULE: ./src/components/board/RichEditor.vue\n\n\n\n\n\n/* normalize component */\n;\nvar RichEditor_component = (0,componentNormalizer/* default */.A)(\n  board_RichEditorvue_type_script_lang_js,\n  RichEditorvue_type_template_id_32921ccc_render,\n  RichEditorvue_type_template_id_32921ccc_staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* harmony default export */ const RichEditor = (RichEditor_component.exports);\n;// CONCATENATED MODULE: ./node_modules/babel-loader/lib/index.js!./node_modules/vue-loader/lib/loaders/templateLoader.js??ruleSet[1].rules[2]!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/components/board/SnapViewer.vue?vue&type=template&id=1f9b3c52\nvar SnapViewervue_type_template_id_1f9b3c52_render = function render() {\n  var _vm = this,\n    _c = _vm._self._c,\n    _setup = _vm._self._setupProxy;\n  return _c('div', {\n    staticClass: \"c-snap-viewer\"\n  }, [_c('div', {\n    staticClass: \"c-snap-viewer__page\",\n    domProps: {\n      \"innerHTML\": _vm._s(_vm.html)\n    }\n  })]);\n};\nvar SnapViewervue_type_template_id_1f9b3c52_staticRenderFns = [];\n\n// EXTERNAL MODULE: ./node_modules/babel-loader/lib/index.js!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/components/board/SnapViewer.vue?vue&type=script&lang=js\nvar SnapViewervue_type_script_lang_js = __webpack_require__(3737);\n;// CONCATENATED MODULE: ./src/components/board/SnapViewer.vue?vue&type=script&lang=js\n /* harmony default export */ const board_SnapViewervue_type_script_lang_js = (SnapViewervue_type_script_lang_js/* default */.A); \n;// CONCATENATED MODULE: ./src/components/board/SnapViewer.vue\n\n\n\n\n\n/* normalize component */\n;\nvar SnapViewer_component = (0,componentNormalizer/* default */.A)(\n  board_SnapViewervue_type_script_lang_js,\n  SnapViewervue_type_template_id_1f9b3c52_render,\n  SnapViewervue_type_template_id_1f9b3c52_staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* harmony default export */ const SnapViewer = (SnapViewer_component.exports);\n// EXTERNAL MODULE: ./node_modules/axios/index.js\nvar axios = __webpack_require__(8266);\nvar axios_default = /*#__PURE__*/__webpack_require__.n(axios);\n;// CONCATENATED MODULE: ./node_modules/babel-loader/lib/index.js!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/components/board/FileLoader.vue?vue&type=script&lang=js\n\n\n\n\n\nconst API = axios_default().create({\n  baseURL: 'http://localhost:3036/api'\n});\n/* harmony default export */ const FileLoadervue_type_script_lang_js = ({\n  name: 'FileLoader',\n  components: {\n    Selector: Selector/* default */.A,\n    RichEditor: RichEditor,\n    SnapViewer: SnapViewer\n  },\n  props: {\n    path: String,\n    import: Function\n  },\n  data: () => ({\n    md: undefined,\n    snap: undefined,\n    fromMemory: false,\n    usememory: !APP/* default */.A.development\n  }),\n  created() {\n    this.open();\n  },\n  mounted() {\n    window.FileLoader = this;\n  },\n  methods: {\n    onClearMemory() {\n      localStorage.removeItem('FrontBoardSave' + this.path);\n      this.open();\n    },\n    open() {\n      this.md = undefined;\n      this.snap = undefined;\n      const type = /\\.snap$/.test(this.path) ? 'snap' : 'md';\n      if (history.pushState) {\n        const newurl = window.location.protocol + '//' + window.location.host + window.location.pathname + '?frontboard=' + this.path;\n        window.history.pushState({\n          path: newurl\n        }, '', newurl);\n      }\n      const memory = this.usememory && localStorage.getItem('FrontBoardSave' + this.path);\n      this.fromMemory = !!memory;\n      if (this.usememory) {\n        if (memory) {\n          this[type] = memory;\n        } else {\n          console.info('Read from local storage', this.path, this);\n          this.import().then(contents => {\n            this[type] = contents;\n          });\n        }\n      } else {\n        API.get('files/' + this.path).then(response => {\n          if (!response.data && this.path === '.whiteboard.md') {\n            this.import().then(contents => {\n              this[type] = contents;\n            });\n          } else {\n            this[type] = response.data;\n          }\n        });\n      }\n    },\n    save() {\n      if (this.usememory) {\n        localStorage.setItem('FrontBoardSave' + this.path, this.md);\n        this.fromMemory = true;\n        console.info('Saved to local storage');\n      } else {\n        API.put('files/' + this.path, this.md).then(response => {\n          console.info('Saved');\n        });\n      }\n    }\n  }\n});\n;// CONCATENATED MODULE: ./src/components/board/FileLoader.vue?vue&type=script&lang=js\n /* harmony default export */ const board_FileLoadervue_type_script_lang_js = (FileLoadervue_type_script_lang_js); \n;// CONCATENATED MODULE: ./src/components/board/FileLoader.vue\n\n\n\n\n\n/* normalize component */\n;\nvar FileLoader_component = (0,componentNormalizer/* default */.A)(\n  board_FileLoadervue_type_script_lang_js,\n  FileLoadervue_type_template_id_0d1a9901_render,\n  FileLoadervue_type_template_id_0d1a9901_staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* harmony default export */ const FileLoader = (FileLoader_component.exports);\n// EXTERNAL MODULE: ./src/components/DateField.vue + 4 modules\nvar DateField = __webpack_require__(8931);\n// EXTERNAL MODULE: ./src/components/Datagrid.vue + 3 modules\nvar Datagrid = __webpack_require__(1996);\n// EXTERNAL MODULE: ./src/components/Palette.vue + 4 modules\nvar Palette = __webpack_require__(1596);\n// EXTERNAL MODULE: ./src/services/palette.js\nvar palette = __webpack_require__(5749);\n;// CONCATENATED MODULE: ./node_modules/babel-loader/lib/index.js!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/components/board/Frontboard.vue?vue&type=script&lang=js\n\n\n\n\n\n\nconst Frontboardvue_type_script_lang_js_API = axios_default().create({\n  baseURL: 'http://localhost:3035/api'\n});\nfunction filesMenu(name, files) {\n  return {\n    text: name,\n    opened: false,\n    active: false,\n    group: name,\n    options: files.map(file => {\n      file.group = name;\n      return {\n        text: file.name.replace(/\\.(spec\\.js\\.snap|md)$/, ''),\n        active: false,\n        group: file.group,\n        loader: {\n          component: FileLoader,\n          attrs: {\n            path: file.path,\n            import: file.import\n          }\n        }\n      };\n    })\n  };\n}\n/* harmony default export */ const Frontboardvue_type_script_lang_js = ({\n  name: 'Frontboard',\n  components: {\n    Palette: Palette/* default */.A,\n    FileLoader: FileLoader,\n    DateField: DateField/* default */.A,\n    Datagrid: Datagrid/* default */.A\n  },\n  props: {\n    path: {\n      type: String,\n      default: '.whiteboard.md'\n    }\n  },\n  data: () => ({\n    palette: palette/* default */.A,\n    files: [],\n    isHidden: false,\n    current: undefined,\n    options: [],\n    darkModeActive: localStorage.getItem('darkmode') === 'true'\n  }),\n  created() {\n    palette/* default */.A.darkmode = this.darkModeActive;\n    this.mountMenu();\n  },\n  mounted() {\n    if (this.path) {\n      this.loadDoc(this.path);\n    }\n  },\n  computed: {\n    title() {\n      return this.current ? this.current.attrs.path : '';\n    }\n  },\n  methods: {\n    darkmodeToggle() {\n      this.darkModeActive = !this.darkModeActive;\n      palette/* default */.A.darkmode = this.darkModeActive;\n      localStorage.setItem('darkmode', this.darkModeActive);\n    },\n    load(loader) {\n      const group = this.options.find(option => option.group === loader.group);\n      if (group) {\n        group.opened = true;\n        group.active = true;\n      }\n      this.current = loader;\n    },\n    loadDoc(path) {\n      const file = this.files.find(file => file.path === path);\n      if (file) {\n        this.load({\n          component: FileLoader,\n          group: file.group,\n          attrs: {\n            path: file.path,\n            import: file.import\n          }\n        });\n      } else {\n        throw new Error('File not exist', path);\n      }\n    },\n    toggle() {\n      this.isHidden = !this.isHidden;\n    },\n    exit() {\n      this.isHidden = true;\n      if (history.pushState) {\n        const newurl = window.location.protocol + '//' + window.location.host + window.location.pathname;\n        window.history.pushState({\n          path: newurl\n        }, '', newurl);\n      }\n    },\n    mountMenu() {\n      const files = [];\n      function parseContext(base, context) {\n        return context.keys().map(path => {\n          const fullPath = [base, path].pathJoin();\n          const name = /README\\.md$/.test(path) ? path.split('/').slice(-2)[0] : path.split('/').slice(-1)[0];\n          const file = {\n            name,\n            path: fullPath,\n            import: async () => {\n              const module = await context(path);\n              return typeof module === 'string' ? module : module.default;\n            }\n          };\n          files.push(file);\n          return file;\n        });\n      }\n      this.files = files;\n      const frontend = [...parseContext('docs', __webpack_require__(3214))];\n      const snapshots = [...parseContext('tests', __webpack_require__(7664))];\n\n      // Refactor in two blocks, atomize menu composition\n\n      this.options.push(filesMenu('Docs', frontend));\n      this.options.push(filesMenu('Snapshots', snapshots));\n\n      // this.options.push(filesMenu('Docs', docs))\n\n      const whiteBoard = {\n        name: 'Whiteboard',\n        path: '.whiteboard.md',\n        import: async () => await __webpack_require__.e(/* import() */ 515).then(__webpack_require__.t.bind(__webpack_require__, 5515, 17)).then(module => module.default)\n      };\n      files.push(whiteBoard);\n      this.options.push({\n        text: 'Whiteboard',\n        loader: {\n          component: FileLoader,\n          attrs: {\n            path: whiteBoard.path,\n            import: whiteBoard.import\n          }\n        }\n      });\n    }\n  }\n});\n;// CONCATENATED MODULE: ./src/components/board/Frontboard.vue?vue&type=script&lang=js\n /* harmony default export */ const board_Frontboardvue_type_script_lang_js = (Frontboardvue_type_script_lang_js); \n;// CONCATENATED MODULE: ./src/components/board/Frontboard.vue\n\n\n\n\n\n/* normalize component */\n;\nvar Frontboard_component = (0,componentNormalizer/* default */.A)(\n  board_Frontboardvue_type_script_lang_js,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* harmony default export */ const Frontboard = (Frontboard_component.exports);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///1938\n")},7664:(Q,F,U)=>{var B={"./components/__snapshots__/Datagrid.spec.js.snap":[4413,413]};function n(Q){if(!U.o(B,Q))return Promise.resolve().then((()=>{var F=new Error("Cannot find module '"+Q+"'");throw F.code="MODULE_NOT_FOUND",F}));var F=B[Q],n=F[0];return U.e(F[1]).then((()=>U(n)))}n.keys=()=>Object.keys(B),n.id=7664,Q.exports=n}}]);