"use strict";(self.webpackChunkfrontboard=self.webpackChunkfrontboard||[]).push([[420],{5420:n=>{n.exports="# Selector component\n\n`Selector` `c-selector`\n\nThe Selector component make it easy to create any kind of dropdown options and supports:\n\n* Multiple selection\n* Groping options\n* Filtering/autosugest\n* Nested options - multilevel dropdown\n* Custom datasets using optionText optionValue props\n* Complete keyboard navigation\n* Many slots: handler, handler items, append/prepend options, option content\n\n## Basic use example\n\n```html\n<template>\n  <Selector :options=\"options\" v-model=\"selection\" />\n  <div>Current selection: {{ selection }}</div>\n</template>\n<script>\n({\n  options: ['Option 1','Option 2','Option 3','Option 4'],\n  selection: 'Option 3'\n})\n<\/script>\n```\n\n## Advanced options all together\n\n```html\n<template>\n  <Selector\n    :options=\"options\"\n    v-model=\"selection\"\n    filterable\n    multilevel\n    grouped\n    style=\"width: 400px;\"\n    multiple\n  />\n</template>\n<script>\n({\n  options: [\n    {\n      text: 'Group multilevel',\n      options: ['M 1', 'M 2', 'M 3', 'M 4', 'M 5'].map(option => ({\n        text: option,\n        options: ['1', '2', '3'].map(subOption => ({\n          text: option.replace(' ', '') + ' Option ' + subOption,\n          options: ['1sub', '2sub', '3sub'].map(subOption => ({\n            text: option.replace(' ', '') + ' Option ' + subOption,\n            value: option.replace(' ', '') + ' Option ' + subOption\n          }))\n        }))\n      }))\n    },\n    {\n      text: 'Group A',\n      options: ['GA 1', 'GA 2', 'GA 3'].map(option => ({\n          text: option,\n          options: ['1', '2', '3', '4', '5', '6'].map(subOption => ({\n            text: option.replace(' ', '') + ' Option ' + subOption,\n            value: option.replace(' ', '') + ' Option ' + subOption\n          }))\n        }))\n    },\n    {\n      text: 'Group B',\n      options: ['GB 1', 'GB 2', 'GB 3', 'GB 4', 'GB 5'].map(option => ({\n          text: option,\n          options: ['1', '2', '3'].map(subOption => ({\n            text: option.replace(' ', '') + ' Option ' + subOption,\n            value: option.replace(' ', '') + ' Option ' + subOption\n          }))\n        }))\n    }\n  ],\n  selection: []\n})\n<\/script>\n```"}}]);