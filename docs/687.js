"use strict";(self.webpackChunkfrontboard=self.webpackChunkfrontboard||[]).push([[687],{687:n=>{n.exports='<template>\n  <Selector\n    class="c-relationship"\n    optionValue="uid"\n    optionText="name"\n    useObject\n    filtered\n    :value="value"\n    :options="options"\n    :loading="loading"\n    @input="selectOption"\n    @open="onOpen"\n  >\n    <template #value="{option: entity}">\n      <SchemeChip v-if="entity" :entity="entity"/>\n    </template>\n    <template #option="{option: entity}">\n      <SchemeChip :entity="entity"/> ({{ entity.Class.name }})\n    </template>\n  </Selector>\n</template>\n\n<script>\n\nimport Scheme from \'services/Scheme\'\nimport Selector from \'components/selector/Selector\'\nimport SchemeChip from \'components/scheme/SchemeChip\'\n\nexport default {\n  name: \'Relationship\',\n  components: {\n    Selector,\n    SchemeChip\n  },\n  props: {\n    schemeClass: Function,\n    useOptions: Array,\n    value: Object\n  },\n  data: () => ({\n    options: [],\n    loading: undefined\n  }),\n  methods: {\n    onOpen() {\n      window.Relationship = this\n      console.log(\'useOptions\', this.useOptions)\n      this.getOptions()\n    },\n    getOptions() {\n      if (this.useOptions) {\n        this.options = this.useOptions\n      } else {\n        this.loading = true\n        this.schemeClass.list().then(options => {\n          this.options = options\n        }).finally(() => {\n          this.loading = false\n        })\n      }\n    },\n    selectOption(value) {\n      console.log(\'set relationship\', value)\n      this.$emit(\'input\', value)\n    }\n  }\n}\n<\/script>\n'}}]);