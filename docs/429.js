"use strict";(self.webpackChunkfrontboard=self.webpackChunkfrontboard||[]).push([[429],{1429:t=>{t.exports='# Buttons\r\n\r\n`c-action`\r\n\r\nButtons uses only CSS classes (not component needed) and can have three **variations**\r\n\r\n* `v-default`\r\n* `v-semi`\r\n* `v-solid`\r\n\r\nThe color **tones** depends on Palette colors definitions using `t-colorToneName` , like `t-succes`\r\n\r\n```html\r\n<template>\r\n  <button type="button" class="c-action t-success">Default</button>\r\n  <button type="button" class="c-action v-semi t-success">Semi</button>\r\n  <button type="button" class="c-action v-solid t-success">Solid</button>\r\n</template>\r\n```\r\n\r\n## All buttons variations for all available tones\r\n\r\n```html\r\n<template>\r\n  <label><input type="checkbox" v-model="APP.services.palette.showFixedStatuses"> All status</label><br><br>\r\n  <div class="--toolbar" :class="{\'v-invert\': APP.services.palette.invert}">\r\n    <template v-for="variation in [\'default\', \'semi\', \'solid\']">\r\n      <br>\r\n      <h3>{{ variation.capitalize() }}</h3>\r\n      <table>\r\n        <tr>\r\n          <td></td>\r\n          <td v-for="colorTone in APP.services.palette.colorTones">{{ colorTone.name.capitalize() }}</td>\r\n        </tr>\r\n        <tr v-for="status in APP.services.palette.statuses">\r\n          <td>{{ status.capitalize() }}</td>\r\n          <td v-for="colorTone in APP.services.palette.colorTones">\r\n            <button\r\n              :class="[\r\n                \'c-action\',\r\n                {[\'t-\' + colorTone.name]: colorTone.name !== \'default\'},\r\n                {[\'v-\' + variation]: variation !== \'default\'},\r\n                {[\'s-\' + status]: status !== \'default\'},\r\n              ]"\r\n            >\r\n              <span class="fi fi-rs-picture"></span>{{ colorTone.name }}\r\n            </button>\r\n          </td>\r\n        </tr>\r\n      </table>\r\n    </template>\r\n  </div>\r\n</template>\r\n```'}}]);