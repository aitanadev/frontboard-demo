"use strict";(self.webpackChunkfrontboard=self.webpackChunkfrontboard||[]).push([[879],{8879:e=>{e.exports='<template>\n  <div class="c-calendar">\n    <table>\n      <thead>\n        <tr>\n          <td colspan="8">{{ calendar.selector.toLocaleString(\'default\', { month: \'long\' }).capitalize() }} {{ year }}</td>\n        </tr>\n        <tr>\n          <th>WÂº</th>\n          <th v-for="weekDay in calendar.weekDays" :key="weekDay">{{ [\'Su\', \'Mo\', \'Tu\', \'We\', \'Th\', \'Fr\', \'Sa\'][weekDay] }}</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr v-for="week in calendar" :key="week.weekNumber">\n          <th>{{ week.weekNumber }}</th>\n          <td\n            v-for="weekDay in week.days"\n            :key="weekDay.toString()"\n            :active="isSelected(weekDay)"\n            :class="{\'--weekend\': weekDay.getUTCDay() === 0 || weekDay.getUTCDay() === 6}"\n          >\n            <button type="button" class="c-action">{{ weekDay.getUTCDate() }}</button>\n            <template v-for="selection in selections">\n              <div v-if="isInSelection(weekDay, selection)">{{ selection.name }}</div>\n            </template>\n          </td>\n        </tr>\n      </tbody>\n      <tfoot>\n        <td colspan="8"></td>\n      </tfoot>\n    </table>\n    <div class="c-timeline">\n      <template v-for="selection in selections">\n        <div class="c-timeline__info">{{ calendar.selector.toLocaleString(\'default\', { month: \'long\' }).capitalize() }} {{ year }} {{ selection.name }}</div>\n        <div class="c-timeline__selection">\n          <div class="c-timeline__week" v-for="week in calendar" :key="week.weekNumber">\n            <div\n              v-for="weekDay in week.days"\n              :key="weekDay.toString()"\n              :active="isInSelection(weekDay, selection)"\n              first\n              :dayNumber="weekDay.getUTCDay()"\n              class="c-timeline__day"\n            >\n              <button type="button" class="c-action">{{ weekDay.getUTCDate() }}</button>\n            </div>\n          </div>\n        </div>\n      </template>\n    </div>\n  </div>\n</template>\n\n<script>\n\nexport default {\n  name: \'Calendar\',\n\n  props: {\n  },\n\n  data: () => ({\n    mondays: true,\n    year: 2024,\n    month: 2,\n    dayNames: [\'Su\', \'Mo\', \'Tu\', \'We\', \'Th\', \'Fr\', \'Sa\'],\n    selections: [\n      {\n        name: \'one\',\n        start: new Date(2024, 2, 27),\n        end: new Date(2024, 2, 29, 24),\n        pattern: \'* * * * *\'\n      }, {\n        name: \'two\',\n        start: new Date(2024, 2, 2),\n        end: new Date(2024, 2, 7, 24)\n      }, {\n        name: \'three\',\n        start: new Date(2024, 2, 3),\n        end: new Date(2024, 2, 4, 24)\n      }, {\n        name: \'four\',\n        start: new Date(2024, 2, 18),\n        end: new Date(2024, 2, 18, 24)\n      }\n    ]\n  }),\n\n  created() {\n    window.Calendar = this\n  },\n\n  mounted() {\n  },\n\n  beforeDestroy() {\n  },\n  computed: {\n    calendar() {\n      return Date.getCalendar(this.year, this.month, this.mondays ? 1 : 0)\n    }\n  },\n\n  methods: {\n    isInSelection(date, selection) {\n      return date.getTime() >= selection.start.getTime() && date.getTime() <= selection.end.getTime()\n    },\n    isSelected(date) {\n      return this.selections.some(selection => this.isInSelection(date, selection))\n    }\n  }\n}\n<\/script>\n'}}]);