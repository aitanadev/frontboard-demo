"use strict";(self.webpackChunkfrontboard=self.webpackChunkfrontboard||[]).push([[758],{2758:t=>{t.exports='# Buttons\n\n`c-action`\n\nButtons uses only CSS classes (not component needed) and can have three **variations**\n\n* `v-default`\n* `v-semi`\n* `v-solid`\n\nThe color **tones** depends on Palette colors definitions using `t-colorToneName` , like `t-succes`\n\n```html\n<template>\n  <button type="button" class="c-action t-success">Default</button>\n  <button type="button" class="c-action v-semi t-success">Semi</button>\n  <button type="button" class="c-action v-solid t-success">Solid</button>\n</template>\n```\n\n## All buttons variations for all available tones\n\n```html\n<template>\n  <label><input type="checkbox" v-model="APP.services.palette.showFixedStatuses"> All status</label><br><br>\n  <div class="--toolbar" :class="{\'v-invert\': APP.services.palette.invert}">\n    <template v-for="variation in [\'default\', \'semi\', \'solid\']">\n      <br>\n      <h3>{{ variation.capitalize() }}</h3>\n      <table>\n        <tr>\n          <td></td>\n          <td v-for="colorTone in APP.services.palette.colorTones">{{ colorTone.name.capitalize() }}</td>\n        </tr>\n        <tr v-for="status in APP.services.palette.statuses">\n          <td>{{ status.capitalize() }}</td>\n          <td v-for="colorTone in APP.services.palette.colorTones">\n            <button\n              :class="[\n                \'c-action\',\n                {[\'t-\' + colorTone.name]: colorTone.name !== \'default\'},\n                {[\'v-\' + variation]: variation !== \'default\'},\n                {[\'s-\' + status]: status !== \'default\'},\n              ]"\n            >\n              <span class="fi fi-rs-picture"></span>{{ colorTone.name }}\n            </button>\n          </td>\n        </tr>\n      </table>\n    </template>\n  </div>\n</template>\n```'}}]);